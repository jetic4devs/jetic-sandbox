{
  "type" : "SOURCE_DEFINITIONS",
  "properties" : {
    "content" : "import org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.ExchangePattern;\nimport org.apache.camel.support.DefaultExchange;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.util.*;\nimport java.util.concurrent.ConcurrentHashMap;\n\npublic class LanguageProviderCache extends RouteBuilder {\n\n  private final Map<String, List<String>> providerCache = new ConcurrentHashMap<>();\n\tprivate final Set<String> languageProviders = new HashSet<String>();\n\t//private final HashMap<String, Object> languageProviderConfig = new HashMap<String, Object>();\n\t\n  @Override\n  public void configure() {\n    getContext().getRegistry().bind(\"providerGetters\", new ProviderGetters());\n  }\n\n  public class ProviderGetters {\n\t\t\n\t\tpublic Set getProviders(Exchange exchange) throws Exception {\n\t\t\tif (providerCache.isEmpty()) {\n\t\t\t\tlog.info(\"Providers have not been loaded yet, loading provider cache.\");\n\t\t\t\tloadProviders(exchange);\n\t\t\t}\n\n\t\t\treturn languageProviders;\n\t\t}\n\n\t\tpublic void loadProviders(Exchange exchange) throws Exception {\n\t\t\tCamelContext context = exchange.getContext();\n\t\t\tProducerTemplate t = context.createProducerTemplate();\n\t\t\texchange.setPattern(ExchangePattern.InOut);\n\n\t\t\texchange = t.send(\"direct:getSupportedLanguages\", exchange);\n\t\t\tObjectMapper mapper = new ObjectMapper();\n\t\t\tHashMap<String, Object> langProviderResp = mapper.readValue((String)exchange.getOut().getBody(), HashMap.class);\n\n\t\t\tArrayList<HashMap<String, Object>> langProviderList = (ArrayList)langProviderResp.get(\"data\");\n\t\t\t\t\n\t\t\tfor (int i = 0; i < langProviderList.size(); i++) {\n\t\t\t\tMap<String, Object> langPrvdr = langProviderList.get(i);\n\t\t\t\tif ((Boolean)langPrvdr.get(\"supports_text\") == true) {\n\t\t\t\t\tHashMap<String, String> _providers = (HashMap)langPrvdr.get(\"providers\");\n\n\t\t\t\t\tArrayList<String> providersForLang = new ArrayList<String>();\n\t\t\t\t\tfor (String key: _providers.keySet()) {\n\t\t\t\t\t\tif (_providers.get(key).contains(\"text\"))\n\t\t\t\t\t\t\tprovidersForLang.add(key);\n\t\t\t\t\t}\n\t\t\t\t\t//providerCache.put(String.valueOf(langPrvdr.get(\"code\")), new ArrayList<String>(_providers.keySet()));\n\t\t\t\t\tproviderCache.put(String.valueOf(langPrvdr.get(\"code\")).toLowerCase(), providersForLang);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\t\n\t\t\t\n\t\t\tfor (String key: providerCache.keySet()) {\n\t\t\t\tlanguageProviders.addAll(providerCache.get(key));\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\texchange = t.send(\"direct:get-language-providers\", exchange);\n\t\t\t\tArrayList<HashMap<String, Object>> langProviders = (ArrayList)exchange.getIn().getBody();\n\t\t\t\tfor (int i = 0; i < langProviders.size(); i++) {\n\t\t\t\t\tMap<String, Object> langPrvdrMeta = langProviders.get(i);\n\t\t\t\t\tlanguageProviderConfig.put((String)langPrvdrMeta.get(\"label\"), (Map)langPrvdrMeta.get(\"metadata\"));\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\t\t\t\n\t\t\tlog.info(\"Loaded {} languages for {} providers\", langProviderList.size(), languageProviders.size());\t\t\t\n\t\t}\n\t\t\n    public List getProviderByLanguage(String language, Exchange exchange) throws Exception {\n\n\t\t  List<String> providers = providerCache.get(language);\n\t\t\t\n\t\t\tif (providers == null) {\n\t\t\t\tlog.info(\"Providers have not been loaded yet, loading provider cache.\");\n\t\t\t\tloadProviders(exchange);\n\t\t\t}\n\t\t\t\n\t\t\tproviders = providerCache.get(language);\n\t\t\treturn providers;\n\t\t}\n\t\t\n    public List getAutoDetectProviders(Exchange exchange) throws Exception {\n\n\t\t  List<String> providers = new ArrayList<String>() {{\n\t\t\t\tadd(\"aws\");\n\t\t\t\tadd(\"azure\");\n\t\t\t\tadd(\"google\");\n\t\t\t}};\n\t\t\t\n\t\t\treturn providers;\n\t\t}\t\t\n\t}\n}\n",
    "filename" : "LanguageProviderCache.java"
  },
  "id" : "1a1810e3-c6f4-4124-923d-b42f2658a8a2",
  "name" : "LanguageProviderCache",
  "description" : "",
  "createdAt" : "2023-10-04T18:05:22.338136134",
  "updatedAt" : "2023-10-04T18:05:22.338137079",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}