{
  "revision" : 1109,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : "1687a4f6-d229-432d-8cb3-efa4c66f7b19",
  "currentProfileUuid" : "ae5301ac-5200-4b54-876c-b514515feb02",
  "parameterGroupUuids" : [ "e1d81a6a-655e-42ff-8288-6b0891abe7b0", "83d26985-9100-4993-8115-ced44d1fe3fd", "3dacce84-b8c8-4759-8bfa-355c8cf6acd6", "ca06b01a-b205-4b2b-9e9d-9f49614e7e94", "c9a8ecf3-391c-4a06-bdc0-68a1a504fdd9", "351ac858-4e6b-4902-9090-0be62c4dc9e0" ],
  "repoResourceUuids" : [ "07e34d9c-7cea-4532-94e6-7da0f6bddeb3", "2d21c0b9-a829-4420-84e6-67d34aaf6026", "fedc2ba8-c348-4a92-a89c-844badda8f1f", "05649865-0c5a-4bfd-bddb-046f69383940", "71e48dda-80e9-4034-af48-cf39a9a10938", "60b1161c-74ee-4cd8-96a1-0055c90271c1", "1872a943-2a9b-4513-8739-06e95090b977", "f50d9293-f6bf-47b6-b21e-4cfda6eee3c4", "55882383-5e69-44b0-a3ac-12785e306303", "9fb5f9ac-54fb-4ea4-b9d6-a3f95d92021b", "eddb9cf2-828c-4bf6-a038-93128340a0c2", "38657aaf-c7a4-4a04-9321-bb750c2e67b5", "70caf7f2-3517-49e4-a7c8-7744d26e993d", "fd53ee90-1bc9-4666-9d74-c4213e27b639", "e859d27c-054e-489d-96ef-1338b179fde7", "de21b826-a931-4265-ab52-20608121dd68", "56f21b0e-56cf-4b0e-a81e-c8a33df8d823", "a1057428-1531-40a8-a129-ed27382e947f", "3b5aa833-0eaa-4cb9-8ce8-ca97eac74110", "0d41f9ca-58b0-434f-a68e-5855e59f3249", "4bbe8cf7-eeb4-4c3e-8e46-ebeb767300dd", "29404f48-09d9-446b-8cca-b044b1c55dad", "17e7ca54-4247-4e9c-ba30-d078e3ac407a", "4ea55e39-1924-4b99-8efa-3d0fedabe4c3" ],
  "routeDefinitions" : [ {
    "id" : null,
    "camelRouteId" : "route-1",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "62d66a14-1f65-4aff-ad82-bfad7f9b02dc",
      "description" : "createAttachment",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/attachments",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "createAttachment",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/attachments&method=post&operationName=createAttachment&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "fb4cf464-d392-4550-9b16-24e7e52a1119",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b6e8b02c-0474-430c-a8e7-626db40f409e",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "fe667468-b204-4449-878a-d991b31669b1",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '203.api.create.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '203.api.create.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()"
    }, {
      "name" : "log",
      "nodeId" : "b81ee490-cd4b-4b19-b825-f31611f557ad",
      "description" : "api.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.api.create.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.create.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "d8f0eb63-8cf5-46ea-8b10-f8d72fd920d4",
      "description" : "Get Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "conversationId",
          "propertyValue" : "$.conversation_id",
          "uuid" : "8f2a6e2d-1ed5-4faa-b72c-c58eb4fd196f"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipientId",
          "propertyValue" : "$.recipient_id",
          "uuid" : "ba9ae026-9724-4121-ba18-1bda7d11aca0"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageId",
          "propertyValue" : "$.message_id",
          "uuid" : "7c331947-0a82-4910-8842-b918de3b21ec"
        }, {
          "language" : "JsonPath",
          "propertyName" : "uri",
          "propertyValue" : "$.uri",
          "uuid" : "e748fd22-a507-41a5-9914-81a30b7d41a1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "filename",
          "propertyValue" : "$.filename",
          "uuid" : "f7b84baa-e434-4026-9344-88a4b6a25e0b"
        }, {
          "language" : "JsonPath",
          "propertyName" : "filesize",
          "propertyValue" : "$.filesize",
          "uuid" : "3089cc50-8e12-46c5-bc52-01e804ac603e"
        }, {
          "language" : "Simple",
          "propertyName" : "status",
          "propertyValue" : "$.status",
          "uuid" : "c22e32cc-27bf-44c8-b765-316d12413340"
        }, {
          "language" : "JsonPath",
          "propertyName" : "contentType",
          "propertyValue" : "$.content_type",
          "uuid" : "1c71573b-707c-46c5-85b7-74739f10708d"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=$.conversation_id&recipientId=$.recipient_id&messageId=$.message_id&uri=$.uri&filename=$.filename&filesize=$.filesize&status=$.status&contentType=$.content_type&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "05518420-f9fd-46b2-879d-fdc09f17180c",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\",\"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-*\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e1d264b1-f23b-4ae7-9cae-bf64bc53b6d5",
      "description" : "SQL Create Attachment",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"sql:classpath:attachments.insert.sql?dataSource=#dsPostgres\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"sql:classpath:attachments.insert.sql?dataSource=#dsPostgres\")"
    }, {
      "name" : "log",
      "nodeId" : "ca9e91a7-2214-4b0d-b38b-790cbeec12cc",
      "description" : "create.sql.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.api.create.sql.out",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.create.sql.out&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "c41266cf-699f-4690-9ff3-db9e54d70f27",
      "description" : "Get Attachment ID",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "attachmentId",
          "propertyValue" : "${body[0][attachment_id]}",
          "uuid" : "df3f9528-115b-4cd0-930d-d7376bf69af8"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?attachmentId=${body[0][attachment_id]}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setHeaders",
      "nodeId" : "c5a44009-0ed9-4274-9ced-7443cad5c03d",
      "description" : "Set Attachment ID",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "attachmentId",
          "headerValue" : "${body[0][attachment_id]}",
          "language" : "Simple",
          "uuid" : "cb3a3432-492a-47ed-94f6-475a0345c944"
        }, {
          "headerName" : "x-authorized",
          "headerValue" : "true",
          "language" : "Simple",
          "uuid" : "f27db386-585e-4e4d-8e58-bac35332222d"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "f276116a-450b-447a-9a14-5a508f038908",
      "description" : "to:getAttachmentById",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getAttachmentById",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getAttachmentById"
    }, {
      "name" : "setBody",
      "nodeId" : "ab5ca64d-931c-4ba3-8391-bb3ebe239a2a",
      "description" : "Get Attachment JSON",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "$.data",
        "language" : "JsonPath",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
    }, {
      "name" : "setHeaders",
      "nodeId" : "114df3ea-d6ca-4f22-8ddd-8b61de422667",
      "description" : "HTTP202",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpResponseCode",
          "headerValue" : "202",
          "language" : "Constant",
          "uuid" : "a3b92296-8ecb-4c97-a9d6-bf6339d7c4b8"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b2416c2c-161b-4b60-9834-948189d6e35c",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
    }, {
      "name" : "log",
      "nodeId" : "9c2f6f0c-08e4-4cab-8c41-8eb654bbb891",
      "description" : "api.create.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.api.create.out",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.create.out&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "565877a9-df40-4fbb-81d9-457bfb65be76",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "jms",
      "nodeId" : "bad5a802-011b-4993-a806-025738f17e74",
      "description" : "Emit IO Event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "io.event",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=io.event&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "c635065a-cbbc-480a-ac15-7e7ddb5d0413",
      "description" : "getAttachments",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/attachments",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getAttachments",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/attachments&method=get&operationName=getAttachments&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "15e17470-bece-4b7b-8820-2b1dbe5e9593",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "6c826e9e-ced7-40ff-bbe7-9e2a93f7db9d",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '203.api.get.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '203.api.get.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "4cc38b42-0935-4545-abf6-0e0c71506baf",
      "description" : "Get Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "96452090-b225-434f-a1c1-d7244c1e8c83"
        }, {
          "language" : "Header",
          "propertyName" : "CamelHttpQuery",
          "propertyValue" : "CamelHttpQuery",
          "uuid" : "6164149e-7e74-4993-8dd6-b06355f248ec"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&CamelHttpQuery=CamelHttpQuery&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f3c02349-0a12-491a-b6a6-baad3f48e808",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\",\"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-*\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4be3b602-606a-4323-9a61-2e26a822b676",
      "description" : "SQL Get Attachments",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:attachments.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n        \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:attachments.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n        \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ce1fe1fa-0dc9-4628-a74c-49c299907299",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-3",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "72da18db-6b80-4fa2-aa75-7ff4de2f55b9",
      "description" : "updateAttachment",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/attachments/{attachmentId}",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "updateAttachment",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/attachments/{attachmentId}&method=put&operationName=updateAttachment&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "d6a57529-ad36-4f51-84aa-d306a28c4cbf",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "762d2bca-6d91-4520-b23e-661fc6d91d11",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "aa50ccef-d770-4fc0-b40f-1ae280e7527c",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '230.api.update.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, '230.api.update.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()"
    }, {
      "name" : "log",
      "nodeId" : "24da68c2-db6e-4385-a549-d43dbeb5ccad",
      "description" : "203.api.update.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.api.update.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.update.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "a17595c0-b068-4e01-b254-f365e9e77028",
      "description" : "Get Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "attachmentId",
          "propertyValue" : "attachmentId",
          "uuid" : "251b7f9c-a597-40ff-b531-afb615f6e0a9"
        }, {
          "language" : "JsonPath",
          "propertyName" : "uri",
          "propertyValue" : "$.uri",
          "uuid" : "354940d1-d01e-4fad-8581-562a94a5a692"
        }, {
          "language" : "JsonPath",
          "propertyName" : "thumbnail",
          "propertyValue" : "$.thumbnail",
          "uuid" : "9b91c443-d3a9-47f4-aab1-67d0c6b7fef9"
        }, {
          "language" : "JsonPath",
          "propertyName" : "errorCode",
          "propertyValue" : "$.error_code",
          "uuid" : "07a38d06-93d0-45a3-9cb8-962a338ccd9a"
        }, {
          "language" : "JsonPath",
          "propertyName" : "errorMessage",
          "propertyValue" : "$.error_message",
          "uuid" : "63d85c5e-ddd2-4355-8053-bd3748bf2c57"
        }, {
          "language" : "JsonPath",
          "propertyName" : "status",
          "propertyValue" : "$.status",
          "uuid" : "340d5fbc-2ff1-4fcb-b0c4-49eea042fb2b"
        }, {
          "language" : "JsonPath",
          "propertyName" : "contentType",
          "propertyValue" : "$.content_type",
          "uuid" : "dcc9f338-15b9-4b54-b318-1a081885340a"
        }, {
          "language" : "JsonPath",
          "propertyName" : "filesize",
          "propertyValue" : "$.filesize",
          "uuid" : "37558a10-fb27-4cf6-96c7-53b466db45aa"
        }, {
          "language" : "JsonPath",
          "propertyName" : "metadata",
          "propertyValue" : "$.metadata",
          "uuid" : "e217e3cb-c369-4bf3-8e22-eca31dc82f7b"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?attachmentId=attachmentId&uri=$.uri&thumbnail=$.thumbnail&errorCode=$.error_code&errorMessage=$.error_message&status=$.status&contentType=$.content_type&filesize=$.filesize&metadata=$.metadata&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e48d55c4-4d42-4148-947f-3c7bedd5d201",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\",\"x-\",\"attachmentId\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-\",\"attachmentId\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "099d55f4-974a-4af2-8a3e-a3df7f7dd777",
      "description" : "SQL Update Attachment",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:UPDATE attachments SET content_type = :#${exchangeProperty.contentType}, filesize = :#${exchangeProperty.filesize}, uri = :#${exchangeProperty.uri}, thumbnail = :#${exchangeProperty.thumbUri}, metadata = :#${exchangeProperty.metadata}, error_code = :#${exchangeProperty.errorCode}, error_message = :#${exchangeProperty.errorMessage}, downloaded_at = NOW(), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.attachmentId} AS uuid)?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:UPDATE attachments SET content_type = :#${exchangeProperty.contentType}, filesize = :#${exchangeProperty.filesize}, uri = :#${exchangeProperty.uri}, thumbnail = :#${exchangeProperty.thumbUri}, metadata = :#${exchangeProperty.metadata}, error_code = :#${exchangeProperty.errorCode}, error_message = :#${exchangeProperty.errorMessage}, downloaded_at = NOW(), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.attachmentId} AS uuid)?dataSource=#dsPostgres"
    }, {
      "name" : "setHeaders",
      "nodeId" : "81f8ce93-cafb-4428-94fc-5776e5971162",
      "description" : "Set Attachment ID",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "attachmentId",
          "headerValue" : "${exchangeProperty.attachmentId}",
          "language" : "Simple",
          "uuid" : "58eb79bb-06f1-4933-ab7c-3a0e724bc74a"
        }, {
          "headerName" : "x-authorized",
          "headerValue" : "true",
          "language" : "Simple",
          "uuid" : "0118d6d9-8e4b-43b6-aaaf-7561d5e12dcf"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "bdce4578-d238-46c7-afc0-f59cf4b63a28",
      "description" : "to:getAttachmentById",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getAttachmentById",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getAttachmentById"
    }, {
      "name" : "setHeaders",
      "nodeId" : "2b8efec6-00bf-4c49-8b70-3d7cc698984c",
      "description" : "HTTP200",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpResponseCode",
          "headerValue" : "200",
          "language" : "Constant",
          "uuid" : "ef3f7a7a-1578-4a6a-ae5b-6bc582744485"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setBody",
      "nodeId" : "c98b40c3-780d-47dc-aa91-9ef40c2c27bf",
      "description" : "Get JSON Data ",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "$.data",
        "language" : "JsonPath",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "bb68d8ee-b3de-4bd7-8f36-fe809a3b834c",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
    }, {
      "name" : "log",
      "nodeId" : "73a23494-5e47-4d45-add1-38b76f3e715a",
      "description" : "api.update.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.api.update.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.update.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "2342853d-87f4-4117-b659-6cab69856780",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "jms",
      "nodeId" : "e46afe7b-a81f-4e11-b4c4-2fece9ae9038",
      "description" : "Emit IO Event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "io.event",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=io.event&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "613b00c7-bc19-479f-895a-ee672a761e13",
      "description" : "getAttachmentById",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/attachments/{attachmentId}",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getAttachmentById",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/attachments/{attachmentId}&method=get&operationName=getAttachmentById&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "350b8724-4015-4ac0-be44-54a3a0cfc7e7",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "80bec4be-1250-452d-88d6-93ba468a26bb",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, 'r203.api.getid.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n\t.log(LoggingLevel.WARN, 'r203.api.getid.400', '${header.CamelHttpResponseCode} ${body}') \n\t.stop()\n  .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "b4bd95a7-63b0-42bb-ac71-1e4df23933a1",
      "description" : "Get Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "attachmentId",
          "propertyValue" : "attachmentId",
          "uuid" : "bd8f00c2-7d53-4476-a3fd-ffef1ea3715e"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "2a372ef9-2b36-44b0-9154-2d163054c102"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?attachmentId=attachmentId&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e1166797-6a8b-4ca6-a616-d12901e10845",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\",\"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-*\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4d345c04-c99e-4a30-85f3-31e00dbc46ea",
      "description" : "SQL Get Attachment",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:attachments.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n        \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:attachments.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n        \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")"
    }, {
      "name" : "messageFilter",
      "nodeId" : "5fb9f058-c326-4183-9bb6-978f84ed43e4",
      "description" : "RowCount==0",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messageFilter",
          "nodeId" : "12f91d35-ae18-4934-b3ab-8ba744815ccb",
          "description" : "Processed?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "log",
              "nodeId" : "c75bd3d8-8daa-446a-8809-0a997badf4e5",
              "description" : "api.getid.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "203.api.getid.out",
                "message" : "(${headers}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.getid.out&message=(${headers}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "31f700f2-b486-4d1b-9c33-a628433a83f7",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "processed?",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "4722cde9-9c5a-4375-bec0-90d48569d783",
              "description" : "Store Attachment",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "Attachment",
                  "propertyValue" : "${body}",
                  "uuid" : "50a688a6-3448-4d0b-9227-57b76029df4c"
                }, {
                  "language" : "Simple",
                  "propertyName" : "x-authorized",
                  "propertyValue" : "true",
                  "uuid" : "d8e6e872-ac02-4bc8-9b86-1b855edb2a99"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?Attachment=${body}&x-authorized=true&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "direct",
              "nodeId" : "2dfe6542-d152-4de5-94be-a83f996d2c6f",
              "description" : "Get Presigned URL",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "downloadAttachment",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=downloadAttachment"
            }, {
              "name" : "process",
              "nodeId" : "cb66b78a-ab59-45e7-8d64-a19db14f34f2",
              "description" : "Update Response",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "HashMap<String, Object> attachment = (HashMap)exchange.getProperty(\"Attachment\");\nString presignedUrl = (String)exchange.getIn().getBody();\nattachment.put(\"presigned_url\", presignedUrl);\nexchange.getIn().setBody(attachment);",
                "import" : "// import org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=HashMap<String, Object> attachment = (HashMap)exchange.getProperty(\"Attachment\");\nString presignedUrl = (String)exchange.getIn().getBody();\nattachment.put(\"presigned_url\", presignedUrl);\nexchange.getIn().setBody(attachment);&import=// import org.apache.camel.Message"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${body[status]} == 'processed'",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "404",
        "route" : [ {
          "name" : "log",
          "nodeId" : "71139a34-7be1-4c8d-bbd7-d98f01221b7b",
          "description" : "api.getid.404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "203.api.getid.404",
            "message" : "(${header.CamelHttpResponseCode}) ${exchangeProperty.attachmentId}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=203.api.getid.404&message=(${header.CamelHttpResponseCode}) ${exchangeProperty.attachmentId}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "503692b9-b733-447c-81fa-576efdd03d91",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "26ef5356-2f7e-431c-ab6d-27cd4dfd2e0c"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "e245608b-90a2-4d2b-94c7-2d4d34005de7",
      "description" : "downloadAttachment",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/attachments/{attachmentId}/download",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "downloadAttachment",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/attachments/{attachmentId}/download&method=get&operationName=downloadAttachment&produces=application/json&requestmethod=GET"
    }, {
      "name" : "setProperties",
      "nodeId" : "fdcaf966-9717-4915-845a-5c4659e35c3f",
      "description" : "Get Attachment ID",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "attachmentId",
          "propertyValue" : "attachmentId",
          "uuid" : "e59a3e0f-ebe2-4c6d-a024-d67587ec64ff"
        }, {
          "language" : "Header",
          "propertyName" : "xAccessToken",
          "propertyValue" : "x-access-token",
          "uuid" : "452e8f55-55e5-4981-b753-23a9189f61be"
        }, {
          "language" : "Header",
          "propertyName" : "stream",
          "propertyValue" : "stream",
          "uuid" : "21497efe-1ce0-473f-ac33-1334335a6212"
        }, {
          "language" : "Header",
          "propertyName" : "thumbnail",
          "propertyValue" : "thumbnail",
          "uuid" : "478baf0f-2861-493b-985a-448082cd934d"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?attachmentId=attachmentId&xAccessToken=x-access-token&stream=stream&thumbnail=thumbnail&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageRouter",
      "nodeId" : "76d47dd2-2f35-44c6-a3d4-6031bceb23d2",
      "description" : "Magic Token?",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "569fb4e8-f756-4be7-b65f-d6370613f360",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\",\"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-*\")"
        }, {
          "name" : "messagingEndpoint",
          "nodeId" : "4bc68f46-73d4-4877-ae2d-604788418e7e",
          "description" : "SQL Get Attachment URI",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:SELECT uri, thumbnail, content_type FROM attachments WHERE id = CAST(:#${exchangeProperty.attachmentId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:SELECT uri, thumbnail, content_type FROM attachments WHERE id = CAST(:#${exchangeProperty.attachmentId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
        }, {
          "name" : "messageFilter",
          "nodeId" : "134c1023-68e5-4e02-a9f2-db2888627738",
          "description" : "Not Found?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "170fd7b4-f329-4918-91e0-882b403ab31a",
              "description" : "Get Object Params",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "attachmentUri",
                  "propertyValue" : "${body[uri]}",
                  "uuid" : "ae666fdb-629e-4da0-ad4b-51ae72af3ccb"
                }, {
                  "language" : "Simple",
                  "propertyName" : "contentType",
                  "propertyValue" : "${body[content_type]}",
                  "uuid" : "53a00146-343d-4ba5-ad7d-6d83bf2e6bba"
                }, {
                  "language" : "Simple",
                  "propertyName" : "thumbnailUri",
                  "propertyValue" : "${body[thumbnail]}",
                  "uuid" : "f26c137f-f946-4535-9d1e-e7e4176c7a72"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?attachmentUri=${body[uri]}&contentType=${body[content_type]}&thumbnailUri=${body[thumbnail]}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "a666b2fe-79cc-445a-84d2-48137fb4a877",
              "description" : "api.download.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "203.api.download.in",
                "message" : "Parsing attachment URI ${exchangeProperty.attachmentUri}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.download.in&message=Parsing attachment URI ${exchangeProperty.attachmentUri}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "process",
              "nodeId" : "e8ef97dc-3812-4c26-adf9-3436b9e88d37",
              "description" : "Parse URI",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "String attachmentUri = (String)exchange.getProperty(\"attachmentUri\");\nString thumbnailUri = (String)exchange.getProperty(\"thumbnailUri\");\nString contentType = (String)exchange.getProperty(\"contentType\");\nString thumbnail = (String)exchange.getProperty(\"thumbnail\");\n\n//System.out.println(\"attachmentUri: \" + attachmentUri + \" thumbnailUri: \" + thumbnailUri + \" thumbnail: \" + thumbnail);\n\ntry {\n    String pattern = \"s3://(.*?)/(.*)\";\n    Pattern r = Pattern.compile(pattern);\n\t\tString requestedUri = attachmentUri;\n\t\n\t\tif (thumbnail && thumbnailUri != null) \n\t\t\trequestedUri = thumbnailUri;\n\n\t\tMatcher m = r.matcher(requestedUri);\n\t\n    String keyName = null;\n    String bucketName = null;\n    \n    if (m.find()) {\n        bucketName = m.group(1);\n\t\t\t\tkeyName = m.group(2);\n    }\n    \n    //System.out.println(\"BucketName: \" + bucketName);\n\t  //System.out.println(\"KeyName: \" + keyName);\n\t\n\t\texchange.setProperty(\"bucket\", bucketName);\n\t\texchange.setProperty(\"keyName\", keyName);\n\t\n} catch (Exception e) {\n    System.err.println(\"Error parsing attachment URI. \" + e.getMessage());\n    exchange.getIn().setBody(\"Error parsing attachment URI. \" + e.getMessage());\n    exchange.getIn().setHeader(500);        \n}",
                "import" : "import java.util.regex.Matcher;\nimport java.util.regex.Pattern;",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=String attachmentUri = (String)exchange.getProperty(\"attachmentUri\");\nString thumbnailUri = (String)exchange.getProperty(\"thumbnailUri\");\nString contentType = (String)exchange.getProperty(\"contentType\");\nString thumbnail = (String)exchange.getProperty(\"thumbnail\");\n\n//System.out.println(\"attachmentUri: \" + attachmentUri + \" thumbnailUri: \" + thumbnailUri + \" thumbnail: \" + thumbnail);\n\ntry {\n    String pattern = \"s3://(.*?)/(.*)\";\n    Pattern r = Pattern.compile(pattern);\n\t\tString requestedUri = attachmentUri;\n\t\n\t\tif (thumbnail && thumbnailUri != null) \n\t\t\trequestedUri = thumbnailUri;\n\n\t\tMatcher m = r.matcher(requestedUri);\n\t\n    String keyName = null;\n    String bucketName = null;\n    \n    if (m.find()) {\n        bucketName = m.group(1);\n\t\t\t\tkeyName = m.group(2);\n    }\n    \n    //System.out.println(\"BucketName: \" + bucketName);\n\t  //System.out.println(\"KeyName: \" + keyName);\n\t\n\t\texchange.setProperty(\"bucket\", bucketName);\n\t\texchange.setProperty(\"keyName\", keyName);\n\t\n} catch (Exception e) {\n    System.err.println(\"Error parsing attachment URI. \" + e.getMessage());\n    exchange.getIn().setBody(\"Error parsing attachment URI. \" + e.getMessage());\n    exchange.getIn().setHeader(500);        \n}&import=import java.util.regex.Matcher;\nimport java.util.regex.Pattern;"
            }, {
              "name" : "messageFilter",
              "nodeId" : "d5235906-7958-48ef-87dd-cfe7444ec6bb",
              "description" : "Valid URI?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "dslProcessor",
                  "nodeId" : "fe4c5a97-bcbe-4600-9eb5-f7b9aa9d66fd",
                  "description" : "Remove Headers",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
                }, {
                  "name" : "process",
                  "nodeId" : "513a13e6-c28b-4621-a0c8-eaf148a0b1fe",
                  "description" : "Presign/Stream",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "String bucketName = (String)exchange.getProperty(\"bucket\");\nString objectKey = (String)exchange.getProperty(\"keyName\");\nString stream = (String)exchange.getProperty(\"stream\");\n\nRegions clientRegion = Regions.US_EAST_2;\n\ntry {\n\tAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n\t\t.withRegion(clientRegion)\n\t\t.build();\n\n\tif (stream != null) {\n\t\tS3Object s3Object = s3Client.getObject(bucketName, objectKey);\n\n\t\texchange.getIn().setHeader(\"Content-Type\", s3Object.getObjectMetadata().getContentType());\n\t\texchange.getIn().setBody(s3Object.getObjectContent());\n\n\t} else {\n\t\t// Set the presigned URL to expire after 5 mins.\n\t\tjava.util.Date expiration = new java.util.Date();\n\t\tlong expTimeMillis = Instant.now().toEpochMilli();\n\t\texpTimeMillis += 1000 * 60 * 5;\n\t\texpiration.setTime(expTimeMillis);\n\n\t\t// Generate the presigned URL.\n\t\tSystem.out.println(\"Generating pre-signed URL for \" + bucketName + \"/\" + objectKey);\n\t\tGeneratePresignedUrlRequest generatePresignedUrlRequest =\n\t\t\tnew GeneratePresignedUrlRequest(bucketName, objectKey)\n\t\t\t.withMethod(HttpMethod.GET)\n\t\t\t//.withContentType(\"image/jpeg\")\n\t\t\t.withExpiration(expiration);\n\t\t\n\t\tURL url = s3Client.generatePresignedUrl(generatePresignedUrlRequest);\n\t\t\n\t\tSystem.out.println(\"Pre-Signed URL: \" + url.toString());\n\t\texchange.setProperty(\"presignedUrl\", url.toString());\n\t}\n} catch (AmazonServiceException e) {\n\t// The call was transmitted successfully, but Amazon S3 couldn't process \n\t// it, so it returned an error response.\n\te.printStackTrace();\n} catch (SdkClientException e) {\n\t// Amazon S3 couldn't be contacted for a response, or the client\n\t// couldn't parse the response from Amazon S3.\n\te.printStackTrace();\n}",
                    "import" : "import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.time.Instant;",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?code=String bucketName = (String)exchange.getProperty(\"bucket\");\nString objectKey = (String)exchange.getProperty(\"keyName\");\nString stream = (String)exchange.getProperty(\"stream\");\n\nRegions clientRegion = Regions.US_EAST_2;\n\ntry {\n\tAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n\t\t.withRegion(clientRegion)\n\t\t.build();\n\n\tif (stream != null) {\n\t\tS3Object s3Object = s3Client.getObject(bucketName, objectKey);\n\n\t\texchange.getIn().setHeader(\"Content-Type\", s3Object.getObjectMetadata().getContentType());\n\t\texchange.getIn().setBody(s3Object.getObjectContent());\n\n\t} else {\n\t\t// Set the presigned URL to expire after 5 mins.\n\t\tjava.util.Date expiration = new java.util.Date();\n\t\tlong expTimeMillis = Instant.now().toEpochMilli();\n\t\texpTimeMillis += 1000 * 60 * 5;\n\t\texpiration.setTime(expTimeMillis);\n\n\t\t// Generate the presigned URL.\n\t\tSystem.out.println(\"Generating pre-signed URL for \" + bucketName + \"/\" + objectKey);\n\t\tGeneratePresignedUrlRequest generatePresignedUrlRequest =\n\t\t\tnew GeneratePresignedUrlRequest(bucketName, objectKey)\n\t\t\t.withMethod(HttpMethod.GET)\n\t\t\t//.withContentType(\"image/jpeg\")\n\t\t\t.withExpiration(expiration);\n\t\t\n\t\tURL url = s3Client.generatePresignedUrl(generatePresignedUrlRequest);\n\t\t\n\t\tSystem.out.println(\"Pre-Signed URL: \" + url.toString());\n\t\texchange.setProperty(\"presignedUrl\", url.toString());\n\t}\n} catch (AmazonServiceException e) {\n\t// The call was transmitted successfully, but Amazon S3 couldn't process \n\t// it, so it returned an error response.\n\te.printStackTrace();\n} catch (SdkClientException e) {\n\t// Amazon S3 couldn't be contacted for a response, or the client\n\t// couldn't parse the response from Amazon S3.\n\te.printStackTrace();\n}&import=import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.time.Instant;"
                }, {
                  "name" : "log",
                  "nodeId" : "16d18e06-ed28-4209-a0a0-9bdfa1012e6a",
                  "description" : "api.download.sign",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "203.api.download.sign",
                    "message" : "Getting object ${exchangeProperty.keyName} from s3://${exchangeProperty.bucket}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.download.sign&message=Getting object ${exchangeProperty.keyName} from s3://${exchangeProperty.bucket}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "messageRouter",
                  "nodeId" : "0011752d-c4d0-484e-a1d2-9e6390cf61bc",
                  "description" : "",
                  "properties" : {
                    "_type" : "messageRouter",
                    "active" : true,
                    "camelGroup" : "routing",
                    "name" : "messageRouter",
                    "url" : ""
                  },
                  "_type" : "messageRouter",
                  "branches" : [ {
                    "type" : "when",
                    "label" : "presigned url",
                    "route" : [ {
                      "name" : "setBody",
                      "nodeId" : "06507e5e-5d90-432f-9007-225a3710e989",
                      "description" : "Set URL",
                      "properties" : {
                        "_type" : "setBody",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "expression" : "${exchangeProperty.presignedUrl}",
                        "language" : "Simple",
                        "name" : "setBody",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setBody",
                      "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.presignedUrl}&language=Simple&suppressExceptions=false"
                    }, {
                      "name" : "dslProcessor",
                      "nodeId" : "7f02830e-470b-4bad-a76d-b0becfe3c62f",
                      "description" : "Remove Headers",
                      "properties" : {
                        "_type" : "dslProcessor",
                        "active" : true,
                        "camelGroup" : "core",
                        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                        "name" : "dslProcessor",
                        "url" : ""
                      },
                      "_type" : "dslProcessor",
                      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "929c287e-470a-4fb9-a72f-089299d0d7ae",
                      "description" : "HTTP200",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpResponseCode",
                          "headerValue" : "200",
                          "language" : "Constant",
                          "uuid" : "ea020090-17a4-4dac-a497-4bba6defd253"
                        }, {
                          "headerName" : "Content-Type",
                          "headerValue" : "text/plain",
                          "language" : "Constant",
                          "uuid" : "202ef3c4-fe15-46e1-ab73-ceda30f57254"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "log",
                      "nodeId" : "93a41a02-ede2-451b-94ea-c84b0719d51a",
                      "description" : "api.download.out",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "203.api.download.out",
                        "message" : "(${header.CamelHttpResponseCode})",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.api.download.out&message=(${header.CamelHttpResponseCode})&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    } ],
                    "properties" : {
                      "addNamespaces" : "false",
                      "condition" : "${exchangeProperty.presignedUrl} != null",
                      "language" : "Simple",
                      "namespaces" : [ ],
                      "suppressExceptions" : "false"
                    }
                  }, {
                    "type" : "otherwise",
                    "label" : "otherwise",
                    "route" : [ {
                      "name" : "dslProcessor",
                      "nodeId" : "50d7b785-cca1-4b4b-81f4-6a2bd1c269ea",
                      "description" : "Remove Headers",
                      "properties" : {
                        "_type" : "dslProcessor",
                        "active" : true,
                        "camelGroup" : "core",
                        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                        "name" : "dslProcessor",
                        "url" : ""
                      },
                      "_type" : "dslProcessor",
                      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "abccfea5-d173-4381-814b-e6aefba24aaa",
                      "description" : "HTTP200",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpResponseCode",
                          "headerValue" : "200",
                          "language" : "Constant",
                          "uuid" : "40ed214f-c44d-4de8-9bf1-78ef06ce1004"
                        }, {
                          "headerName" : "Content-Type",
                          "headerValue" : "${exchangeProperty.contentType}",
                          "language" : "Simple",
                          "uuid" : "5228d7f6-f44c-404c-8aad-b9d11200cc92"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    } ],
                    "properties" : { }
                  } ],
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : { }
              }, {
                "type" : "filter",
                "label" : "!bucket || !key",
                "route" : [ {
                  "name" : "log",
                  "nodeId" : "2468edbb-c577-441e-b9d2-1216d4b01a2c",
                  "description" : "api.download.err",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "ERROR",
                    "logType" : "EIP",
                    "loggerName" : "203.api.download.err",
                    "message" : "Error parsing URI into bucket and key.",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=203.api.download.err&message=Error parsing URI into bucket and key.&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "9952df74-9f62-403e-91ac-102462cf8b58",
                  "description" : "HTTP 404",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "404",
                      "language" : "Constant",
                      "uuid" : "76444fd4-f3d8-42a1-acc8-7896a6c59ca4"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "setBody",
                  "nodeId" : "469fbbf7-14bf-41a9-90f9-9de1833473c8",
                  "description" : "Clear Body",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "constant('')",
                    "language" : "GroovyDsl",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
                }, {
                  "name" : "stop",
                  "nodeId" : "5cdb9780-ac6b-479a-9b2d-5685273dccb9",
                  "description" : "",
                  "properties" : {
                    "_type" : "stop",
                    "camelGroup" : "misc",
                    "name" : "stop",
                    "url" : ""
                  },
                  "_type" : "stop",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.bucket} == null || ${exchangeProperty.keyName} == null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "rowcount==0",
            "route" : [ {
              "name" : "setHeaders",
              "nodeId" : "ed59dda7-4ca4-45db-9396-012a65857f0e",
              "description" : "HTTP404",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "404",
                  "language" : "Constant",
                  "uuid" : "4d984999-873a-4e32-835f-714437b3d1e1"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "88fa7f99-4290-4756-9ca8-f6f177baddc6",
              "description" : "api.download.404",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "WARN",
                "logType" : "EIP",
                "loggerName" : "203.api.download.404",
                "message" : "(${header.CamelHttpResponseCode}) ${exchangeProperty.attachmentId}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=203.api.download.404&message=(${header.CamelHttpResponseCode}) ${exchangeProperty.attachmentId}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "setBody",
              "nodeId" : "fb3574c6-8484-44d1-9057-f580fa4f965c",
              "description" : "Clear Body",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "constant('')",
                "language" : "GroovyDsl",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
            }, {
              "name" : "stop",
              "nodeId" : "a0e254e9-cee3-45b1-a7b9-d5b49354f8b8",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelSqlRowCount} == 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "when",
        "label" : "yes",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "6b9b5322-7e82-4566-b159-7b5cdd87a36a",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "0bb6f1f7-377a-42fd-98c0-b6e7c18ad113",
          "description" : "API Validate Token",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to('https://{{convey.api.host}}/api/v1/tokens/${exchangeProperty.xAccessToken}?bridgeEndpoint=false&connectTimeout=1500&connectionRequestTimeout=3000&httpMethod=GET&socketTimeout=-1&throwExceptionOnFailure=false')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to('https://{{convey.api.host}}/api/v1/tokens/${exchangeProperty.xAccessToken}?bridgeEndpoint=false&connectTimeout=1500&connectionRequestTimeout=3000&httpMethod=GET&socketTimeout=-1&throwExceptionOnFailure=false')"
        }, {
          "name" : "messageFilter",
          "nodeId" : "f52f097f-7917-4ab7-a0c0-b93cda987c08",
          "description" : "Invalid",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "! 200",
            "route" : [ {
              "name" : "setHeaders",
              "nodeId" : "a119ca7d-2b87-4611-86e6-73aec793114e",
              "description" : "HTTP403",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "403",
                  "language" : "Constant",
                  "uuid" : "66aef0d8-3b97-47e9-ac17-443b32f8affc"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "27844e70-8e06-4a52-9408-a32f0c47bc53",
              "description" : "api..download.403",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "WARN",
                "logType" : "EIP",
                "loggerName" : "203.api..download.403",
                "message" : "(${header.CamelHttpResponseCode}) Invalid Token",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=203.api..download.403&message=(${header.CamelHttpResponseCode}) Invalid Token&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "setBody",
              "nodeId" : "c313178f-529d-488d-8c0b-6c316e221078",
              "description" : "Clear Body",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "constant('')",
                "language" : "GroovyDsl",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
            }, {
              "name" : "stop",
              "nodeId" : "01ec3689-8333-4597-aa58-e9aec9ec5659",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} != 200",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.xAccessToken} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "036b0ed4-24cc-450d-97f7-e925fa431134",
          "description" : "Validate JWT",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n            .stop()\n        .end()"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "2caf3347-3639-4e2d-9707-ebc4f78c8e75",
      "description" : "",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "Exception"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "2ac80d21-afa5-4e2e-abd8-3e2f99699494",
          "description" : "203.err.excep",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "ERROR",
            "logType" : "EIP",
            "loggerName" : "203.err.excep",
            "message" : "${exception.stacktrace}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=203.err.excep&message=${exception.stacktrace}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "7e37ae62-1b3f-4387-8045-9288af152ec0",
          "description" : "HTTP500",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "500",
              "language" : "Constant",
              "uuid" : "b1e4ec13-97d2-4f4c-8f02-b8dfec1c4c65"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "4e4d5605-a34a-4ea9-a021-e4b97d42aa28",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "error",
              "propertyValue" : "${exception.message}",
              "uuid" : "0b5e0dab-0775-4e4c-b0d1-3e9abc8429f0"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=${exception.message}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "1b58e9ba-aab3-403e-a8b3-59320e67e458",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "fe44c3fe-0120-42ef-a0fb-29f18e2133a3",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-7",
    "enabled" : true,
    "routeId" : 7,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "e9be1767-e958-4cd9-b43c-5946cc85b69d",
      "description" : "",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "org.springframework.dao.DataIntegrityViolationException"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "e9a83189-5f79-491e-ba70-5d938857c2e1",
          "description" : "203.err.sql",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "203.err.sql",
            "message" : "${exception.message}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=203.err.sql&message=${exception.message}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "dd89e97c-9cf4-4906-bf9c-6a35db0f6a84",
          "description" : "HTTP400",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "400",
              "language" : "Constant",
              "uuid" : "30cee844-1fdb-4e70-acea-034b607d6b74"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "f5dbf369-f2ef-41d1-94dc-8247a06c9a2e",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Invalid request. Please ensure valid inputs for foreign keys.",
              "uuid" : "1b6c15c9-23e7-4651-ad09-4525a023507f"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Invalid request. Please ensure valid inputs for foreign keys.&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "3efa5215-1aaa-45f3-957c-792a01c545b3",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "f230be8b-b908-4118-86b7-e5aee3c46f1d",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-9",
    "enabled" : false,
    "routeId" : 8,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "9f7a28d0-be7b-4dc9-a442-af24416847b8",
      "description" : "NoSuchKeyException",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "software.amazon.awssdk.services.s3.model.NoSuchKeyException"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "ae014224-25fb-45ff-ac52-20a29a6fa025",
          "description" : "203.err.s3",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "203.err.s3",
            "message" : "S3 key not found for attachmentId ${exchangeProperty.attachmentId} ",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=203.err.s3&message=S3 key not found for attachmentId ${exchangeProperty.attachmentId} &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "b41f0d89-df88-4145-81e1-9dd0210e088f",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "setHeaders",
          "nodeId" : "91e3def1-e47d-461b-98ce-94b31a5669d7",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "953afa77-7462-4f2e-90a3-82fe5e3af7be"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "5cb2f615-9a4a-41a7-aeb8-b51c6c3af734",
          "description" : "Clear Body",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "constant('')",
            "language" : "GroovyDsl",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
        }, {
          "name" : "stop",
          "nodeId" : "fe2082b5-c81b-4782-af0e-1dd1e4951040",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-8",
    "enabled" : true,
    "routeId" : 9,
    "route" : [ {
      "name" : "jms",
      "nodeId" : "e91642e0-3221-4eaa-9a07-ac7a3e84256b",
      "description" : "createAttachment",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "createAttachment",
        "destinationType" : "topic",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=createAttachment&destinationType=topic&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "94378668-43ef-4651-aaa2-ebfe7ae77c91",
      "description" : "Set Input Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "attachmentId",
          "propertyValue" : "$.data.attachment_id",
          "uuid" : "010ab903-7d82-4bc5-9db6-325809dcd27e"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipientId",
          "propertyValue" : "$.data.recipient_id",
          "uuid" : "adfc10e5-fe06-4d46-9764-725e50f4ff80"
        }, {
          "language" : "JsonPath",
          "propertyName" : "conversationId",
          "propertyValue" : "$.data.conversation_id",
          "uuid" : "cc89216a-b297-44a2-8cf0-35a4d30a55b1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "agencyId",
          "propertyValue" : "$.data.agency_id",
          "uuid" : "b4c79557-40ab-4d5d-b6a3-703566c66e49"
        }, {
          "language" : "JsonPath",
          "propertyName" : "uri",
          "propertyValue" : "$.data.uri",
          "uuid" : "1ec69836-f9ef-4e22-8934-3e23805150c1"
        }, {
          "language" : "Simple",
          "propertyName" : "bucket",
          "propertyValue" : "{{convey.aws.mediaBucket}}",
          "uuid" : "2272fbe7-3d1d-469a-b42c-d9561ff2c493"
        }, {
          "language" : "Simple",
          "propertyName" : "awsKey",
          "propertyValue" : "{{convey.aws.apiKey}}",
          "uuid" : "9ab6e8fc-56fb-4c53-97c6-43fafe728ce1"
        }, {
          "language" : "Simple",
          "propertyName" : "awsSecret",
          "propertyValue" : "{{convey.aws.apiSecret}}",
          "uuid" : "095103fa-65a7-47fd-a4ef-d043893017e2"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?attachmentId=$.data.attachment_id&recipientId=$.data.recipient_id&conversationId=$.data.conversation_id&agencyId=$.data.agency_id&uri=$.data.uri&bucket={{convey.aws.mediaBucket}}&awsKey={{convey.aws.apiKey}}&awsSecret={{convey.aws.apiSecret}}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "bc4084c8-6b23-4a70-84a9-d4a46c5e1009",
      "description" : "203.jms.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "203.jms.create.in",
        "message" : "${body} ${headers}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.jms.create.in&message=${body} ${headers}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "c0d9bba1-5005-44ae-a2b2-803817362e7e",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "20abbf49-3d9c-4e18-a138-660ba1ad9e32",
          "description" : "Set Request Params",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpUri",
              "headerValue" : "${exchangeProperty.uri}",
              "language" : "Simple",
              "uuid" : "e6c4fff1-9795-444e-82fb-b04865bed5fa"
            }, {
              "headerName" : "CamelHttpMethod",
              "headerValue" : "GET",
              "language" : "Constant",
              "uuid" : "d87d0968-1f83-4eb2-9eb4-31129bd5c374"
            }, {
              "headerName" : "Authorization",
              "headerValue" : "x-auth-header",
              "language" : "Header",
              "uuid" : "649f9e0d-94f3-4f5f-b972-6a928c001844"
            }, {
              "headerName" : "x-content-type",
              "headerValue" : "$.data.content_type",
              "language" : "JsonPath",
              "uuid" : "0a7641b2-946f-460b-aa1c-24d96fe04bcf"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "b723b5b1-ad72-49d6-8099-86d98c2ffda4",
          "description" : "Clear Body",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : " ",
            "language" : "Constant",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&language=Constant&suppressExceptions=false"
        }, {
          "name" : "http",
          "nodeId" : "d34eb80a-d784-4d62-a4a2-6eac1298d3b7",
          "description" : "Get Media",
          "properties" : {
            "_type" : "http",
            "active" : true,
            "advancedParameters" : [ ],
            "bridgeEndpoint" : false,
            "camelGroup" : "component",
            "connectTimeout" : "-1",
            "connectionRequestTimeout" : "-1",
            "disableStreamCache" : true,
            "httpMethod" : "GET",
            "httpUri" : "api.datagrate.co",
            "name" : "http",
            "scheme" : "https",
            "socketTimeout" : "-1",
            "throwExceptionOnFailure" : true,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "http",
          "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=GET&httpUri=api.datagrate.co&socketTimeout=-1&throwExceptionOnFailure=true"
        }, {
          "name" : "log",
          "nodeId" : "0870dd20-e3d2-41d2-9d0d-a63d5fcd8f4b",
          "description" : "create.api.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "203.jms.create.api.out",
            "message" : "(${header.CamelHttpResponseCode})",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.jms.create.api.out&message=(${header.CamelHttpResponseCode})&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "cfdc0296-3c2c-47e1-86eb-7150260c1fe9",
          "description" : "OK?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "messageRouter",
              "nodeId" : "444856bd-c5d6-4985-b499-e0e876ae963c",
              "description" : "",
              "properties" : {
                "_type" : "messageRouter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageRouter",
                "url" : ""
              },
              "_type" : "messageRouter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "c173fde4-4581-435e-86d3-5002cce71a6b",
                  "description" : "Get Response Params",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Header",
                      "propertyName" : "contentType",
                      "propertyValue" : "Content-Type",
                      "uuid" : "b0eed417-9fa6-4488-9e03-d5db794c8c1c"
                    }, {
                      "language" : "Header",
                      "propertyName" : "filesize",
                      "propertyValue" : "Content-Length",
                      "uuid" : "41e22bda-dce9-4065-b6da-49ec2365aca5"
                    }, {
                      "language" : "Header",
                      "propertyName" : "getMediaResponseCode",
                      "propertyValue" : "CamelHttpResponseCode",
                      "uuid" : "9d806ea2-3a38-475c-bc7c-0e55f97b50d9"
                    }, {
                      "language" : "Simple",
                      "propertyName" : "x-authorized",
                      "propertyValue" : "true",
                      "uuid" : "6acbe6e9-3676-4268-acdc-1a944b5526fa"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?contentType=Content-Type&filesize=Content-Length&getMediaResponseCode=CamelHttpResponseCode&x-authorized=true&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "63503c89-fc2f-4fbe-964a-62a7f140e6c9",
                  "description" : "Remove Headers",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
                }, {
                  "name" : "log",
                  "nodeId" : "263f072f-a7cd-4fbb-864c-db989c9e7b52",
                  "description" : "jms.create.thumb",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "203.jms.create.thumb",
                    "message" : "Processing media ${exchangeProperty.contentType} (${exchangeProperty.filesize} bytes) ",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.jms.create.thumb&message=Processing media ${exchangeProperty.contentType} (${exchangeProperty.filesize} bytes) &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "process",
                  "nodeId" : "201d269b-a849-4834-ba6e-e5768d06ad0c",
                  "description" : "Thumbnail/Upload",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "// Why doesn't this work in simple? @andrei\n// setProperty('extension', '${exchangeProperty.contentType.substring(${exchangeProperty.contentType.length()-3})}')\n// org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke method: length()-3 on null due to: java.lang.IllegalArgumentException: Method should end with parenthesis, was length()-3\nObjectMapper mapper = new ObjectMapper();\n\nlong unixTime = Instant.now().getEpochSecond();\nString[] contentType = String.valueOf(exchange.getProperty(\"contentType\")).split(\"/\");\nString mediaType = contentType[0];\nString extension = contentType[1];\n \nString filename = (String)exchange.getProperty(\"attachmentId\") + \".\" + extension;\nString awsKeyPrefix = String.valueOf(exchange.getProperty(\"agencyId\")) + \"/attachments/\" + String.valueOf(exchange.getProperty(\"attachmentId\")) + \"/\";\n\nString awsKeyName = awsKeyPrefix + String.valueOf(unixTime) + \".\" + extension;\n\nexchange.setProperty(\"extension\", extension);\nexchange.setProperty(\"awsKeyPrefix\", awsKeyPrefix);\nexchange.getIn().setHeader(\"CamelFileName\", filename);\nexchange.getIn().setHeader(\"CamelAwsS3Key\", awsKeyName);\n\nString bucketName = (String)exchange.getProperty(\"bucket\");\nString objectKey = (String)exchange.getProperty(\"keyName\");\n\nString awsKey = (String)exchange.getProperty(\"awsKey\");\nString awsSecret = (String)exchange.getProperty(\"awsSecret\");\nBasicAWSCredentials awsCredentials = new BasicAWSCredentials(awsKey, awsSecret);\n\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n                .withRegion(Regions.US_EAST_2)\n                .withCredentials(new AWSStaticCredentialsProvider(awsCredentials))\n                .build();\n\nString mediaResponseCode = String.valueOf(exchange.getProperty(\"getMediaResponseCode\"));\nif (mediaResponseCode.equals(\"200\")) {\n    URL mediaUrl = new URL((String)exchange.getProperty(\"uri\"));\n    \n    ByteArrayInputStream inStream = null;\n    InputStream inputStream = null;\n    try {\n        inputStream = (InputStream)exchange.getIn().getBody();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }   \n    \n    int bytesRead = 0;\n\t\tbyte[] data = new byte[4];\n    ByteArrayOutputStream bufferOutputStream = new ByteArrayOutputStream();\n    try {\n        while ((bytesRead = inputStream.read(data, 0, data.length)) != -1) {\n            bufferOutputStream.write(data, 0, bytesRead);\n        }\n\t\t\t  bufferOutputStream.flush();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    \n    ObjectMetadata meta = new ObjectMetadata();\n    byte[] content = bufferOutputStream.toByteArray();\n    meta.setContentLength(content.length);\n    meta.setContentType((String)exchange.getProperty(\"contentType\"));\n\n    try {\n        byte[] resultByte = DigestUtils.md5(new ByteArrayInputStream(content));\n        meta.setContentMD5(new String(Base64.getEncoder().encode(resultByte)));\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    try {       \n        System.out.println(\"Uploading asset: \" + awsKeyName+\" in bucket \"+bucketName);\n        PutObjectResult s3Result = s3Client.putObject(new PutObjectRequest(bucketName, awsKeyName, new ByteArrayInputStream(content), meta));\n        exchange.setProperty(\"uri\", \"s3://\" + bucketName + \"/\" + awsKeyName);\n\n    } catch (AmazonServiceException e) {\n\t\t\t  System.out.println(\"Error while uploading content on s3\");\n        // The call was transmitted successfully, but Amazon S3 couldn't process \n        // it, so it returned an error response.\n        e.printStackTrace();\n    } catch (SdkClientException e) {\n\t\t\t  System.out.println(\"Error while setup client for s3\");\n        // Amazon S3 couldn't be contacted for a response, or the client\n        // couldn't parse the response from Amazon S3.\n        e.printStackTrace();\n    }\n    if(!(\"image\".equals(mediaType) || \"video\".equals(mediaType))) {\n\t\t\texchange.setProperty(\"imageMeta\", \"\\\"{Content-Type: audio}\\\"\");\n\t\t\texchange.setProperty(\"thumbnail\", false);\n\t\t\treturn;\n\t\t}\n    FFmpegFrameGrabber grabber = null;\n    try {\n\t\t\t  if(\"image\".equals(mediaType)){\n\t\t\t\t\tMetadata imageMeta = ImageMetadataReader.readMetadata(new ByteArrayInputStream(content));\n        \texchange.setProperty(\"imageMeta\", mapper.writeValueAsString(imageMeta));\t\n\t\t\t\t}\n\t\t\t  if(\"video\".equals(mediaType)){\n\t\t\t\t\tgrabber = new FFmpegFrameGrabber(new ByteArrayInputStream(content));\n          grabber.start();\n\t\t\t\t\texchange.setProperty(\"imageMeta\", mapper.writeValueAsString(grabber.getVideoMetadata()));\n\t\t\t\t}\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\t  \n    try {\n\t\t\t  BufferedImage thumbnail = null;\n\t\t\t  if(\"image\".equals(mediaType)){\n\t\t\t\t\tthumbnail = (BufferedImage)ImageIO.read(new ByteArrayInputStream(content));\n\t\t\t\t}\n\t\t\t  if(\"video\".equals(mediaType)){\n\t\t\t\t\tFrame frame = grabber.grabKeyFrame();\n          if(frame != null){\n               thumbnail = new Java2DFrameConverter().convert(frame);\n          }\n          grabber.stop();\n          grabber.release();\n\t\t\t\t}\n        \n\n        int w = thumbnail.getWidth();\n        int h = thumbnail.getHeight();\n        int rotate = 0;\n        // if (w > h)\n            // rotate = 90;\n\n        thumbnail = Thumbnails.of(thumbnail)\n            .size(200, 200)\n            .outputQuality(0.9)\n            .outputFormat(\"png\")\n            .rotate(rotate)\n            .asBufferedImage();\n        \n        meta = new ObjectMetadata();\n\n        ByteArrayOutputStream thumbStream = new ByteArrayOutputStream();\n        ImageIO.write(thumbnail, \"png\", thumbStream);\n        thumbStream.close();\n\n        meta.setContentType(\"image/png\");\n        meta.setContentLength(thumbStream.size());\n\n        exchange.setProperty(\"thumbnail\", true);\n\t\t\t\tawsKeyName = awsKeyPrefix + String.valueOf(unixTime) + \"-thumb.png\";\n\n        System.out.println(\"Uploading thumbnail: \" + awsKeyName);\n        PutObjectResult s3Result = s3Client.putObject(new PutObjectRequest(bucketName, awsKeyName, new ByteArrayInputStream(thumbStream.toByteArray()), meta)); \n        exchange.setProperty(\"thumbUri\", \"s3://\" + bucketName + \"/\" + awsKeyName);\n\n    } catch (Exception e) {\n        System.out.println(\"Exception during thumbnail generation: \" + e.getMessage());\n    }\n} else {\n    exchange.setProperty(\"errorCode\", mediaResponseCode);\n}",
                    "import" : "import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.services.s3.internal.Constants;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.PutObjectRequest;\nimport com.amazonaws.services.s3.model.PutObjectResult;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\nimport com.amazonaws.services.s3.model.ObjectMetadata;\n\nimport java.io.*;\nimport java.util.Base64;\nimport java.net.URL;\nimport java.time.Instant;\n\nimport net.coobird.thumbnailator.Thumbnails;\nimport java.awt.image.BufferedImage;\nimport javax.imageio.ImageIO;\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.codec.digest.DigestUtils;\n\nimport com.drew.metadata.Metadata;\nimport com.drew.imaging.ImageMetadataReader;\nimport com.drew.imaging.ImageProcessingException;\nimport com.drew.imaging.jpeg.JpegMetadataReader;\nimport com.drew.imaging.jpeg.JpegProcessingException;\nimport com.drew.imaging.jpeg.JpegSegmentMetadataReader;\nimport com.drew.metadata.exif.ExifReader;\nimport com.drew.metadata.iptc.IptcReader;\nimport com.drew.lang.GeoLocation;\nimport com.drew.metadata.exif.GpsDirectory;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport org.bytedeco.javacv.FFmpegFrameGrabber;\nimport org.bytedeco.javacv.Frame;\nimport org.bytedeco.javacv.Java2DFrameConverter;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?code=// Why doesn't this work in simple? @andrei\n// setProperty('extension', '${exchangeProperty.contentType.substring(${exchangeProperty.contentType.length()-3})}')\n// org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke method: length()-3 on null due to: java.lang.IllegalArgumentException: Method should end with parenthesis, was length()-3\nObjectMapper mapper = new ObjectMapper();\n\nlong unixTime = Instant.now().getEpochSecond();\nString[] contentType = String.valueOf(exchange.getProperty(\"contentType\")).split(\"/\");\nString mediaType = contentType[0];\nString extension = contentType[1];\n \nString filename = (String)exchange.getProperty(\"attachmentId\") + \".\" + extension;\nString awsKeyPrefix = String.valueOf(exchange.getProperty(\"agencyId\")) + \"/attachments/\" + String.valueOf(exchange.getProperty(\"attachmentId\")) + \"/\";\n\nString awsKeyName = awsKeyPrefix + String.valueOf(unixTime) + \".\" + extension;\n\nexchange.setProperty(\"extension\", extension);\nexchange.setProperty(\"awsKeyPrefix\", awsKeyPrefix);\nexchange.getIn().setHeader(\"CamelFileName\", filename);\nexchange.getIn().setHeader(\"CamelAwsS3Key\", awsKeyName);\n\nString bucketName = (String)exchange.getProperty(\"bucket\");\nString objectKey = (String)exchange.getProperty(\"keyName\");\n\nString awsKey = (String)exchange.getProperty(\"awsKey\");\nString awsSecret = (String)exchange.getProperty(\"awsSecret\");\nBasicAWSCredentials awsCredentials = new BasicAWSCredentials(awsKey, awsSecret);\n\nAmazonS3 s3Client = AmazonS3ClientBuilder.standard()\n                .withRegion(Regions.US_EAST_2)\n                .withCredentials(new AWSStaticCredentialsProvider(awsCredentials))\n                .build();\n\nString mediaResponseCode = String.valueOf(exchange.getProperty(\"getMediaResponseCode\"));\nif (mediaResponseCode.equals(\"200\")) {\n    URL mediaUrl = new URL((String)exchange.getProperty(\"uri\"));\n    \n    ByteArrayInputStream inStream = null;\n    InputStream inputStream = null;\n    try {\n        inputStream = (InputStream)exchange.getIn().getBody();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }   \n    \n    int bytesRead = 0;\n\t\tbyte[] data = new byte[4];\n    ByteArrayOutputStream bufferOutputStream = new ByteArrayOutputStream();\n    try {\n        while ((bytesRead = inputStream.read(data, 0, data.length)) != -1) {\n            bufferOutputStream.write(data, 0, bytesRead);\n        }\n\t\t\t  bufferOutputStream.flush();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    \n    ObjectMetadata meta = new ObjectMetadata();\n    byte[] content = bufferOutputStream.toByteArray();\n    meta.setContentLength(content.length);\n    meta.setContentType((String)exchange.getProperty(\"contentType\"));\n\n    try {\n        byte[] resultByte = DigestUtils.md5(new ByteArrayInputStream(content));\n        meta.setContentMD5(new String(Base64.getEncoder().encode(resultByte)));\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n\n    try {       \n        System.out.println(\"Uploading asset: \" + awsKeyName+\" in bucket \"+bucketName);\n        PutObjectResult s3Result = s3Client.putObject(new PutObjectRequest(bucketName, awsKeyName, new ByteArrayInputStream(content), meta));\n        exchange.setProperty(\"uri\", \"s3://\" + bucketName + \"/\" + awsKeyName);\n\n    } catch (AmazonServiceException e) {\n\t\t\t  System.out.println(\"Error while uploading content on s3\");\n        // The call was transmitted successfully, but Amazon S3 couldn't process \n        // it, so it returned an error response.\n        e.printStackTrace();\n    } catch (SdkClientException e) {\n\t\t\t  System.out.println(\"Error while setup client for s3\");\n        // Amazon S3 couldn't be contacted for a response, or the client\n        // couldn't parse the response from Amazon S3.\n        e.printStackTrace();\n    }\n    if(!(\"image\".equals(mediaType) || \"video\".equals(mediaType))) {\n\t\t\texchange.setProperty(\"imageMeta\", \"\\\"{Content-Type: audio}\\\"\");\n\t\t\texchange.setProperty(\"thumbnail\", false);\n\t\t\treturn;\n\t\t}\n    FFmpegFrameGrabber grabber = null;\n    try {\n\t\t\t  if(\"image\".equals(mediaType)){\n\t\t\t\t\tMetadata imageMeta = ImageMetadataReader.readMetadata(new ByteArrayInputStream(content));\n        \texchange.setProperty(\"imageMeta\", mapper.writeValueAsString(imageMeta));\t\n\t\t\t\t}\n\t\t\t  if(\"video\".equals(mediaType)){\n\t\t\t\t\tgrabber = new FFmpegFrameGrabber(new ByteArrayInputStream(content));\n          grabber.start();\n\t\t\t\t\texchange.setProperty(\"imageMeta\", mapper.writeValueAsString(grabber.getVideoMetadata()));\n\t\t\t\t}\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\t  \n    try {\n\t\t\t  BufferedImage thumbnail = null;\n\t\t\t  if(\"image\".equals(mediaType)){\n\t\t\t\t\tthumbnail = (BufferedImage)ImageIO.read(new ByteArrayInputStream(content));\n\t\t\t\t}\n\t\t\t  if(\"video\".equals(mediaType)){\n\t\t\t\t\tFrame frame = grabber.grabKeyFrame();\n          if(frame != null){\n               thumbnail = new Java2DFrameConverter().convert(frame);\n          }\n          grabber.stop();\n          grabber.release();\n\t\t\t\t}\n        \n\n        int w = thumbnail.getWidth();\n        int h = thumbnail.getHeight();\n        int rotate = 0;\n        // if (w > h)\n            // rotate = 90;\n\n        thumbnail = Thumbnails.of(thumbnail)\n            .size(200, 200)\n            .outputQuality(0.9)\n            .outputFormat(\"png\")\n            .rotate(rotate)\n            .asBufferedImage();\n        \n        meta = new ObjectMetadata();\n\n        ByteArrayOutputStream thumbStream = new ByteArrayOutputStream();\n        ImageIO.write(thumbnail, \"png\", thumbStream);\n        thumbStream.close();\n\n        meta.setContentType(\"image/png\");\n        meta.setContentLength(thumbStream.size());\n\n        exchange.setProperty(\"thumbnail\", true);\n\t\t\t\tawsKeyName = awsKeyPrefix + String.valueOf(unixTime) + \"-thumb.png\";\n\n        System.out.println(\"Uploading thumbnail: \" + awsKeyName);\n        PutObjectResult s3Result = s3Client.putObject(new PutObjectRequest(bucketName, awsKeyName, new ByteArrayInputStream(thumbStream.toByteArray()), meta)); \n        exchange.setProperty(\"thumbUri\", \"s3://\" + bucketName + \"/\" + awsKeyName);\n\n    } catch (Exception e) {\n        System.out.println(\"Exception during thumbnail generation: \" + e.getMessage());\n    }\n} else {\n    exchange.setProperty(\"errorCode\", mediaResponseCode);\n}&import=import com.amazonaws.AmazonServiceException;\nimport com.amazonaws.HttpMethod;\nimport com.amazonaws.SdkClientException;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport com.amazonaws.services.s3.internal.Constants;\nimport com.amazonaws.services.s3.AmazonS3;\nimport com.amazonaws.services.s3.AmazonS3ClientBuilder;\nimport com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;\nimport com.amazonaws.services.s3.model.GetObjectRequest;\nimport com.amazonaws.services.s3.model.PutObjectRequest;\nimport com.amazonaws.services.s3.model.PutObjectResult;\nimport com.amazonaws.services.s3.model.ResponseHeaderOverrides;\nimport com.amazonaws.services.s3.model.S3Object;\nimport com.amazonaws.services.s3.model.ObjectMetadata;\n\nimport java.io.*;\nimport java.util.Base64;\nimport java.net.URL;\nimport java.time.Instant;\n\nimport net.coobird.thumbnailator.Thumbnails;\nimport java.awt.image.BufferedImage;\nimport javax.imageio.ImageIO;\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.codec.digest.DigestUtils;\n\nimport com.drew.metadata.Metadata;\nimport com.drew.imaging.ImageMetadataReader;\nimport com.drew.imaging.ImageProcessingException;\nimport com.drew.imaging.jpeg.JpegMetadataReader;\nimport com.drew.imaging.jpeg.JpegProcessingException;\nimport com.drew.imaging.jpeg.JpegSegmentMetadataReader;\nimport com.drew.metadata.exif.ExifReader;\nimport com.drew.metadata.iptc.IptcReader;\nimport com.drew.lang.GeoLocation;\nimport com.drew.metadata.exif.GpsDirectory;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport org.bytedeco.javacv.FFmpegFrameGrabber;\nimport org.bytedeco.javacv.Frame;\nimport org.bytedeco.javacv.Java2DFrameConverter;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "abbe99e8-9ff3-4ba6-81f8-8078c0ecf57c",
                  "description" : "Remove Headers",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".removeHeaders(\"*\",\"x-\")",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\",\"x-\")"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "1070dfdc-391f-4ff9-9f9b-cd963d4e0acf",
                  "description" : "Set AttachmentId",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "attachmentId",
                      "headerValue" : "${exchangeProperty.attachmentId}",
                      "language" : "Simple",
                      "uuid" : "6db0e06d-4286-46b6-bc3c-c8b19b21bf3d"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "setBody",
                  "nodeId" : "b8ab742d-8b8b-45d0-b519-d17f3f8d3932",
                  "description" : "Set Request",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "{\"content_type\": \"${exchangeProperty.contentType}\", \"filesize\": ${exchangeProperty.filesize}, \"uri\": \"${exchangeProperty.uri}\", \"thumbnail\": \"${exchangeProperty.thumbUri}\", \"error_code\": \"${exchangeProperty.errorCode}\", \"error_message\": \"${exchangeProperty.errorMessage}\", \"status\": \"processed\", \"metadata\": ${exchangeProperty.imageMeta}}",
                    "language" : "Simple",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"content_type\": \"${exchangeProperty.contentType}\", \"filesize\": ${exchangeProperty.filesize}, \"uri\": \"${exchangeProperty.uri}\", \"thumbnail\": \"${exchangeProperty.thumbUri}\", \"error_code\": \"${exchangeProperty.errorCode}\", \"error_message\": \"${exchangeProperty.errorMessage}\", \"status\": \"processed\", \"metadata\": ${exchangeProperty.imageMeta}}&language=Simple&suppressExceptions=false"
                }, {
                  "name" : "log",
                  "nodeId" : "e41ea01b-4b1e-4fb0-a15e-09c4837aadc0",
                  "description" : "create.api.in",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "203.jms.create.api.in",
                    "message" : "PUT attachment/${header.attachmentId} ${body}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=203.jms.create.api.in&message=PUT attachment/${header.attachmentId} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "direct",
                  "nodeId" : "b4e2af4a-1b18-4e52-8c7f-ff9f5958bdbf",
                  "description" : "updateAttachment",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "updateAttachment",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=updateAttachment"
                } ],
                "properties" : { }
              }, {
                "type" : "when",
                "label" : "set content-type",
                "route" : [ {
                  "name" : "setHeaders",
                  "nodeId" : "3fb485f6-f3ac-4df0-a750-f7a3cc5a3e61",
                  "description" : "",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "Content-Type",
                      "headerValue" : "x-content-type",
                      "language" : "Header",
                      "uuid" : "1f793485-93a8-4549-a9de-bfa48bb08091"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${header.Content-Type} == \"application/x-download\"",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "!= 200",
            "route" : [ {
              "name" : "convertBodyTo",
              "nodeId" : "83d8145e-47da-451b-883c-75008abfb38e",
              "description" : "String.class",
              "properties" : {
                "_type" : "convertBodyTo",
                "active" : true,
                "camelGroup" : "transform",
                "name" : "convertBodyTo",
                "targetClass" : "String.class",
                "url" : ""
              },
              "_type" : "convertBodyTo",
              "kameletPropertiesUrl" : "?targetClass=String.class"
            }, {
              "name" : "log",
              "nodeId" : "3fae62c5-7512-457d-afc1-6b22b057d60e",
              "description" : "create.err.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "ERROR",
                "logType" : "EIP",
                "loggerName" : "203.jms.create.err.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=203.jms.create.err.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "stop",
              "nodeId" : "c7065289-a392-48f5-a305-6ed25a99cc3e",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} != 200",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "!attachmentId",
        "route" : [ {
          "name" : "log",
          "nodeId" : "910391b7-0353-46be-8f6f-e78fb6e68c57",
          "description" : "203.jms.create.err",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "ERROR",
            "logType" : "EIP",
            "loggerName" : "203.jms.create.err",
            "message" : "Input data does not specify attachmentId.",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=203.jms.create.err&message=Input data does not specify attachmentId.&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "stop",
          "nodeId" : "44b672df-65b2-46f2-9ade-7bf347708666",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.attachmentId} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  } ],
  "traits" : [ {
    "name" : "health",
    "configuration" : {
      "enabled" : true,
      "livenessProbeEnabled" : true,
      "readinessProbeEnabled" : true
    }
  } ],
  "id" : "904eb2f9-cf1c-4d03-bebb-f4c5e495979c",
  "name" : "r203-attachments-api",
  "description" : "",
  "createdAt" : "2023-10-04T18:05:09.864180148",
  "updatedAt" : "2023-10-04T18:05:09.864180869",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}