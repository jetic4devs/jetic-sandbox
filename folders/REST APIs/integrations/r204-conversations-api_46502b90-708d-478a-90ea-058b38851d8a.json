{
  "revision" : 2431,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : "76bbd480-ac89-4adf-b48e-13d27338d011",
  "currentProfileUuid" : "62c1cde5-30f6-41d5-8c08-26ffb86e3053",
  "parameterGroupUuids" : [ "e1d81a6a-655e-42ff-8288-6b0891abe7b0", "3dacce84-b8c8-4759-8bfa-355c8cf6acd6", "ca06b01a-b205-4b2b-9e9d-9f49614e7e94", "c9a8ecf3-391c-4a06-bdc0-68a1a504fdd9", "351ac858-4e6b-4902-9090-0be62c4dc9e0" ],
  "repoResourceUuids" : [ "07e34d9c-7cea-4532-94e6-7da0f6bddeb3", "fedc2ba8-c348-4a92-a89c-844badda8f1f", "f19ea164-e18c-4a77-a685-caed6456f93f", "2d21c0b9-a829-4420-84e6-67d34aaf6026", "71e48dda-80e9-4034-af48-cf39a9a10938", "60b1161c-74ee-4cd8-96a1-0055c90271c1", "f50d9293-f6bf-47b6-b21e-4cfda6eee3c4", "eddb9cf2-828c-4bf6-a038-93128340a0c2", "e859d27c-054e-489d-96ef-1338b179fde7", "38657aaf-c7a4-4a04-9321-bb750c2e67b5", "1872a943-2a9b-4513-8739-06e95090b977", "a676ceae-2bb8-4320-8b94-4bb7272d5d3f", "6c555d15-4f06-4916-9c52-124cfb38307c", "05649865-0c5a-4bfd-bddb-046f69383940", "55882383-5e69-44b0-a3ac-12785e306303", "9fb5f9ac-54fb-4ea4-b9d6-a3f95d92021b", "c0c942f5-065d-48d6-88af-e7292dd22872", "3b5aa833-0eaa-4cb9-8ce8-ca97eac74110", "a1057428-1531-40a8-a129-ed27382e947f", "0d41f9ca-58b0-434f-a68e-5855e59f3249", "17e7ca54-4247-4e9c-ba30-d078e3ac407a" ],
  "routeDefinitions" : [ {
    "id" : null,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "4b5398d0-2828-4977-9e47-de420f19c7cd",
      "description" : "createConversation",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "createConversation",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations&method=post&operationName=createConversation&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "21481ec3-1e15-4802-8cbf-34f0ff7bb422",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "80254fa8-980d-4671-a6cb-0207f149dec9",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f8d7c943-9fd1-4785-b9ee-08f6f383a8d4",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".log(LoggingLevel.INFO, 'log', '${headers} ${body}')\n.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.log(LoggingLevel.INFO, 'log', '${headers} ${body}')\n.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "de688613-8754-47a2-81bc-fcb9fb2b813d",
      "description" : "204.api.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.create.in",
        "message" : "${body} ",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.in&message=${body} &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "008e4b00-fabc-4d21-a813-df2b77be759e",
      "description" : "Set Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "direction",
          "propertyValue" : "$.direction",
          "uuid" : "26c24035-6fe0-45d8-8890-c394c0e2cdd0"
        }, {
          "language" : "JsonPath",
          "propertyName" : "number",
          "propertyValue" : "$.number",
          "uuid" : "de2ff1ae-ac68-4584-b8ff-a396ae0d3d4a"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipients",
          "propertyValue" : "$.recipients",
          "uuid" : "61445deb-3dc4-490f-a4d8-974e8974bfbd"
        }, {
          "language" : "Header",
          "propertyName" : "operatorId",
          "propertyValue" : "x-operator-id",
          "uuid" : "47982fb4-7d74-4fbc-910e-d47b1f354bc7"
        }, {
          "language" : "JsonPath",
          "propertyName" : "message",
          "propertyValue" : "$.message",
          "uuid" : "a004f578-b42f-4222-a9d6-d4e2140b3cc8"
        }, {
          "language" : "JsonPath",
          "propertyName" : "conversationLabel",
          "propertyValue" : "$.label",
          "uuid" : "6c2dc9eb-e838-40fc-adc6-5030e279edc2"
        }, {
          "language" : "Header",
          "propertyName" : "sessionId",
          "propertyValue" : "x-session-id",
          "uuid" : "db28cf18-ba39-40bd-a2f5-c1944933e429"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "8063fa2c-d0dd-43c5-b9e7-25138b6f5d5a"
        }, {
          "language" : "JsonPath",
          "propertyName" : "language",
          "propertyValue" : "$.language",
          "uuid" : "3c13902f-af04-4d53-8984-1e375b497976"
        }, {
          "language" : "Constant",
          "propertyName" : "status",
          "propertyValue" : "active",
          "uuid" : "d695927f-c6ef-4b7d-bd5c-9d8f25574500"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipientNumber",
          "propertyValue" : "$.recipients[0].number",
          "uuid" : "b9a2b661-49fd-4aa5-82f2-0f118cb7cc5c"
        }, {
          "language" : "JsonPath",
          "propertyName" : "channel",
          "propertyValue" : "$.channel",
          "uuid" : "47470f95-d059-46db-9449-82fbb6d92461"
        }, {
          "language" : "JsonPath",
          "propertyName" : "resourceFile",
          "propertyValue" : "$.resource_file",
          "uuid" : "e7449648-1ce3-4e5a-8097-939621719fa4"
        }, {
          "language" : "JsonPath",
          "propertyName" : "metadata",
          "propertyValue" : "$.metadata",
          "uuid" : "2e90956f-89bc-49da-926c-c872de0871a4"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?direction=$.direction&number=$.number&recipients=$.recipients&operatorId=x-operator-id&message=$.message&conversationLabel=$.label&sessionId=x-session-id&agencyId=x-agency-id&language=$.language&status=active&recipientNumber=$.recipients[0].number&channel=$.channel&resourceFile=$.resource_file&metadata=$.metadata&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5433fa85-7727-4283-9771-63aea004a4f6",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"Authorization\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"Authorization\", \"x-*\")"
    }, {
      "name" : "messageRouter",
      "nodeId" : "e2bb5dcb-c016-4f3c-af15-a5218c0e4384",
      "description" : "conversation.channel",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "when",
        "label" : "media",
        "route" : [ {
          "name" : "process",
          "nodeId" : "cb8e3051-0468-40b8-bcd5-ff57f5f7d137",
          "description" : "Validate Resource",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "String resourceFile = (String)exchange.getProperty(\"resourceFile\");\nif (resourceFile == null || !String.valueOf(resourceFile).startsWith(\"http\")) {\n\texchange.setProperty(\"error\", \"Resource file not found. Resource file must be specified for media processing.\");\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 400);\n}",
            "import" : "// import org.apache.camel.Message",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=String resourceFile = (String)exchange.getProperty(\"resourceFile\");\nif (resourceFile == null || !String.valueOf(resourceFile).startsWith(\"http\")) {\n\texchange.setProperty(\"error\", \"Resource file not found. Resource file must be specified for media processing.\");\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 400);\n}&import=// import org.apache.camel.Message"
        }, {
          "name" : "messageFilter",
          "nodeId" : "45fa3f13-67f2-43f3-a8d7-92d7b9f50c2c",
          "description" : "Invalid?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "400",
            "route" : [ {
              "name" : "dslProcessor",
              "nodeId" : "def7243a-81f4-4cbf-ae6d-4a091819f863",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean('renderResponse')",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
            }, {
              "name" : "stop",
              "nodeId" : "935a85d5-3fbf-4701-9dc4-2acfcb86450e",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} == 400",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.channel} == \"media\"",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "process",
          "nodeId" : "5dc8458d-6200-457a-83fb-0518ed980dc3",
          "description" : "Validate Recipient",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ArrayList<HashMap<String, Object>> recipients = (ArrayList)exchange.getProperty(\"recipients\");\nif (recipients == null || recipients.size() == 0) {\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 400);\n\texchange.setProperty(\"error\", \"You must specify at least one recipient.\")\n}",
            "import" : "// import org.apache.camel.Message",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, Object>> recipients = (ArrayList)exchange.getProperty(\"recipients\");\nif (recipients == null || recipients.size() == 0) {\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 400);\n\texchange.setProperty(\"error\", \"You must specify at least one recipient.\")\n}&import=// import org.apache.camel.Message"
        }, {
          "name" : "messageFilter",
          "nodeId" : "d31eea07-0eb5-456c-9e7c-fb3c862266c4",
          "description" : "400",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "process",
              "nodeId" : "7c9a677d-137b-4f58-9f18-ac353260bcf6",
              "description" : "Set Number Request",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "exchange.getIn().setHeader(\"CamelHttpPath\", \"/api/v1/numbers\");\n\nString query = \"limit=1&status=active\";\nString direction = (String)exchange.getProperty(\"direction\");\nString number = (String)exchange.getProperty(\"number\");\n\nSystem.out.println(\"number: \" + number);\nif (number != null)\n\tquery += \"&number=\" + number;\nif (direction == null || direction.equals(\"outbound\"))\n\tquery += \"&outbound=1\";\nelse if (direction.equals(\"inbound\"))\n\tquery += \"&inbound=1\";\n\nexchange.getIn().setHeader(\"CamelHttpQuery\", query);",
                "import" : "// import org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=exchange.getIn().setHeader(\"CamelHttpPath\", \"/api/v1/numbers\");\n\nString query = \"limit=1&status=active\";\nString direction = (String)exchange.getProperty(\"direction\");\nString number = (String)exchange.getProperty(\"number\");\n\nSystem.out.println(\"number: \" + number);\nif (number != null)\n\tquery += \"&number=\" + number;\nif (direction == null || direction.equals(\"outbound\"))\n\tquery += \"&outbound=1\";\nelse if (direction.equals(\"inbound\"))\n\tquery += \"&inbound=1\";\n\nexchange.getIn().setHeader(\"CamelHttpQuery\", query);&import=// import org.apache.camel.Message"
            }, {
              "name" : "log",
              "nodeId" : "f0c4c7c6-d1f2-4dc4-8278-c8a15de3ce40",
              "description" : "204.api.create.num.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "204.api.create.num.in",
                "message" : "GET ${header.CamelHttpPath}?${header.CamelHttpQuery}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.num.in&message=GET ${header.CamelHttpPath}?${header.CamelHttpQuery}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "http",
              "nodeId" : "18e74181-2582-4e3b-b518-ca8bfeacf9c9",
              "description" : "GET /numbers",
              "properties" : {
                "_type" : "http",
                "active" : true,
                "advancedParameters" : [ ],
                "bridgeEndpoint" : false,
                "camelGroup" : "component",
                "connectTimeout" : "-1",
                "connectionRequestTimeout" : "-1",
                "disableStreamCache" : true,
                "httpMethod" : "GET",
                "httpUri" : "{{convey.api.host}}",
                "name" : "http",
                "scheme" : "https",
                "socketTimeout" : "-1",
                "throwExceptionOnFailure" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "http",
              "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=false"
            }, {
              "name" : "log",
              "nodeId" : "164d1f7d-e5c7-4e09-aebe-5179b592dc8f",
              "description" : "204.api.create.num.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "204.api.create.num.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.num.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "setProperties",
              "nodeId" : "77460f5d-77f2-4b5b-9cda-2e57e40b896c",
              "description" : "Get Number",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "JsonPath",
                  "propertyName" : "providerNumber",
                  "propertyValue" : "$.data[0]",
                  "uuid" : "41887faf-9f78-472a-8f5a-ba976efc14e5"
                }, {
                  "language" : "JsonPath",
                  "propertyName" : "providerNumberId",
                  "propertyValue" : "$.data[0].number_id",
                  "uuid" : "fcfcda28-6211-43b6-8e91-24a2491764db"
                } ],
                "suppressExceptions" : true,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?providerNumber=$.data[0]&providerNumberId=$.data[0].number_id&addNamespaces=false&suppressExceptions=true"
            }, {
              "name" : "messageFilter",
              "nodeId" : "b492b806-0aa6-4653-96b0-07634a8d8b92",
              "description" : "!200 || !number",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "filter",
                "label" : "number error",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "e756c915-750e-4011-a5ed-b171df2254d2",
                  "description" : "HTTP400",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Constant",
                      "propertyName" : "error",
                      "propertyValue" : "Error provisioning provider number",
                      "uuid" : "c57070fd-fe01-40e9-b0a6-7d82b5f8e259"
                    }, {
                      "language" : "Constant",
                      "propertyName" : "errorCode",
                      "propertyValue" : "CVA4-0100",
                      "uuid" : "112ff429-9e2b-4b74-aaf4-15a1de829c29"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?error=Error provisioning provider number&errorCode=CVA4-0100&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "025bf72a-d9ae-4925-8586-f8a06bad7ac2",
                  "description" : "Render Response",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".bean('renderResponse')",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
                }, {
                  "name" : "log",
                  "nodeId" : "1b0ab44b-8645-4366-8ea6-804cf58a9ff9",
                  "description" : "204.api.create.400",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "WARN",
                    "logType" : "EIP",
                    "loggerName" : "204.api.create.400",
                    "message" : "(${header.CamelHttpResponseCode}) ${body}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=204.api.create.400&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "stop",
                  "nodeId" : "18cf2b9f-b4c2-4c74-9409-48496d4b7e8c",
                  "description" : "",
                  "properties" : {
                    "_type" : "stop",
                    "camelGroup" : "misc",
                    "name" : "stop",
                    "url" : ""
                  },
                  "_type" : "stop",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${header.CamelHttpResponseCode} != 200 || ${exchangeProperty.providerNumberId} == null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "code==400",
            "route" : [ {
              "name" : "dslProcessor",
              "nodeId" : "3c8b8bfe-fbf0-4228-8872-655297a665fd",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean('renderResponse')",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
            }, {
              "name" : "stop",
              "nodeId" : "c882390b-09e0-40d0-8286-134e3e434421",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} == 400",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "c681c432-80e6-4378-a66b-d05ac5e7ca27",
          "description" : "create-conversation",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "create-conversation",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=create-conversation"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-1",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "6a2d44cb-3da4-4533-86c9-f8d6a81a2df0",
      "description" : "getConversations",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getConversations",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations&method=get&operationName=getConversations&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "1f5122b6-bc03-4f2b-9575-3abd3000cdd2",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "50033794-2cd7-46b6-ad01-f3fa83ce355f",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "0165b635-5ed6-48c6-9841-5fc13331e57f",
      "description" : "Set Request Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "24ba142d-d420-48fd-bdc8-771a81d13120"
        }, {
          "language" : "Header",
          "propertyName" : "CamelHttpQuery",
          "propertyValue" : "CamelHttpQuery",
          "uuid" : "81b229fe-76b1-4f81-bb2e-6967af8366fe"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&CamelHttpQuery=CamelHttpQuery&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "1fcd9e96-1d66-4dac-b236-6d16b7c5e380",
      "description" : "SQL Get Conversations",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:conversations.select.sql.vm?allowContextMapAll=true\")\n    \t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getconversations-sql-1')\n    \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\").id('dslProcessor-1')",
        "name" : "dslProcessor",
        "propertyList" : [ {
          "language" : "Constant",
          "propertyName" : "responseKey",
          "propertyValue" : "Conversations",
          "uuid" : "72cd95b9-26f7-4aab-85c6-a09b0804df1b"
        }, {
          "language" : "Simple",
          "propertyName" : "operationName",
          "propertyValue" : "${exchangeProperty.CamelToEndpoint}",
          "uuid" : "508e3671-1515-4f3d-894d-d5e7e44e85db"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "24ba142d-d420-48fd-bdc8-771a81d13120"
        }, {
          "language" : "Header",
          "propertyName" : "CamelHttpQuery",
          "propertyValue" : "CamelHttpQuery",
          "uuid" : "81b229fe-76b1-4f81-bb2e-6967af8366fe"
        } ],
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?responseKey=Conversations&operationName=${exchangeProperty.CamelToEndpoint}&agencyId=x-agency-id&CamelHttpQuery=CamelHttpQuery&dsl=.to(\"velocity:conversations.select.sql.vm?allowContextMapAll=true\")\n    \t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getconversations-sql-1')\n    \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\").id('dslProcessor-1')"
    }, {
      "name" : "process",
      "nodeId" : "354c22c9-b944-43cd-8fb5-38b147e76dc5",
      "description" : "Format Response",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ArrayList<HashMap<String, Object>> conversations = (ArrayList)exchange.getIn().getBody();\n\nint pageSize = conversations.size();\nint totalRows = pageSize;\n\nfor (int i = 0; i < conversations.size(); i++) {\n\tHashMap<String, Object> conversation = (HashMap)conversations.get(i);\n\n\tif (i == 0)\n\t\ttotalRows = (int)conversation.get(\"total_rows\");\n\t\n\tString[] convoRecipsRaw = conversation.get(\"recipients\").split(\",\");\n\n\tArrayList<HashMap<String, String>> convoRecipients = new ArrayList<HashMap<String, String>>();\t\n\n\ttry {\n\t\tif (convoRecipsRaw.length > 0) {\n\t\t\tfor (int j = 0; j < convoRecipsRaw.length; j++) {\n\n\t\t\t\tString[] convoRecipRaw = convoRecipsRaw[j].split(\"::\");\n\n\t\t\t\tconvoRecipients.add(new HashMap<String, String>() {{\n\t\t\t\t\tput(\"recipient_id\", (String)convoRecipRaw[0]);\t\t\n\t\t\t\t\tput(\"number\", (String)convoRecipRaw[1]);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tput(\"name\", (String)convoRecipRaw[2]);\n\t\t\t\t\t\tput(\"language\", (String)convoRecipRaw[3]);\t\t\t\t\n\t\t\t\t\t} catch (Exception e) {}\n\t\t\t\t}});\n\n\t\t\t\ttry {\n\t\t\t\t\tconvoRecipients.put(\"label\", (String)convoRecipRaw[2]);\n\t\t\t\t\tconvoRecipients.put(\"language\", (String)convoRecipRaw[3]);\n\t\t\t\t} catch (Exception e) {}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (j == 0) \n\t\t\t\t\t\tconversation.put(\"primary_recipient\", (String)convoRecipRaw[1]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tconversation.put(\"primary_recipient\", null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {\n\t\tconversation.put(\"primary_recipient\", null);\n\t}\n\n\tconversation.put(\"recipients\", convoRecipients);\n\tconversations.set(i, conversation);\n}\n\nHashMap<String, Object> responseMeta = new HashMap<String, Object>() {{\n\tput(\"totalRows\", totalRows);\n\tput(\"pageSize\", pageSize);\n\tput(\"query\", exchange.getProperty(\"x-query-params\"));\n}};\n\nObjectMapper mapper = new ObjectMapper();\nexchange.getIn().setHeader(\"x-response-metadata\", mapper.writeValueAsString(responseMeta));\nexchange.getIn().setBody(conversations);",
        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, Object>> conversations = (ArrayList)exchange.getIn().getBody();\n\nint pageSize = conversations.size();\nint totalRows = pageSize;\n\nfor (int i = 0; i < conversations.size(); i++) {\n\tHashMap<String, Object> conversation = (HashMap)conversations.get(i);\n\n\tif (i == 0)\n\t\ttotalRows = (int)conversation.get(\"total_rows\");\n\t\n\tString[] convoRecipsRaw = conversation.get(\"recipients\").split(\",\");\n\n\tArrayList<HashMap<String, String>> convoRecipients = new ArrayList<HashMap<String, String>>();\t\n\n\ttry {\n\t\tif (convoRecipsRaw.length > 0) {\n\t\t\tfor (int j = 0; j < convoRecipsRaw.length; j++) {\n\n\t\t\t\tString[] convoRecipRaw = convoRecipsRaw[j].split(\"::\");\n\n\t\t\t\tconvoRecipients.add(new HashMap<String, String>() {{\n\t\t\t\t\tput(\"recipient_id\", (String)convoRecipRaw[0]);\t\t\n\t\t\t\t\tput(\"number\", (String)convoRecipRaw[1]);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tput(\"name\", (String)convoRecipRaw[2]);\n\t\t\t\t\t\tput(\"language\", (String)convoRecipRaw[3]);\t\t\t\t\n\t\t\t\t\t} catch (Exception e) {}\n\t\t\t\t}});\n\n\t\t\t\ttry {\n\t\t\t\t\tconvoRecipients.put(\"label\", (String)convoRecipRaw[2]);\n\t\t\t\t\tconvoRecipients.put(\"language\", (String)convoRecipRaw[3]);\n\t\t\t\t} catch (Exception e) {}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (j == 0) \n\t\t\t\t\t\tconversation.put(\"primary_recipient\", (String)convoRecipRaw[1]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tconversation.put(\"primary_recipient\", null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (Exception e) {\n\t\tconversation.put(\"primary_recipient\", null);\n\t}\n\n\tconversation.put(\"recipients\", convoRecipients);\n\tconversations.set(i, conversation);\n}\n\nHashMap<String, Object> responseMeta = new HashMap<String, Object>() {{\n\tput(\"totalRows\", totalRows);\n\tput(\"pageSize\", pageSize);\n\tput(\"query\", exchange.getProperty(\"x-query-params\"));\n}};\n\nObjectMapper mapper = new ObjectMapper();\nexchange.getIn().setHeader(\"x-response-metadata\", mapper.writeValueAsString(responseMeta));\nexchange.getIn().setBody(conversations);&import=import com.fasterxml.jackson.databind.ObjectMapper;"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "bcd0ca92-a2ee-43d7-9d7d-5b0e8ea4b66d",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('renderResponse')",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-3",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "bf78f16d-d9b2-4460-8c8c-6eb8a9226887",
      "description" : "",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "Exception"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "7fbdc569-c31a-4872-a993-40adb9aedb1e",
          "description" : "204.error",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "ERROR",
            "logType" : "EIP",
            "loggerName" : "204.error",
            "message" : "${exception.stacktrace} ",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=204.error&message=${exception.stacktrace} &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "e8410da9-6b6d-45fe-8cdc-151b061205de",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "An error occurred handling your request. Please try again.",
              "uuid" : "2977696e-2272-4148-82f8-03844672ac75"
            }, {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "500",
              "uuid" : "d30fa7b9-e34a-4e22-b269-7728d61a8a8b"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=An error occurred handling your request. Please try again.&CamelHttpResponseCode=500&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "51c191c9-9a69-4c87-ac8c-8409d0b2edd4",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "stop",
          "nodeId" : "820751ec-4f1c-4fa4-9088-f1640737af06",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "b8982270-8b36-40fc-a51b-e717d3981786",
      "description" : "getConversationById",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getConversationById",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}&method=get&operationName=getConversationById&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "09e25141-f23e-48d1-a306-12840b94c1c2",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f20de1de-e7ad-4d7a-86fc-1b29ae63f9fb",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "abf79eff-62be-46e8-8766-f99366d49d32",
      "description" : "Get Request Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "f172a391-abc6-479a-b996-d81423f1f319"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "0ea93f3a-1085-4ec9-a57a-eea0aa0af42f"
        }, {
          "language" : "Header",
          "propertyName" : "Authorization",
          "propertyValue" : "Authorization",
          "uuid" : "884d7123-249b-4661-9f8d-c6552c82ed47"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&agencyId=x-agency-id&Authorization=Authorization&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "c9197487-f083-42e7-b61a-5cdb8bffa620",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\", \"conversationId\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\", \"conversationId\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "1fa94a19-a4c1-4ac8-b376-60dd45f77858",
      "description" : "SQL Get Conversation",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:conversations.select.sql.vm?allowContextMapAll=true\")\n    \t.log(LoggingLevel.OFF, 'log', '${body}')\n    \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\").id('dslProcessor-1')",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:conversations.select.sql.vm?allowContextMapAll=true\")\n    \t.log(LoggingLevel.OFF, 'log', '${body}')\n    \t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\").id('dslProcessor-1')"
    }, {
      "name" : "setProperties",
      "nodeId" : "c1baf7ac-0275-4ad9-ab76-58c76ad87b19",
      "description" : "Store Conversation",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "conversation",
          "propertyValue" : "${body}",
          "uuid" : "b17d77bf-db99-4059-9d58-fd63a961866c"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversation=${body}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "d2f9320e-2169-4a02-a618-9eb3ce49046e",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "80e068e9-1073-47d5-8564-48509fb704c8",
          "description" : "Get Recipients",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getConversationRecipients",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getConversationRecipients"
        }, {
          "name" : "setProperties",
          "nodeId" : "4b41b321-d0a4-4220-85d3-18d6d1f5e99d",
          "description" : "Store Recipients",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "recipients",
              "propertyValue" : "$.data",
              "uuid" : "3ecd5e19-3f86-49f2-a04b-ec681cd0833a"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?recipients=$.data&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "3e06f2a0-c3ee-4132-8468-75de9004684c",
          "description" : "getTccSession",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getTccSession",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getTccSession"
        }, {
          "name" : "process",
          "nodeId" : "44f360f5-6338-4928-871e-55a41247af12",
          "description" : "Format Response",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "HashMap<String, Object> conversation = (HashMap)exchange.getProperty(\"conversation\");\nHashMap<String, Object> tccSession = (HashMap)exchange.getProperty(\"tccSession\");\nArrayList<HashMap<String, Object>> conversationRecips = (ArrayList)exchange.getProperty(\"recipients\");\n\nconversation.put(\"recipients\", conversationRecips);\ntry {\n\tconversation.put(\"primary_recipient\", (String)conversationRecips.get(0).get(\"number\"));\n} catch (Exception e) {}\nconversation.put(\"tcc_session\", tccSession);\n\nObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> metadata;\ntry {\n\tmetadata = mapper.readValue((String)conversation.get(\"metadata\"), HashMap.class);\n\tconversation.put(\"metadata\", metadata);\n} catch (Exception e) {}\n\nconversation.put(\"metadata\", metadata);\n\nexchange.getIn().setBody(conversation);",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;\n",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=HashMap<String, Object> conversation = (HashMap)exchange.getProperty(\"conversation\");\nHashMap<String, Object> tccSession = (HashMap)exchange.getProperty(\"tccSession\");\nArrayList<HashMap<String, Object>> conversationRecips = (ArrayList)exchange.getProperty(\"recipients\");\n\nconversation.put(\"recipients\", conversationRecips);\ntry {\n\tconversation.put(\"primary_recipient\", (String)conversationRecips.get(0).get(\"number\"));\n} catch (Exception e) {}\nconversation.put(\"tcc_session\", tccSession);\n\nObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> metadata;\ntry {\n\tmetadata = mapper.readValue((String)conversation.get(\"metadata\"), HashMap.class);\n\tconversation.put(\"metadata\", metadata);\n} catch (Exception e) {}\n\nconversation.put(\"metadata\", metadata);\n\nexchange.getIn().setBody(conversation);&import=import com.fasterxml.jackson.databind.ObjectMapper;\n"
        }, {
          "name" : "setHeaders",
          "nodeId" : "b0f12d22-0ff9-453c-9743-5479d1fdd083",
          "description" : "HTTP200",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "200",
              "language" : "Constant",
              "uuid" : "ecad21bd-f553-4fc4-8e4e-beff2ef6a73c"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "7e80bb86-be54-4e71-b15f-541700c8deb1",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "not found",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "12631b85-dc49-4104-8184-ae789211fca1",
          "description" : "Not Found",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Not Found",
              "uuid" : "94d79b25-8f18-441d-979d-f12e809c25c0"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Not Found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "c99fd5f4-ac4e-4762-b83e-2abc03900a1c",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "2633453f-da79-4f13-bf9b-3d3033412665"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "816c39f8-609b-4933-b7e9-3e3e54ab32ec",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "cbf38434-61b2-41c4-b5c2-bcd92c70d3e6",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.conversation} == null || ${exchangeProperty.conversation[conversation_id]} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "091fc5cf-4ba9-418a-b4d3-b66a66a2ffa9",
      "description" : "getConversationMessages",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/messages",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getConversationMessages",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/messages&method=get&operationName=getConversationMessages&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "eb73ee23-d013-4d6d-93a2-5a6b1e2a21fb",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "a0d151ff-3d5e-42f3-904d-657c2e6dcb52",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "16082532-bbb3-4e56-9bb3-f2db5ce26867",
      "description" : "Get Request Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "80b73649-9e04-4792-9548-1ca086495816"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "64b38dc3-c2fe-4571-bc40-6ab5694e089e"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "29ba4b26-6a10-4387-8696-742a831f18b6",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "ed7bc95a-edd8-4bca-8021-be241c1217bc",
      "description" : "Set Messages Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/messages",
          "language" : "Constant",
          "uuid" : "ebe2ba09-6e09-4112-a3dd-b50e65966ff4"
        }, {
          "headerName" : "Content-Type",
          "headerValue" : "application/json",
          "language" : "Constant",
          "uuid" : "26e9d692-90b4-4e78-ab9c-2fced285225b"
        }, {
          "headerName" : "CamelHttpQuery",
          "headerValue" : "conversationId=${exchangeProperty.conversationId}",
          "language" : "Simple",
          "uuid" : "d297d2d3-bb74-41e3-899a-93cbae621f34"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "http",
      "nodeId" : "501cc056-9770-460c-b359-b614059f24ad",
      "description" : "GET /messages",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "-1",
        "connectionRequestTimeout" : "-1",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "-1",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=true"
    }, {
      "name" : "setBody",
      "nodeId" : "6eae8612-ac8d-45da-a2e0-b7f87ffb9195",
      "description" : "Get Messages",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "$.data",
        "language" : "JsonPath",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4c733336-12ba-40d0-b45f-dfa1fbab3348",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "6a1d6f98-3383-455f-ad67-a37824ffc30e",
      "description" : "createMessageReply",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/messages",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "createMessageReply",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/messages&method=put&operationName=createMessageReply&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "165d80c0-81eb-4903-9d14-21c5f3872357",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4286c00d-c93f-4a7d-9843-893913cb19c8",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "c2a3ca3d-c0ce-4f4f-8544-5215437ed44a",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "e78c55fa-f171-4b28-a790-2e9471d2d4fe",
      "description" : "204.api.reply.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.reply.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.reply.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "ab58ba3c-ce47-41d8-83b7-1f42bed52352",
      "description" : "Set Request Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "d8f2f5fa-0f73-423e-aa80-51fe5fb48b60"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageBody",
          "propertyValue" : "$.message_body",
          "uuid" : "f1b1abab-e5fe-40a2-92c6-98347112b3fc"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipients",
          "propertyValue" : "$.recipients",
          "uuid" : "82be43fd-97f6-4410-abdf-22595bc03d30"
        }, {
          "language" : "JsonPath",
          "propertyName" : "language",
          "propertyValue" : "$.language",
          "uuid" : "bd1b5ad6-37d9-41ae-b307-80d9c7f05c46"
        }, {
          "language" : "JsonPath",
          "propertyName" : "source",
          "propertyValue" : "$.source",
          "uuid" : "cbff4405-9eee-4bd6-be8b-1c52a20f4e6a"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&messageBody=$.message_body&recipients=$.recipients&language=$.language&source=$.source&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b8e32e68-81ef-4356-8d6e-94689d43dd4e",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "c1c5c98d-a6c9-4b0b-bef1-2cca982b7a07",
      "description" : "SQL Validate Conversation",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT CAST(c.agency_id AS varchar) FROM conversations c WHERE c.id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT CAST(c.agency_id AS varchar) FROM conversations c WHERE c.id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "cfcae4ff-3d57-45f6-8621-2b3a27e90cc2",
      "description" : "Set Agency ID",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "agencyId",
          "propertyValue" : "${body}",
          "uuid" : "de7e26c7-0158-4ece-b656-0422a07bc622"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=${body}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "b57c5a0a-af99-4d29-a64d-0016adf8bd90",
      "description" : "Convo Not Found",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "cddd148f-8670-48c7-a3cb-b520ec32d255",
          "description" : "Set X-Agency-ID",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "x-agency-id",
              "headerValue" : "${exchangeProperty.agencyId}",
              "language" : "Simple",
              "uuid" : "9dcb9d75-358a-494b-912c-20425f9547ce"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "13f429c3-ab9e-432f-8bb3-d4dfcd6d0ff4",
          "description" : "Recipients Specified?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "messageFilter",
              "nodeId" : "43392758-133e-431f-8307-1742c863a747",
              "description" : "Validate Recipients",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "splitter",
                  "nodeId" : "781a3a19-ccce-4d27-a539-b0fd0588d004",
                  "description" : "Each Recipient",
                  "properties" : {
                    "_type" : "splitter",
                    "active" : true,
                    "addNamespaces" : false,
                    "aggregationStrategy" : "",
                    "aggregationStrategyRef" : "",
                    "camelGroup" : "routing",
                    "expression" : "${exchangeProperty.recipients}",
                    "language" : "Simple",
                    "name" : "splitter",
                    "namespaces" : [ ],
                    "parallelProcessing" : false,
                    "shareUnitOfWork" : true,
                    "stopOnException" : false,
                    "streaming" : false,
                    "suppressExceptions" : false,
                    "timeout" : "0",
                    "token" : ",",
                    "tokenize" : false,
                    "url" : "",
                    "useAggregationStrategy" : false
                  },
                  "_type" : "splitter",
                  "branches" : [ {
                    "type" : "route",
                    "label" : "route",
                    "route" : [ {
                      "name" : "setHeaders",
                      "nodeId" : "ae92c3bd-5e43-4d24-8c93-676fa5b6d252",
                      "description" : "HTTP202",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpResponseCode",
                          "headerValue" : "202",
                          "language" : "Constant",
                          "uuid" : "fbdbe625-a9ea-4773-b77b-5fb5e63f2d13"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "http",
                      "nodeId" : "2f2fd964-4dca-413f-9916-f53b645bfdc1",
                      "description" : "GET /messages/:id",
                      "properties" : {
                        "_type" : "http",
                        "active" : false,
                        "advancedParameters" : [ ],
                        "bridgeEndpoint" : true,
                        "camelGroup" : "component",
                        "connectTimeout" : "20000",
                        "connectionRequestTimeout" : "20000",
                        "disableStreamCache" : true,
                        "httpMethod" : "GET",
                        "httpUri" : "{{convey.api.host}}",
                        "name" : "http",
                        "scheme" : "https",
                        "socketTimeout" : "20000",
                        "throwExceptionOnFailure" : true,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "http",
                      "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
                    }, {
                      "name" : "setBody",
                      "nodeId" : "0efae7bb-2d5e-4a2a-ab30-46bf5f7cbae3",
                      "description" : "Set JSON Response",
                      "properties" : {
                        "_type" : "setBody",
                        "active" : false,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "expression" : "$.data",
                        "language" : "JsonPath",
                        "name" : "setBody",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setBody",
                      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
                    }, {
                      "name" : "process",
                      "nodeId" : "a8550ea9-0248-4918-8c01-78033c10d46e",
                      "description" : "Format JSON Response",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "HashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n    put(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n    put(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\n    put(\"message_id\", (String)exchange.getProperty(\"messageId\"));   \n    put(\"message_body\", (String)exchange.getProperty(\"messageBody\"));\n    put(\"recipients\", (ArrayList)exchange.getProperty(\"recipients\"));\n}};\n\nexchange.getIn().setBody(responseJson);",
                        "import" : "// import org.apache.camel.Message",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=HashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n    put(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n    put(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\n    put(\"message_id\", (String)exchange.getProperty(\"messageId\"));   \n    put(\"message_body\", (String)exchange.getProperty(\"messageBody\"));\n    put(\"recipients\", (ArrayList)exchange.getProperty(\"recipients\"));\n}};\n\nexchange.getIn().setBody(responseJson);&import=// import org.apache.camel.Message"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "92ff2127-2b6a-4626-b290-9e738cae0b0d",
                      "description" : "HTTP202",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpResponseCode",
                          "headerValue" : "202",
                          "language" : "Constant",
                          "uuid" : "98a64c87-a8a8-414a-98f7-9c7fc79798fa"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "dslProcessor",
                      "nodeId" : "6cd8b1cd-aea5-4314-bb64-a6b4f39510bb",
                      "description" : "Render Response",
                      "properties" : {
                        "_type" : "dslProcessor",
                        "active" : true,
                        "camelGroup" : "core",
                        "dsl" : ".bean(\"renderResponse\")",
                        "name" : "dslProcessor",
                        "url" : ""
                      },
                      "_type" : "dslProcessor",
                      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
                    } ],
                    "properties" : { }
                  }, {
                    "type" : "split",
                    "label" : "split",
                    "route" : [ {
                      "name" : "setProperties",
                      "nodeId" : "4169b330-31cd-42b2-9e31-c2167d60c60e",
                      "description" : "Set Recipient Number",
                      "properties" : {
                        "_type" : "setProperties",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "name" : "setProperties",
                        "namespaces" : [ ],
                        "propertyList" : [ {
                          "language" : "Simple",
                          "propertyName" : "recipientNumber",
                          "propertyValue" : "${body}",
                          "uuid" : "bd983e9e-aa34-4424-a1dc-94a5cb4405ca"
                        } ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setProperties",
                      "kameletPropertiesUrl" : "?recipientNumber=${body}&addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "process",
                      "nodeId" : "9cc92440-b8dd-4bae-8130-54dd0a2a9dd6",
                      "description" : "Set Message Request",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "ObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> message = new HashMap<String, Object>() {{\n\tput(\"body\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"direction\", \"outbound\");\n}};\n\nif (exchange.getProperty(\"language\") != null)\n\tmessage.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nif (exchange.getProperty(\"source\") != null)\n\tmessage.put(\"source\", (String)exchange.getProperty(\"source\"));\n\nexchange.getIn().setBody(mapper.writeValueAsString(message));",
                        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> message = new HashMap<String, Object>() {{\n\tput(\"body\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"direction\", \"outbound\");\n}};\n\nif (exchange.getProperty(\"language\") != null)\n\tmessage.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nif (exchange.getProperty(\"source\") != null)\n\tmessage.put(\"source\", (String)exchange.getProperty(\"source\"));\n\nexchange.getIn().setBody(mapper.writeValueAsString(message));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "efdea32b-8846-42f8-8fde-01b5f8471e42",
                      "description" : "Set Message Request",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpPath",
                          "headerValue" : "/api/v1/messages",
                          "language" : "Constant",
                          "uuid" : "482398bf-435b-44f3-9602-599b1d404ac6"
                        }, {
                          "headerName" : "Content-Type",
                          "headerValue" : "application/json",
                          "language" : "Constant",
                          "uuid" : "7dcc781d-70ce-4d7e-a017-7fb553f3ebbb"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "log",
                      "nodeId" : "1bb6b7c6-ee6a-4c22-b00c-4e164d8e4522",
                      "description" : "204.api.reply.msg.in",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "204.api.reply.msg.in",
                        "message" : "POST ${header.CamelHttpPath} ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.reply.msg.in&message=POST ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "http",
                      "nodeId" : "e3dc4fc0-7bf1-4c46-bebf-8014aa63ee32",
                      "description" : "POST /messages",
                      "properties" : {
                        "_type" : "http",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "bridgeEndpoint" : false,
                        "camelGroup" : "component",
                        "connectTimeout" : "-1",
                        "connectionRequestTimeout" : "-1",
                        "disableStreamCache" : true,
                        "httpMethod" : "POST",
                        "httpUri" : "{{convey.api.host}}",
                        "name" : "http",
                        "scheme" : "https",
                        "socketTimeout" : "-1",
                        "throwExceptionOnFailure" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "http",
                      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=false"
                    }, {
                      "name" : "convertBodyTo",
                      "nodeId" : "82325be1-84cf-413e-af12-cbd13ed3807e",
                      "description" : "To String",
                      "properties" : {
                        "_type" : "convertBodyTo",
                        "active" : true,
                        "camelGroup" : "transform",
                        "name" : "convertBodyTo",
                        "targetClass" : "String.class",
                        "url" : ""
                      },
                      "_type" : "convertBodyTo",
                      "kameletPropertiesUrl" : "?targetClass=String.class"
                    }, {
                      "name" : "log",
                      "nodeId" : "a34a2d41-1556-4b51-a7bf-489a32273792",
                      "description" : "204.api.reply.msg.out",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "204.api.reply.msg.out",
                        "message" : "(${header.CamelHttpResponseCode}) ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.reply.msg.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "messageFilter",
                      "nodeId" : "50ce60bb-e5f5-470b-95c8-729ce3b5316e",
                      "description" : "!202",
                      "properties" : {
                        "_type" : "messageFilter",
                        "active" : true,
                        "camelGroup" : "routing",
                        "name" : "messageFilter",
                        "url" : ""
                      },
                      "_type" : "messageFilter",
                      "branches" : [ {
                        "type" : "route",
                        "label" : "route",
                        "route" : [ {
                          "name" : "setProperties",
                          "nodeId" : "3ff36005-d5a9-48c2-8d37-798e5395b87f",
                          "description" : "Set Message ID",
                          "properties" : {
                            "_type" : "setProperties",
                            "active" : true,
                            "addNamespaces" : false,
                            "camelGroup" : "core",
                            "name" : "setProperties",
                            "namespaces" : [ ],
                            "propertyList" : [ {
                              "language" : "JsonPath",
                              "propertyName" : "messageId",
                              "propertyValue" : "$.data.message_id",
                              "uuid" : "79a26b6b-dd10-4294-adb7-edad20c6ecfc"
                            } ],
                            "suppressExceptions" : false,
                            "url" : ""
                          },
                          "_type" : "setProperties",
                          "kameletPropertiesUrl" : "?messageId=$.data.message_id&addNamespaces=false&suppressExceptions=false"
                        } ],
                        "properties" : { }
                      }, {
                        "type" : "filter",
                        "label" : "filter",
                        "route" : [ {
                          "name" : "log",
                          "nodeId" : "81a692a0-b118-4255-bd66-bb3af6349bb4",
                          "description" : "204.api.reply.400",
                          "properties" : {
                            "_type" : "log",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "component",
                            "level" : "WARN",
                            "logType" : "EIP",
                            "loggerName" : "204.api.reply.400",
                            "message" : "(${header.CamelHttpResponseCode}) ${body}",
                            "multiline" : false,
                            "name" : "log",
                            "showAll" : false,
                            "showBody" : true,
                            "showBodyType" : true,
                            "showCaughtException" : false,
                            "showExchangeId" : false,
                            "showHeaders" : false,
                            "showProperties" : false,
                            "showStackTrace" : false,
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "log",
                          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=204.api.reply.400&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                        }, {
                          "name" : "setProperties",
                          "nodeId" : "b881f6e1-c6da-4194-8a0d-cd48389553c6",
                          "description" : "Set Error",
                          "properties" : {
                            "_type" : "setProperties",
                            "active" : true,
                            "addNamespaces" : false,
                            "camelGroup" : "core",
                            "name" : "setProperties",
                            "namespaces" : [ ],
                            "propertyList" : [ {
                              "language" : "JsonPath",
                              "propertyName" : "error",
                              "propertyValue" : "$.data",
                              "uuid" : "e274c01e-7551-40db-858d-a9eddf82e124"
                            } ],
                            "suppressExceptions" : false,
                            "url" : ""
                          },
                          "_type" : "setProperties",
                          "kameletPropertiesUrl" : "?error=$.data&addNamespaces=false&suppressExceptions=false"
                        }, {
                          "name" : "dslProcessor",
                          "nodeId" : "4e8e7f19-7b43-4df0-941a-7d64b7325b4a",
                          "description" : "Render Response",
                          "properties" : {
                            "_type" : "dslProcessor",
                            "active" : true,
                            "camelGroup" : "core",
                            "dsl" : ".bean(\"renderResponse\")",
                            "name" : "dslProcessor",
                            "url" : ""
                          },
                          "_type" : "dslProcessor",
                          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
                        }, {
                          "name" : "stop",
                          "nodeId" : "38d680d3-adf6-4b92-a3a1-916ad064403c",
                          "description" : "",
                          "properties" : {
                            "_type" : "stop",
                            "camelGroup" : "misc",
                            "name" : "stop",
                            "url" : ""
                          },
                          "_type" : "stop",
                          "kameletPropertiesUrl" : ""
                        } ],
                        "properties" : {
                          "addNamespaces" : "false",
                          "condition" : "${header.CamelHttpResponseCode} != 202",
                          "language" : "Simple",
                          "namespaces" : [ ],
                          "suppressExceptions" : "false"
                        }
                      } ],
                      "kameletPropertiesUrl" : ""
                    } ],
                    "properties" : { }
                  } ],
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.recipients}&language=Simple&parallelProcessing=false&shareUnitOfWork=true&stopOnException=false&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
                } ],
                "properties" : { }
              }, {
                "type" : "filter",
                "label" : "no recipients",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "5da80fd5-19b5-4562-b5b3-a4bc9ca64d29",
                  "description" : "Set Error",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Constant",
                      "propertyName" : "error",
                      "propertyValue" : "Recipient(s) not specified or no recipients have been assigned to the conversation.",
                      "uuid" : "773d3feb-74a7-4d90-be52-5195949000ba"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?error=Recipient(s) not specified or no recipients have been assigned to the conversation.&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "18b33524-cea3-455d-bcd2-93e3b1544f3c",
                  "description" : "Render Response",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".bean(\"renderResponse\")",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
                }, {
                  "name" : "stop",
                  "nodeId" : "374e631b-29a0-4867-a9ce-90f775050ea4",
                  "description" : "",
                  "properties" : {
                    "_type" : "stop",
                    "camelGroup" : "misc",
                    "name" : "stop",
                    "url" : ""
                  },
                  "_type" : "stop",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.recipients} == null || ${exchangeProperty.recipients.size()} == 0",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "recips not specified",
            "route" : [ {
              "name" : "messagingEndpoint",
              "nodeId" : "d4ef2241-654d-4118-a127-578d00ee8ab7",
              "description" : "SQL Get Convo Recips",
              "properties" : {
                "_type" : "messagingEndpoint",
                "active" : true,
                "camelGroup" : "core",
                "name" : "messagingEndpoint",
                "toDynamicEndpoint" : false,
                "uri" : "sql:SELECT r.recipient_number FROM conversation_recipients cr LEFT JOIN recipients r ON cr.recipient_id = r.id WHERE cr.conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectList",
                "url" : ""
              },
              "_type" : "messagingEndpoint",
              "kameletPropertiesUrl" : "?uri=sql:SELECT r.recipient_number FROM conversation_recipients cr LEFT JOIN recipients r ON cr.recipient_id = r.id WHERE cr.conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectList"
            }, {
              "name" : "process",
              "nodeId" : "b3594ddc-5730-4f4e-8bbb-2a4f9670777e",
              "description" : "Get Recipients",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "List<String> recipientList = new ArrayList<String>();\nArrayList<HashMap<String, String>> recipients = (ArrayList)exchange.getIn().getBody();\nfor (HashMap recipient : recipients) {\n\trecipientList.add((String)recipient.get(\"recipient_number\"));\n}\n\nexchange.setProperty(\"recipients\", recipientList);",
                "import" : "// import org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=List<String> recipientList = new ArrayList<String>();\nArrayList<HashMap<String, String>> recipients = (ArrayList)exchange.getIn().getBody();\nfor (HashMap recipient : recipients) {\n\trecipientList.add((String)recipient.get(\"recipient_number\"));\n}\n\nexchange.setProperty(\"recipients\", recipientList);&import=// import org.apache.camel.Message"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.recipients} == null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "not found",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "2b56a58d-acce-4b2f-9120-296e85456776",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Conversation Not Found",
              "uuid" : "c5a17af5-8632-47cd-8a94-b686e9f6e3a9"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Conversation Not Found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "58e2a63d-2201-4793-8d28-0d1b8f0c58d9",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "ea4a3f3e-7163-4066-8389-d5bc169423d7"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "f9790209-4d14-4218-83f6-73c668bc8719",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "078b9103-3cee-4ef4-bed8-e0280f363d94",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.agencyId} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-7",
    "enabled" : true,
    "routeId" : 7,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "df4d8fcf-6a71-4803-b1f0-80f77fad86c3",
      "description" : "closeConversation",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/close",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "closeConversation",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/close&method=post&operationName=closeConversation&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "9e53137b-311b-46ed-babe-30a2d2ca0fb5",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f691584b-eacd-45f1-9057-6e0556a959fa",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "3fd7f82b-fb9b-4fea-b260-e99183b34a9f",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "0ac75f79-edd8-4626-95a1-400f689f9f54",
      "description" : "Set Request Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "214a3a98-026b-4c91-a5e0-c9ca36d1d522"
        }, {
          "language" : "JsonPath",
          "propertyName" : "note",
          "propertyValue" : "$.note",
          "uuid" : "1d0a700e-b017-4f53-9fdd-716e421d6f6a"
        }, {
          "language" : "Constant",
          "propertyName" : "status",
          "propertyValue" : "closed",
          "uuid" : "5b8d491a-d771-43f0-ac92-c9732a29eebd"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&note=$.note&status=closed&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "75c3c2c0-4efe-43c2-bf52-786e40ce9272",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "efc67451-3317-4165-bba8-e50abc12b4b7",
      "description" : "SQL Close Conversation",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:UPDATE conversations SET status = :#${exchangeProperty.status}, note = :#${exchangeProperty.note}, closed_at = NOW(), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND status != \\'closed_at\\'?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:UPDATE conversations SET status = :#${exchangeProperty.status}, note = :#${exchangeProperty.note}, closed_at = NOW(), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND status != \\'closed_at\\'?dataSource=#dsPostgres"
    }, {
      "name" : "setProperties",
      "nodeId" : "6361d00a-b548-4b3e-b2b3-8ce8a3e3637b",
      "description" : "Set Update Count",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "CamelSqlRowCount",
          "propertyValue" : "CamelSqlRowCount",
          "uuid" : "f9cfcff2-fe57-4ab8-8e41-65c46dfa87c5"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?CamelSqlRowCount=CamelSqlRowCount&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setHeaders",
      "nodeId" : "1a4341d6-3dc3-4f71-bca8-95ce3899cfe7",
      "description" : "Set Conversation ID",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "conversationId",
          "headerValue" : "${exchangeProperty.conversationId}",
          "language" : "Simple",
          "uuid" : "90d65cb7-6433-40a1-8ef6-76ff98aa5907"
        }, {
          "headerName" : "x-authorized",
          "headerValue" : "true",
          "language" : "Simple",
          "uuid" : "05b81a64-f3ac-495c-a5a9-76d2c4702d5d"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "9af07eb5-87ce-4c30-9de5-373193847711",
      "description" : "to getConversationById",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getConversationById",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getConversationById"
    }, {
      "name" : "setBody",
      "nodeId" : "acd3a395-32f5-476c-a629-c708128bb76a",
      "description" : "Set Conversation Response",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "$.data",
        "language" : "JsonPath",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "050fb674-ea3c-46a4-8974-0ab4c8cd303b",
      "description" : "Get Message Count",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "messageCount",
          "propertyValue" : "${body[message_count]}",
          "uuid" : "405d57ff-0ee1-4e60-ada9-60e8118edcc8"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?messageCount=${body[message_count]}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "c41ed3a0-3b2b-4952-85cb-6305f218d01a",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
    }, {
      "name" : "messageFilter",
      "nodeId" : "e212b8f8-3185-4ab7-89be-f481b8efb8d8",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "actually updated?",
        "route" : [ {
          "name" : "seda",
          "nodeId" : "5ee13407-a50b-4ec4-b6a2-ebd84d50c082",
          "description" : "enqueue-event",
          "properties" : {
            "_type" : "seda",
            "active" : true,
            "advancedParameters" : [ ],
            "blockWhenFull" : false,
            "camelGroup" : "core",
            "concurrentConsumers" : "1",
            "endpointName" : "enqueue-event",
            "limitConcurrentConsumers" : true,
            "multipleConsumers" : false,
            "name" : "seda",
            "pollTimeout" : "1000",
            "size" : "1000",
            "specifyMaximumCapacitySize" : false,
            "timeout" : "30000",
            "toDynamicEndpoint" : false,
            "url" : "",
            "waitForTaskToComplete" : "Never"
          },
          "_type" : "seda",
          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
        }, {
          "name" : "messageFilter",
          "nodeId" : "cd6eb210-b599-4910-83d0-80bce298640a",
          "description" : "messageCount > 0",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "messageCount > 0",
            "route" : [ {
              "name" : "seda",
              "nodeId" : "2a5f748a-6c48-4210-a8f4-7f3f047295d4",
              "description" : "send-close-sms",
              "properties" : {
                "_type" : "seda",
                "active" : true,
                "advancedParameters" : [ ],
                "blockWhenFull" : false,
                "camelGroup" : "core",
                "concurrentConsumers" : "1",
                "endpointName" : "send-close-sms",
                "limitConcurrentConsumers" : true,
                "multipleConsumers" : false,
                "name" : "seda",
                "pollTimeout" : "1000",
                "size" : "1000",
                "specifyMaximumCapacitySize" : false,
                "timeout" : "30000",
                "toDynamicEndpoint" : false,
                "url" : "",
                "waitForTaskToComplete" : "Never"
              },
              "_type" : "seda",
              "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=send-close-sms&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.messageCount} > 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.CamelSqlRowCount} > 0 || 1",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-10",
    "enabled" : true,
    "routeId" : 8,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "c834b115-2230-4f07-aa28-a9daa4b0b014",
      "description" : "enqueue-event",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "5",
        "endpointName" : "enqueue-event",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=5&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "1b30976c-59eb-4f52-b08f-2e7bc894e3d5",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "jms",
      "nodeId" : "22a4a687-e8ca-4daa-be15-e363de396d35",
      "description" : "Emit IO Event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "io.event",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=io.event&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-11",
    "enabled" : true,
    "routeId" : 9,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "9489a965-1f38-4c12-9057-dfcb860c95e9",
      "description" : "get-closing-message",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-closing-message",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-closing-message"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "a95a6bec-1a9e-4710-8f95-2892235ffd36",
      "description" : "SQL Get Close Message",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT COALESCE(s_1.value, s.value) AS setting FROM settings s LEFT JOIN object_settings s_1 on s.id = s_1.setting_id AND s_1.object_id = CAST(:#${exchangeProperty.agencyId} AS uuid) WHERE s.component = \\'agency\\' AND s.name = \\'closedConversationMessage\\'?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT COALESCE(s_1.value, s.value) AS setting FROM settings s LEFT JOIN object_settings s_1 on s.id = s_1.setting_id AND s_1.object_id = CAST(:#${exchangeProperty.agencyId} AS uuid) WHERE s.component = \\'agency\\' AND s.name = \\'closedConversationMessage\\'?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "a4742912-f774-4c25-afc4-5f61f1aa6d11",
      "description" : "Set Close Message",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "smsClosingMessage",
          "propertyValue" : "${body}",
          "uuid" : "d09e658b-0a03-4f40-845f-eed31bb1ad86"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?smsClosingMessage=${body}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "c16c9cef-9d37-4c11-b5c4-bd3050bca13a",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "66868a69-732f-4451-a86a-660c6a3cbac7",
          "description" : "Set Fallback Message",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "smsClosingMessage",
              "propertyValue" : "This conversation is no longer being monitored. Please call 911 in the event of an emergency.",
              "uuid" : "9451acdb-e72f-4b6e-bb33-29191c610a08"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?smsClosingMessage=This conversation is no longer being monitored. Please call 911 in the event of an emergency.&addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.smsClosingMessage} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-12",
    "enabled" : true,
    "routeId" : 10,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "20d0ab34-eaf7-4c9a-b4eb-28947db99a1b",
      "description" : "send-close-sms",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "5",
        "endpointName" : "send-close-sms",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=5&endpointName=send-close-sms&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "setHeaders",
      "nodeId" : "f257df3f-1515-41f4-b03e-7167a3156ebc",
      "description" : "Set Message Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "conversationId",
          "headerValue" : "${exchangeProperty.conversationId}",
          "language" : "Simple",
          "uuid" : "16f946d2-98ba-41a2-b480-7cea15ad5ee0"
        }, {
          "headerName" : "x-authorized",
          "headerValue" : "true",
          "language" : "Simple",
          "uuid" : "ebcfda2f-1082-46d6-b7f5-5afd842c3748"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "a30ab711-51e7-4117-8e46-c0c3c2e86974",
      "description" : "get-closing-message",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-closing-message",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-closing-message"
    }, {
      "name" : "setBody",
      "nodeId" : "3c39947f-1d6f-4ea6-ab86-62e7d04672c8",
      "description" : "Set Message Body",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "{\"message_body\": \"${exchangeProperty.smsClosingMessage}\"}",
        "language" : "Simple",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"message_body\": \"${exchangeProperty.smsClosingMessage}\"}&language=Simple&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "386658aa-59f7-4b6c-8fdb-bc5faa6396fa",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "direct",
      "nodeId" : "b05f6ae3-38a4-4ffa-9541-a0946b8ed430",
      "description" : "createMessageReply",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "createMessageReply",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=createMessageReply"
    }, {
      "name" : "stop",
      "nodeId" : "7b051c75-5aa9-446e-988c-736729bac5d2",
      "description" : "",
      "properties" : {
        "_type" : "stop",
        "camelGroup" : "misc",
        "name" : "stop",
        "url" : ""
      },
      "_type" : "stop",
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-11-ef0f18a8",
    "enabled" : true,
    "routeId" : 11,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "a91ff1bd-f87c-447a-94ad-7cc78ca4877b",
      "description" : "getRecentMessage",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "direct",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=direct"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "59430352-e415-4c8b-a708-a80d3b183e6d",
      "description" : "SQL Get Recent Message",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT CASE WHEN m.direction = \\'inbound\\' AND m.language IS NOT NULL AND m.body_transl IS NOT NULL THEN m.body_transl ELSE m.body END AS message_body FROM messages m WHERE m.conversation_id = :#${exchangeProperty.conversationId} ORDER BY m.created_at DESC LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT CASE WHEN m.direction = \\'inbound\\' AND m.language IS NOT NULL AND m.body_transl IS NOT NULL THEN m.body_transl ELSE m.body END AS message_body FROM messages m WHERE m.conversation_id = :#${exchangeProperty.conversationId} ORDER BY m.created_at DESC LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-13",
    "enabled" : true,
    "routeId" : 12,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "4ccbe3f1-4e62-475f-b891-b572f6593c92",
      "description" : "assignConversationAgent",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/assign/{userId}",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "assignConversationAgent",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/assign/{userId}&method=put&operationName=assignConversationAgent&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "57dd5d2d-18d0-42e2-ad1f-309b3e92acd5",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e31fa556-a772-48a1-b060-3dea66c49eac",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "e057d9db-7350-4099-82b2-d1efd6f8af3d",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userId",
          "propertyValue" : "userId",
          "uuid" : "3397ccff-aa57-4367-ad41-a31d8642e2a4"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "8805595a-840b-4175-a024-6f9e3097f566"
        }, {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "6f503c48-7cbd-4b50-a34b-2f89f2e593b2"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userId=userId&agencyId=x-agency-id&conversationId=conversationId&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "bb7aff13-7523-4ab4-bfe1-635ec5089307",
      "description" : "204.api.assign.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.assign.in",
        "message" : "PUT ${header.CamelHttpPath} ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.assign.in&message=PUT ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "6fe64f15-98fc-41a3-b315-3e1a7271d202",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "b4cee60b-1271-451d-91d0-6ada90212434",
      "description" : "SQL Lookup User",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT CAST(ua.id AS varchar) FROM user_agencies ua WHERE ua.user_id = CAST(:#${exchangeProperty.userId} AS uuid) and ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT CAST(ua.id AS varchar) FROM user_agencies ua WHERE ua.user_id = CAST(:#${exchangeProperty.userId} AS uuid) and ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "messageFilter",
      "nodeId" : "a6cabdfe-177b-4cd8-9dd0-fa06e2445e9d",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "35b541b6-4fbf-4afc-90f5-8c8508a96713",
          "description" : "SQL Assign User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:UPDATE conversations set operator_id=CAST(:#${exchangeProperty.userId} AS uuid), updated_at=now() where id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:UPDATE conversations set operator_id=CAST(:#${exchangeProperty.userId} AS uuid), updated_at=now() where id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
        }, {
          "name" : "messageFilter",
          "nodeId" : "a95a0573-88da-4164-b806-205402a292c0",
          "description" : "Conflict?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "direct",
              "nodeId" : "a3c71775-a7e9-47f6-bec1-37639ea8ec94",
              "description" : "to getConversationById",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "getConversationById",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=getConversationById"
            }, {
              "name" : "setBody",
              "nodeId" : "32337591-542e-45fd-8f8a-60e83e846530",
              "description" : "Set JSON Response",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "$.data",
                "language" : "JsonPath",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "c15c1f66-062e-4883-85e0-07b43bed38b6",
              "description" : "Remove Headers",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
            }, {
              "name" : "setHeaders",
              "nodeId" : "2862f87c-0a78-4165-8210-65d7f8094af0",
              "description" : "HTTP200",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "200",
                  "language" : "Constant",
                  "uuid" : "f0d1a704-b230-493b-8d3d-141f48d3493a"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "2a624824-d5d0-4486-a90b-dc2a324f4776",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            }, {
              "name" : "seda",
              "nodeId" : "bdcd6846-0d8e-4880-aee2-0860e071f99b",
              "description" : "enqueue-event",
              "properties" : {
                "_type" : "seda",
                "active" : true,
                "advancedParameters" : [ ],
                "blockWhenFull" : false,
                "camelGroup" : "core",
                "concurrentConsumers" : "1",
                "endpointName" : "enqueue-event",
                "limitConcurrentConsumers" : true,
                "multipleConsumers" : false,
                "name" : "seda",
                "pollTimeout" : "1000",
                "size" : "1000",
                "specifyMaximumCapacitySize" : false,
                "timeout" : "30000",
                "toDynamicEndpoint" : false,
                "url" : "",
                "waitForTaskToComplete" : "Never"
              },
              "_type" : "seda",
              "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "RowsUpdated == 0",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "b68f8c58-5fb1-4b71-861d-f803e8a1552c",
              "description" : "Set Error",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "error",
                  "propertyValue" : "Conversation is already assigned to an agent. Agent must be unassigned first.",
                  "uuid" : "80198c33-0bc1-4e8f-b206-3bcb6b831fd1"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?error=Conversation is already assigned to an agent. Agent must be unassigned first.&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "setHeaders",
              "nodeId" : "1fb7a2d1-89cc-4b35-8906-ee224306d9bd",
              "description" : "HTTP409",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "409",
                  "language" : "Constant",
                  "uuid" : "704aa05c-a17e-458b-be14-5887a19f986b"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "e686ade3-08b0-47e3-a171-b0860295f6e6",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean('renderResponse')",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
            }, {
              "name" : "log",
              "nodeId" : "68c20cc6-cdd8-4078-9d49-034c79da4526",
              "description" : "204.api.assign.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "204.api.assign.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.assign.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "stop",
              "nodeId" : "bb857284-0acd-4aa0-b527-941ddd30ccb9",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelSqlUpdateCount} == 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "not found",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "07a5be87-83aa-4050-9139-7acf80df1ea9",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "404",
              "uuid" : "a3eff46d-ece4-4045-bc00-7234372d139a"
            }, {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Not Found",
              "uuid" : "a7915cde-0c8a-444b-a337-88f1b733df60"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?CamelHttpResponseCode=404&error=Not Found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "a8f9265f-870e-4df4-9b8c-fc8447ca6e7a",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "stop",
          "nodeId" : "528811bf-332a-48df-b376-bd5e470bfc55",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-14",
    "enabled" : true,
    "routeId" : 13,
    "route" : [ {
      "name" : "deleteRequest",
      "nodeId" : "ebb1786d-7929-400c-aac7-968787a60de5",
      "description" : "unassignConversationAgent",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/assign/{userId}",
        "method" : "delete",
        "name" : "deleteRequest",
        "operationName" : "unassignConversationAgent",
        "produces" : "application/json",
        "requestmethod" : "DELETE",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/assign/{userId}&method=delete&operationName=unassignConversationAgent&produces=application/json&requestmethod=DELETE"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "9c0f0468-19f0-4d2d-9f74-60895b75f6c3",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "724d65b8-df7b-4557-97c0-aa84b3073697",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "37c5d541-4df1-4d70-8462-77d261e1ac1a",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userId",
          "propertyValue" : "userId",
          "uuid" : "893d424c-647a-45f5-821f-58b0f12b079a"
        }, {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "80a46234-e352-43f4-9a0b-b2f90f52b9e3"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "a62b1e16-d3af-4b59-8251-f7575ac39243"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userId=userId&conversationId=conversationId&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "f71896fc-535b-433b-a503-bf08b8406617",
      "description" : "204.api.unassign.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.unassign.in",
        "message" : "DELETE ${header.CamelHttpPath} ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.unassign.in&message=DELETE ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5a341ed0-3026-4cfd-8cba-d1f07d14ec6f",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "68b715e0-656b-4367-b283-5fcfcae2f8bd",
      "description" : "Validate Conversation",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT CAST(id AS uuid) FROM conversations WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT CAST(id AS uuid) FROM conversations WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "messageFilter",
      "nodeId" : "86f45064-e6ea-4f30-a3e4-3deaead15114",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "acda51b1-5ba7-44b6-baae-62df5f3c6ff4",
          "description" : "SQL Unassign User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:UPDATE conversations set operator_id=null, updated_at=now() where id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:UPDATE conversations set operator_id=null, updated_at=now() where id = CAST(:#${exchangeProperty.conversationId} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
        }, {
          "name" : "direct",
          "nodeId" : "14ecd894-f003-4c9f-9cb5-c6fb1abca752",
          "description" : "to getConversationById",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getConversationById",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getConversationById"
        }, {
          "name" : "setBody",
          "nodeId" : "8cde9542-b235-4331-aaf6-ef45733ff6e1",
          "description" : "Set JSON Response",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "$.data",
            "language" : "JsonPath",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "faff4db9-fdd7-4ae2-9431-36088dac64aa",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "setHeaders",
          "nodeId" : "df02f879-ea0f-4264-8daa-08868544e333",
          "description" : "HTTP200",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "200",
              "language" : "Constant",
              "uuid" : "52279fc3-2826-43cc-b46e-ae95e76c33b6"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "6e5baae6-3fed-4965-980e-279ceee65738",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "seda",
          "nodeId" : "91c31ff0-2393-4c6b-b4be-0c9a4b9c20fa",
          "description" : "enqueue-event",
          "properties" : {
            "_type" : "seda",
            "active" : true,
            "advancedParameters" : [ ],
            "blockWhenFull" : false,
            "camelGroup" : "core",
            "concurrentConsumers" : "1",
            "endpointName" : "enqueue-event",
            "limitConcurrentConsumers" : true,
            "multipleConsumers" : false,
            "name" : "seda",
            "pollTimeout" : "1000",
            "size" : "1000",
            "specifyMaximumCapacitySize" : false,
            "timeout" : "30000",
            "toDynamicEndpoint" : false,
            "url" : "",
            "waitForTaskToComplete" : "Never"
          },
          "_type" : "seda",
          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "not found",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "d44d2a3b-5eb6-441d-9d28-70848b4fab1b",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "404",
              "uuid" : "71da27f2-3bee-4b1c-a2e1-d1dac142063b"
            }, {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Not Found",
              "uuid" : "4b5af58d-18aa-4f21-a6a5-46c659a3e78f"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?CamelHttpResponseCode=404&error=Not Found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "162ec731-6bb8-4d01-8eef-053d5cfaedec",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "stop",
          "nodeId" : "ec4a6b97-1e8c-4e4e-b034-717bcfcd9b18",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-15",
    "enabled" : false,
    "routeId" : 14,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "7aa9294a-89ba-41b2-a4bf-31afecc1f4ff",
      "description" : "io-event-broadcast",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "1",
        "endpointName" : "io-event-broadcast",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=io-event-broadcast&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "8928ff28-688a-4b2b-af83-8621ead36ddb",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "setHeaders",
      "nodeId" : "dd21b8a2-7d66-42bc-b6c8-a567c7ee3c1c",
      "description" : "Set JMS Destination",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelJmsDestinationName",
          "headerValue" : "io.event",
          "language" : "Constant",
          "uuid" : "f5ac1b61-76fe-4693-8904-d504124d99b3"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "jms",
      "nodeId" : "d3be7622-1ab2-47f0-8fa8-abdfd82cdaa0",
      "description" : "io.event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "dummy.queue",
        "destinationType" : "topic",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=dummy.queue&destinationType=topic&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-16-6c83edd6",
    "enabled" : true,
    "routeId" : 15,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "84dca87b-62b5-4c2a-a7e8-11cd430860f1",
      "description" : "send-bounce-back",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "10",
        "endpointName" : "send-bounce-back",
        "limitConcurrentConsumers" : false,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=10&endpointName=send-bounce-back&limitConcurrentConsumers=false&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "direct",
      "nodeId" : "6219e55a-b31c-42e2-92f1-e3a2bf3d79d3",
      "description" : "getAgencySettings",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getAgencySettings",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getAgencySettings"
    }, {
      "name" : "messageFilter",
      "nodeId" : "65e46c5a-aca2-4b2b-b0a3-45db7396876c",
      "description" : "bounceBackMessage?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "e4661f2f-e110-44a1-8416-0424f166704f",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
        }, {
          "name" : "setProperties",
          "nodeId" : "688b3261-1f8f-4494-9bf8-8ca6332cf013",
          "description" : "Set Reply Message",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "autoReplyMessage",
              "propertyValue" : "${exchangeProperty.agencySettings[inboundConversationReceiptMessage][value]}",
              "uuid" : "afb7bfa9-6ee6-4181-909a-6c6a2162594e"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?autoReplyMessage=${exchangeProperty.agencySettings[inboundConversationReceiptMessage][value]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "996b31a5-601f-4337-9fd2-3be291dd1b47",
          "description" : "Set Message Request",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpPath",
              "headerValue" : "/api/v1/messages",
              "language" : "Constant",
              "uuid" : "8bd41114-b00a-4988-b616-cec8643694c4"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "60b4d174-a696-4be4-be33-40223cb1dd20",
          "description" : "Set Request Body",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ObjectMapper jackson = new ObjectMapper();\n\nHashMap<String, String> requestBody = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"body\", (String)exchange.getProperty(\"autoReplyMessage\"));\n\tput(\"direction\", \"outbound\");\n}};\n\nexchange.getIn().setBody(jackson.writeValueAsString(requestBody));",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ObjectMapper jackson = new ObjectMapper();\n\nHashMap<String, String> requestBody = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"body\", (String)exchange.getProperty(\"autoReplyMessage\"));\n\tput(\"direction\", \"outbound\");\n}};\n\nexchange.getIn().setBody(jackson.writeValueAsString(requestBody));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
        }, {
          "name" : "log",
          "nodeId" : "941c7791-7154-4723-90cf-5710d5b99589",
          "description" : "204.seda.reply.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "204.seda.reply.in",
            "message" : "${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.seda.reply.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "http",
          "nodeId" : "0bae28fc-8701-4a63-ba1d-efe7ed281bc0",
          "description" : "POST /messages",
          "properties" : {
            "_type" : "http",
            "active" : true,
            "advancedParameters" : [ ],
            "bridgeEndpoint" : true,
            "camelGroup" : "component",
            "connectTimeout" : "20000",
            "connectionRequestTimeout" : "20000",
            "disableStreamCache" : true,
            "httpMethod" : "POST",
            "httpUri" : "{{convey.api.host}}",
            "name" : "http",
            "scheme" : "https",
            "socketTimeout" : "20000",
            "throwExceptionOnFailure" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "http",
          "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=false"
        }, {
          "name" : "log",
          "nodeId" : "c003cbd3-9348-4df3-a33e-ae46bd334e11",
          "description" : "204.seda.reply.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "204.seda.reply.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.seda.reply.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.agencySettings[inboundConversationReceiptMessage]} != null && ${exchangeProperty.agencySettings[inboundConversationReceiptMessage][value]} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-17",
    "enabled" : true,
    "routeId" : 16,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "f91cef0c-0ed3-4704-b43f-a8faac471204",
      "description" : "getAgencySettings",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getAgencySettings",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getAgencySettings"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "7d8b9c37-8397-406f-85ce-3907377b47fb",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "2514194e-f6dc-44ff-8c83-ba7887da1753",
      "description" : "Set Agency Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/agencies/${exchangeProperty.agencyId}/settings",
          "language" : "Simple",
          "uuid" : "f28c5138-d780-4a40-a644-897aa8e4b2f4"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "clearBody",
      "nodeId" : "a30ef460-db89-4329-b1a2-c5ceb8391c95",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "log",
      "nodeId" : "8289278c-5f17-446d-be79-8fd03a5654e2",
      "description" : "204.direct.settings.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.direct.settings.in",
        "message" : "GET ${header.CamelHttpPath}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.direct.settings.in&message=GET ${header.CamelHttpPath}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "827a1d66-e327-41cf-89e2-b91f3789c685",
      "description" : "GET /settings",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=false"
    }, {
      "name" : "log",
      "nodeId" : "e7cc4976-d496-4a71-8110-95f2dc1b4ca2",
      "description" : "204.direct.settings.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.direct.settings.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.direct.settings.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "8f86cc7c-4ea5-4658-8921-466fa5e3d0e2",
      "description" : "Store Settings",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "agencySettings",
          "propertyValue" : "$.data",
          "uuid" : "391425a3-ac2e-4826-9a38-26e4d6e62877"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencySettings=$.data&addNamespaces=false&suppressExceptions=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-17-75484918",
    "enabled" : true,
    "routeId" : 17,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "f8f4404c-9766-4d47-a770-ae2e6b8a70da",
      "description" : "getTccSession",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getTccSession",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getTccSession"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "65c13dd9-1b52-4ddf-9deb-95db7a2f3937",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "af318e52-9bd5-4d3d-a709-589ebd886581",
      "description" : "Set API Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/tcc/sessions",
          "language" : "Constant",
          "uuid" : "58d3223f-4623-4572-83b4-662114cc365c"
        }, {
          "headerName" : "CamelHttpQuery",
          "headerValue" : "conversationId=${exchangeProperty.conversationId}",
          "language" : "Simple",
          "uuid" : "08979cb7-ad64-4020-9b15-8bc0ed278ab7"
        }, {
          "headerName" : "Authorization",
          "headerValue" : "${exchangeProperty.Authorization}",
          "language" : "Simple",
          "uuid" : "4b90c411-40ba-44d1-ae05-bfc11ecb583f"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "8e0ea338-6983-48d9-abca-a56d92e39a20",
      "description" : "204.direct.tcc.get.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.direct.tcc.get.in",
        "message" : "GET ${header.CamelHttpPath}?${header.CamelHttpQuery} ",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.direct.tcc.get.in&message=GET ${header.CamelHttpPath}?${header.CamelHttpQuery} &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "23ba358c-dadd-4be9-9515-717e5d74519f",
      "description" : "GET /tcc/sessions",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : true,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=false"
    }, {
      "name" : "log",
      "nodeId" : "2e0dda75-8216-48ce-b04f-cc40dc38eb0e",
      "description" : "204.direct.tcc.get.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.direct.tcc.get.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.direct.tcc.get.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "fc4fc1f8-f0c5-4a8c-be93-a9c465d9e05f",
      "description" : "OK?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "c52d8c3c-bbb6-4f4e-90d2-66f47d51edf7",
          "description" : "Get TCC Session",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "tccSession",
              "propertyValue" : "$.data[0]",
              "uuid" : "2687999d-0695-4d4f-8a41-d1a892652e58"
            }, {
              "language" : "JsonPath",
              "propertyName" : "tccSessionId",
              "propertyValue" : "$.data[0].session_id",
              "uuid" : "47990b09-84d1-44af-ad16-c11601a11eaa"
            } ],
            "suppressExceptions" : true,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?tccSession=$.data[0]&tccSessionId=$.data[0].session_id&addNamespaces=false&suppressExceptions=true"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelHttpResponseCode} == 200",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-18",
    "enabled" : true,
    "routeId" : 18,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "63ce99d6-8274-48f5-bd37-261d2b49d94d",
      "description" : "updateConversation",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "updateConversation",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}&method=put&operationName=updateConversation&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "4ef224c3-5c1a-4717-a9e7-98283318d0f8",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5b3b7689-eb61-4eb7-8d3b-2ff0bda71720",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "9e46706c-43e5-48b5-8403-c8d43e43a9f9",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "cd6ff647-ebc0-4d65-b989-de99e26663d0",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "0766dc95-ce8c-40b3-b1e0-84eb623f3f22"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "2f7591bc-05c7-40aa-8a46-0faf41d17f20"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "setBody",
      "nodeId" : "bd33be33-db6f-4ffe-bb42-ffa86ef179fc",
      "description" : "Set Metadata",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "$.metadata",
        "language" : "JsonPath",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.metadata&language=JsonPath&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f33aef77-94e1-433c-a51d-cc2a244cd26b",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messageFilter",
      "nodeId" : "a415abca-9240-4f7a-8b4b-c5d0d80a0a9b",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "body != null",
        "route" : [ {
          "name" : "process",
          "nodeId" : "96e6fe9d-8f1a-45db-8b06-da2825ff522c",
          "description" : "",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> metadata = (HashMap)exchange.getProperty(\"metadata\");\nexchange.setProperty(\"metadata\", mapper.writeValueAsString(metadata));\n",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;\n",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\nHashMap<String, Object> metadata = (HashMap)exchange.getProperty(\"metadata\");\nexchange.setProperty(\"metadata\", mapper.writeValueAsString(metadata));\n&import=import com.fasterxml.jackson.databind.ObjectMapper;\n"
        }, {
          "name" : "messagingEndpoint",
          "nodeId" : "eb2d9abb-c67c-49ba-a8c2-7f62b7f8a1fa",
          "description" : "",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql://UPDATE conversations SET metadata = :#${exchangeProperty.metadata}, updated_at = NOW() WHERE id = :#${exchangeProperty.conversationId}::UUID ?dataSource=#dsPostgres",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql://UPDATE conversations SET metadata = :#${exchangeProperty.metadata}, updated_at = NOW() WHERE id = :#${exchangeProperty.conversationId}::UUID ?dataSource=#dsPostgres"
        }, {
          "name" : "log",
          "nodeId" : "e60e429a-f64e-4933-b093-fbff058f148e",
          "description" : "",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "log",
            "message" : "headers: ${headers}; body: ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "direct",
          "nodeId" : "ea9f265f-ded0-46db-9701-4f6f652ac807",
          "description" : "getConversationById",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "direct",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=direct"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "ef6bee29-0405-465b-a050-6b00bb991b00",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${body} != null && ${body} != ''",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-19",
    "enabled" : true,
    "routeId" : 19,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "d62f60e5-fb47-4f12-938b-1f57d52abf30",
      "description" : "addRecipToConversation",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/recipients",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "addRecipientToConversation",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/recipients&method=put&operationName=addRecipientToConversation&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "d960114f-1957-4b20-b4fa-e00b8c6a97f0",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "adcfdabc-528b-4856-be65-a42df0a7c078",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "7cca2fe2-bf42-47b2-9612-7dbfc803c591",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "07a4b6a4-6adc-459f-b3a6-40da9a492ec8",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "c58bef68-dd76-49e2-ad6a-a0840f605019"
        }, {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "af1a6ad5-d8fe-49cb-ae47-a372572ec251"
        }, {
          "language" : "JsonPath",
          "propertyName" : "newRecipients",
          "propertyValue" : "$",
          "uuid" : "1b96b52d-9b9a-4783-9895-e2c6f9f7c2cb"
        }, {
          "language" : "Header",
          "propertyName" : "jwt",
          "propertyValue" : "Authorization",
          "uuid" : "ebcb89b1-ba1c-4ba8-ad6f-80d9eb4cd65c"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&conversationId=conversationId&newRecipients=$&jwt=Authorization&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "log",
      "nodeId" : "c5702ddf-6402-4f72-a5b0-55b488d81573",
      "description" : "204.api.addrecip.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.addrecip.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.addrecip.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "8ef81654-e6ca-4bd1-9de4-f141984164dc",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "direct",
      "nodeId" : "a6985420-0848-439d-b730-1372718ed5a6",
      "description" : "getConversationById",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getConversationById",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getConversationById"
    }, {
      "name" : "setProperties",
      "nodeId" : "7eed2418-01cd-4e85-a0f2-be229b4bebc8",
      "description" : "Get Conversation",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "conversation",
          "propertyValue" : "$.data",
          "uuid" : "fb598ded-9d4d-425a-980c-67c9ef909e41"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipients",
          "propertyValue" : "$.data.recipients",
          "uuid" : "85ef7789-8472-40bf-a73e-eb820dc6a529"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversation=$.data&recipients=$.data.recipients&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "splitter",
      "nodeId" : "61f46869-f172-4f3d-ae21-21eff041840b",
      "description" : "Each Recip",
      "properties" : {
        "_type" : "splitter",
        "active" : true,
        "addNamespaces" : false,
        "aggregationStrategy" : "",
        "camelGroup" : "routing",
        "expression" : "${exchangeProperty.newRecipients}",
        "language" : "Simple",
        "name" : "splitter",
        "namespaces" : [ ],
        "parallelProcessing" : false,
        "shareUnitOfWork" : false,
        "stopOnException" : true,
        "streaming" : false,
        "suppressExceptions" : false,
        "timeout" : "0",
        "token" : ",",
        "tokenize" : false,
        "url" : "",
        "useAggregationStrategy" : false
      },
      "_type" : "splitter",
      "branches" : [ {
        "type" : "split",
        "label" : "split",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "efd7b3d5-906c-42d7-8175-71d0c436de5e",
          "description" : "Set Recipient",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "label",
              "propertyValue" : "${body[label]}",
              "uuid" : "827e63f4-4c26-496b-a984-fa96f4674a9b"
            }, {
              "language" : "Simple",
              "propertyName" : "number",
              "propertyValue" : "${body[number]}",
              "uuid" : "747a5ecb-4217-40ec-9266-e91bb9fc88ab"
            }, {
              "language" : "Simple",
              "propertyName" : "language",
              "propertyValue" : "${body[language]}",
              "uuid" : "30b8fad5-a821-4665-9626-2ee791264fc2"
            }, {
              "language" : "Simple",
              "propertyName" : "fingerprint",
              "propertyValue" : "${body[fingerprint]}",
              "uuid" : "b2e2dfff-a433-4954-8785-14b82f4bec0c"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?label=${body[label]}&number=${body[number]}&language=${body[language]}&fingerprint=${body[fingerprint]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "abfc6218-7010-4ce3-b6bd-aaa783589605",
          "description" : "Set Request",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "HashMap<String, String> request = new HashMap<String, String>();\n\nif (exchange.getProperty(\"label\") != null)\n\trequest.put(\"label\", (String)exchange.getProperty(\"label\"));\n\nif (exchange.getProperty(\"language\") != null)\n\trequest.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nif (exchange.getProperty(\"number\") != null)\n\trequest.put(\"number\", (String)exchange.getProperty(\"number\"));\n\nif (exchange.getProperty(\"fingerprint\") != null)\n\trequest.put(\"fingerprint\", (String)exchange.getProperty(\"fingerprint\"));\n\nObjectMapper mapper = new ObjectMapper();\nif (request.isEmpty() == false)\n\texchange.getIn().setBody(mapper.writeValueAsString(request));\nelse\n\texchange.getIn().setBody(\"\");",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=HashMap<String, String> request = new HashMap<String, String>();\n\nif (exchange.getProperty(\"label\") != null)\n\trequest.put(\"label\", (String)exchange.getProperty(\"label\"));\n\nif (exchange.getProperty(\"language\") != null)\n\trequest.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nif (exchange.getProperty(\"number\") != null)\n\trequest.put(\"number\", (String)exchange.getProperty(\"number\"));\n\nif (exchange.getProperty(\"fingerprint\") != null)\n\trequest.put(\"fingerprint\", (String)exchange.getProperty(\"fingerprint\"));\n\nObjectMapper mapper = new ObjectMapper();\nif (request.isEmpty() == false)\n\texchange.getIn().setBody(mapper.writeValueAsString(request));\nelse\n\texchange.getIn().setBody(\"\");&import=import com.fasterxml.jackson.databind.ObjectMapper;"
        }, {
          "name" : "messageFilter",
          "nodeId" : "0809fcb4-2243-4b60-926f-90f630e78252",
          "description" : "Valid?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "body!=null",
            "route" : [ {
              "name" : "setHeaders",
              "nodeId" : "ab899592-b3d2-4553-ab28-8cd1f450969f",
              "description" : "Set Recip Request",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpPath",
                  "headerValue" : "/api/v1/recipients",
                  "language" : "Constant",
                  "uuid" : "580f1a61-01cf-47e5-b816-cb89078e312d"
                }, {
                  "headerName" : "Content-Type",
                  "headerValue" : "application/json",
                  "language" : "Constant",
                  "uuid" : "16d09d98-cd3b-4da6-9569-d0fa5569066a"
                }, {
                  "headerName" : "Authorization",
                  "headerValue" : "${exchangeProperty.jwt}",
                  "language" : "Simple",
                  "uuid" : "b06574b9-706e-4adf-a4e3-1146835da8d8"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "8a6978bf-6bba-4440-b9f6-1616f9ba5ef9",
              "description" : "204.api.addrecip.item.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "204.api.addrecip.item.in",
                "message" : "POST ${header.CamelHttpPath} ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.addrecip.item.in&message=POST ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "http",
              "nodeId" : "a40922ff-4b0d-410a-8bf0-e7eb3f3611d0",
              "description" : "POST /recipients",
              "properties" : {
                "_type" : "http",
                "active" : true,
                "advancedParameters" : [ ],
                "bridgeEndpoint" : true,
                "camelGroup" : "component",
                "connectTimeout" : "20000",
                "connectionRequestTimeout" : "20000",
                "disableStreamCache" : true,
                "httpMethod" : "POST",
                "httpUri" : "{{convey.api.host}}",
                "name" : "http",
                "scheme" : "https",
                "socketTimeout" : "20000",
                "throwExceptionOnFailure" : true,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "http",
              "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
            }, {
              "name" : "log",
              "nodeId" : "71576568-a2f5-481a-8005-21f4d7d026be",
              "description" : "204.api.addrecip.item.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "204.api.addrecip.item.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.addrecip.item.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "messageFilter",
              "nodeId" : "18be4a4a-0656-4c11-9006-38c068fbab46",
              "description" : "",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "filter",
                "label" : "201",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "40447f86-8b54-4aea-83f7-b31700689581",
                  "description" : "Get Recipient",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "JsonPath",
                      "propertyName" : "recipientId",
                      "propertyValue" : "$.data.recipient_id",
                      "uuid" : "578ed36c-06a8-4a79-a0bf-9b465ed476cf"
                    }, {
                      "language" : "JsonPath",
                      "propertyName" : "recipientLabel",
                      "propertyValue" : "$.data.label",
                      "uuid" : "eb3ba92c-592f-4261-be06-4dac69e5c444"
                    }, {
                      "language" : "JsonPath",
                      "propertyName" : "recipientNumber",
                      "propertyValue" : "$.data.number",
                      "uuid" : "27bde5ef-8f26-4169-a64c-0cb1e08ff1a9"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?recipientId=$.data.recipient_id&recipientLabel=$.data.label&recipientNumber=$.data.number&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "0c75a131-9207-4569-b9fd-7e8cea20877c",
                  "description" : "SQL Add Convo Recip",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:INSERT INTO conversation_recipients (conversation_id, recipient_id, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.conversationId} AS uuid), CAST(:#${exchangeProperty.recipientId} AS uuid), NOW(), NOW()) ON CONFLICT DO NOTHING RETURNING id AS row_id?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:INSERT INTO conversation_recipients (conversation_id, recipient_id, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.conversationId} AS uuid), CAST(:#${exchangeProperty.recipientId} AS uuid), NOW(), NOW()) ON CONFLICT DO NOTHING RETURNING id AS row_id?dataSource=#dsPostgres"
                }, {
                  "name" : "messageFilter",
                  "nodeId" : "8e467cb7-3c2e-415d-a821-d8346ce65b60",
                  "description" : "",
                  "properties" : {
                    "_type" : "messageFilter",
                    "active" : true,
                    "camelGroup" : "routing",
                    "name" : "messageFilter",
                    "url" : ""
                  },
                  "_type" : "messageFilter",
                  "branches" : [ {
                    "type" : "filter",
                    "label" : "inserted?",
                    "route" : [ {
                      "name" : "process",
                      "nodeId" : "6aa7dae5-5ab2-435e-9c28-30d4d9632b4a",
                      "description" : "Set Response",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "HashMap<String, String> responseData = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"label\", (String)exchange.getProperty(\"recipientLabel\"));\t\n}};\n\nHashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n\tput(\"apiOperation\", \"addRecipientToConversation\");\n\tput(\"objectType\", \"Recipient\");\t\n\tput(\"requestId\", (String)exchange.getExchangeId());\n\tput(\"data\", responseData);\n}};\n\nObjectMapper mapper = new ObjectMapper();\nexchange.getIn().setBody(mapper.writeValueAsString(responseJson));",
                        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=HashMap<String, String> responseData = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"label\", (String)exchange.getProperty(\"recipientLabel\"));\t\n}};\n\nHashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n\tput(\"apiOperation\", \"addRecipientToConversation\");\n\tput(\"objectType\", \"Recipient\");\t\n\tput(\"requestId\", (String)exchange.getExchangeId());\n\tput(\"data\", responseData);\n}};\n\nObjectMapper mapper = new ObjectMapper();\nexchange.getIn().setBody(mapper.writeValueAsString(responseJson));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
                    }, {
                      "name" : "seda",
                      "nodeId" : "b0e6a0d9-8022-4a8f-a8dd-d7796993f049",
                      "description" : "enqueue-event",
                      "properties" : {
                        "_type" : "seda",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "blockWhenFull" : false,
                        "camelGroup" : "core",
                        "concurrentConsumers" : "1",
                        "endpointName" : "enqueue-event",
                        "limitConcurrentConsumers" : true,
                        "multipleConsumers" : false,
                        "name" : "seda",
                        "pollTimeout" : "1000",
                        "size" : "1000",
                        "specifyMaximumCapacitySize" : false,
                        "timeout" : "30000",
                        "toDynamicEndpoint" : false,
                        "url" : "",
                        "waitForTaskToComplete" : "Never"
                      },
                      "_type" : "seda",
                      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
                    } ],
                    "properties" : {
                      "addNamespaces" : "false",
                      "condition" : "${header.CamelSqlRowCount} == 1 && ${body} != null && ${body.size()} > 0",
                      "language" : "Simple",
                      "namespaces" : [ ],
                      "suppressExceptions" : "false"
                    }
                  } ],
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${header.CamelHttpResponseCode} == 201 || ${header.CamelHttpResponseCode} == 200",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${body} != null && ${body} != ''",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "0250029e-3e47-4e3e-89d3-6254bd1791af",
          "description" : "getConversationById",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getConversationById",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getConversationById"
        }, {
          "name" : "setBody",
          "nodeId" : "ae19d4ff-134a-4b93-8187-857c3130683d",
          "description" : "Set Response",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "$.data.recipients",
            "language" : "JsonPath",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data.recipients&language=JsonPath&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "f7760103-2292-45d2-92e0-ffc99025c3e8",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.newRecipients}&language=Simple&parallelProcessing=false&shareUnitOfWork=false&stopOnException=true&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-20",
    "enabled" : true,
    "routeId" : 20,
    "route" : [ {
      "name" : "deleteRequest",
      "nodeId" : "3539b0c7-b9c8-4fc3-9cc6-88925874212c",
      "description" : "removeRecipFromConvo",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/recipients/{recipientId}",
        "method" : "delete",
        "name" : "deleteRequest",
        "operationName" : "removeRecipientFromConversation",
        "produces" : "application/json",
        "requestmethod" : "DELETE",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/recipients/{recipientId}&method=delete&operationName=removeRecipientFromConversation&produces=application/json&requestmethod=DELETE"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "79921be5-d445-4bce-8bcf-8cf05dc946d8",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "0845cea5-fd65-4ba7-add7-f48f986e35c1",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "584189ed-4b16-4368-9ce8-f637daac5e01",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "ed7c66ec-cc84-4b20-87ff-09f2374e7abb"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "b66258e4-fdf2-43a3-8ed4-7f58094aa54e"
        }, {
          "language" : "Header",
          "propertyName" : "recipientId",
          "propertyValue" : "recipientId",
          "uuid" : "e17011f5-e57e-47ee-aa55-0116114783f4"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=conversationId&agencyId=x-agency-id&recipientId=recipientId&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "f81024da-c330-4682-9104-c5e44ff564a4",
      "description" : "204.api.delrecip.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "204.api.delrecip.in",
        "message" : "${header.CamelHttpMethod} ${header.CamelHttpPath}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.delrecip.in&message=${header.CamelHttpMethod} ${header.CamelHttpPath}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "29978681-3209-4404-adff-07b4d0b435a1",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "597c38f0-7996-4163-932c-b34e15847491",
      "description" : "SQL Remove Recipient",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:DELETE FROM conversation_recipients WHERE conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND recipient_id = CAST(:#${exchangeProperty.recipientId} AS uuid) RETURNING recipient_id?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:DELETE FROM conversation_recipients WHERE conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND recipient_id = CAST(:#${exchangeProperty.recipientId} AS uuid) RETURNING recipient_id?dataSource=#dsPostgres"
    }, {
      "name" : "messageFilter",
      "nodeId" : "f5c40d2f-40cb-4ba1-ada1-09e6e4bc81ce",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "not found?",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "871053ae-e332-4983-b7b2-270771b44c0f",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Recipient not found",
              "uuid" : "11ed1e2a-0027-4b35-ba5a-7b16222e6f98"
            }, {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "404",
              "uuid" : "0abf4849-b0e4-4882-b440-c710283f2e4c"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Recipient not found&CamelHttpResponseCode=404&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "1dd83145-74e7-4878-a366-a552dd8bdd98",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "log",
          "nodeId" : "0731bd72-1725-4ea1-8cf7-6b30e38e1922",
          "description" : "204.api.delrecip.404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "204.api.delrecip.404",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.delrecip.404&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "stop",
          "nodeId" : "e3cd8fd7-836f-48ea-992d-5ca0a6df320c",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${body} == null || ${body.size()} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "c3104bfc-cf9c-46a5-a104-06810fc3b545",
          "description" : "SQL Get Recipient",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:SELECT friendly_name AS label, recipient_number FROM recipients WHERE id = CAST(:#${exchangeProperty.recipientId} AS uuid) LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:SELECT friendly_name AS label, recipient_number FROM recipients WHERE id = CAST(:#${exchangeProperty.recipientId} AS uuid) LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne"
        }, {
          "name" : "setProperties",
          "nodeId" : "33714445-0de5-4c6c-a6c8-92718faa6fe8",
          "description" : "Set Recipient",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "recipientLabel",
              "propertyValue" : "${body[label]}",
              "uuid" : "10164adc-24c7-4eb8-8883-1f2f552b3948"
            }, {
              "language" : "Simple",
              "propertyName" : "recipientNumber",
              "propertyValue" : "${body[recipient_number]}",
              "uuid" : "70aa3817-1fbe-414f-8971-6829e71fca2a"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?recipientLabel=${body[label]}&recipientNumber=${body[recipient_number]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "1e4180cd-5ccf-4d34-828f-23ce17204504",
          "description" : "Set Response",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "HashMap<String, String> response = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"label\", (String)exchange.getProperty(\"recipientLabel\"));\t\n}};\nexchange.getIn().setBody(response);",
            "import" : "// import org.apache.camel.Message",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=HashMap<String, String> response = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"label\", (String)exchange.getProperty(\"recipientLabel\"));\t\n}};\nexchange.getIn().setBody(response);&import=// import org.apache.camel.Message"
        }, {
          "name" : "setHeaders",
          "nodeId" : "163fb3f2-480f-4104-aec9-969d67e4c11e",
          "description" : "HTTP200",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "200",
              "language" : "Constant",
              "uuid" : "51979fdc-2a9d-4ff6-93e8-d85697a97f3d"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "0441aac0-c00b-4049-bbbb-8eef01dfd6b9",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "seda",
          "nodeId" : "f5255602-194a-4ccf-a575-35a26841f4cf",
          "description" : "enqueue-event",
          "properties" : {
            "_type" : "seda",
            "active" : true,
            "advancedParameters" : [ ],
            "blockWhenFull" : false,
            "camelGroup" : "core",
            "concurrentConsumers" : "1",
            "endpointName" : "enqueue-event",
            "limitConcurrentConsumers" : true,
            "multipleConsumers" : false,
            "name" : "seda",
            "pollTimeout" : "1000",
            "size" : "1000",
            "specifyMaximumCapacitySize" : false,
            "timeout" : "30000",
            "toDynamicEndpoint" : false,
            "url" : "",
            "waitForTaskToComplete" : "Never"
          },
          "_type" : "seda",
          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-d2cfaf9d",
    "enabled" : true,
    "routeId" : 21,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "992d8cdd-78d3-4235-b3f5-97de4e7083b7",
      "description" : "create-conversation",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "create-conversation",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=create-conversation"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "d052de3f-d539-432a-8635-2a771c6143ad",
      "description" : "SQL Check Active Conv",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT c_r.conversation_id FROM conversation_recipients c_r LEFT JOIN conversations c ON c_r.conversation_id = c.id LEFT JOIN recipients r ON c_r.recipient_id = r.id LEFT JOIN numbers n ON c.number_id = n.id WHERE c.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND n.id = CAST(:#${exchangeProperty.providerNumberId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.recipient_number = :#${exchangeProperty.recipientNumber} OR r.ten_dlc = :#${exchangeProperty.recipientNumber} ) AND c.status = \\'active\\' GROUP BY c_r.conversation_id?dataSource=#dsPostgres&OutputType=SelectList",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT c_r.conversation_id FROM conversation_recipients c_r LEFT JOIN conversations c ON c_r.conversation_id = c.id LEFT JOIN recipients r ON c_r.recipient_id = r.id LEFT JOIN numbers n ON c.number_id = n.id WHERE c.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND n.id = CAST(:#${exchangeProperty.providerNumberId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.recipient_number = :#${exchangeProperty.recipientNumber} OR r.ten_dlc = :#${exchangeProperty.recipientNumber} ) AND c.status = \\'active\\' GROUP BY c_r.conversation_id?dataSource=#dsPostgres&OutputType=SelectList"
    }, {
      "name" : "log",
      "nodeId" : "e79533d0-87ef-48a2-b0fb-2f72f2098dd4",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "Count: ${header.CamelSqlRowCount} SELECT c_r.conversation_id FROM conversation_recipients c_r LEFT JOIN conversations c ON c_r.conversation_id = c.id LEFT JOIN recipients r ON c_r.recipient_id = r.id LEFT JOIN numbers n ON c.number_id = n.id WHERE c.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND n.id = CAST(:#${exchangeProperty.providerNumberId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.recipient_number = :#${exchangeProperty.recipientNumber} OR r.ten_dlc = :#${exchangeProperty.recipientNumber} ) AND c.status = \\'active\\' GROUP BY c_r.conversation_id",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=Count: ${header.CamelSqlRowCount} SELECT c_r.conversation_id FROM conversation_recipients c_r LEFT JOIN conversations c ON c_r.conversation_id = c.id LEFT JOIN recipients r ON c_r.recipient_id = r.id LEFT JOIN numbers n ON c.number_id = n.id WHERE c.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND n.id = CAST(:#${exchangeProperty.providerNumberId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.recipient_number = :#${exchangeProperty.recipientNumber} OR r.ten_dlc = :#${exchangeProperty.recipientNumber} ) AND c.status = \\'active\\' GROUP BY c_r.conversation_id&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "3e693c22-b8d8-4b81-83d6-e245aa419b0d",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "active conv exits",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "6e982cb3-2d9b-4ae5-86a8-7dd9ea9d658b",
          "description" : "Set Conversation ID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "x-authorized",
              "propertyValue" : "true",
              "uuid" : "9f123158-2927-41bf-8963-8ea997f76a1a"
            }, {
              "language" : "Simple",
              "propertyName" : "conversationId",
              "propertyValue" : "${body[0][conversation_id]}",
              "uuid" : "a97606f0-7b94-4a30-8315-5891598f03b6"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?x-authorized=true&conversationId=${body[0][conversation_id]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "7cc46578-68f2-495e-b872-c954db620adb",
          "description" : "to getConversationById",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getConversationById",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getConversationById"
        }, {
          "name" : "setBody",
          "nodeId" : "f253d6ba-22eb-4dc7-a3bb-b27d2a66a83d",
          "description" : "Set Response",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "$.data",
            "language" : "JsonPath",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "1d31939c-6a10-4b08-960d-a2b60753b04a",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "setHeaders",
          "nodeId" : "c360d1b3-9940-4121-89ba-d53c43c23bf4",
          "description" : "Set HTTP200",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "200",
              "language" : "Constant",
              "uuid" : "b0bb11d8-07f7-4911-bcaa-218e7fea1ba7"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "c1ae712f-e8c2-4249-804c-95b8741b1745",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")\n.log(LoggingLevel.INFO, 'api.conversations.create.out', '(${header.CamelHttpResponseCode}) ${body}')\t",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")\n.log(LoggingLevel.INFO, 'api.conversations.create.out', '(${header.CamelHttpResponseCode}) ${body}')\t"
        }, {
          "name" : "log",
          "nodeId" : "6e6ca2f1-0c77-4f4b-8277-f11c55251567",
          "description" : "204.api.create.active.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "204.api.create.active.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.active.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "stop",
          "nodeId" : "1bb44d37-e285-4ea8-8b66-53ea24139157",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} > 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "log",
          "nodeId" : "96f6c6fd-e3ea-4333-bee1-25a2d379876b",
          "description" : "",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "log",
            "message" : "label: ${exchangeProperty.conversationLabel} channel: ${exchangeProperty.channel} resourceFile: ${exchangeProperty.resourceFile}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=label: ${exchangeProperty.conversationLabel} channel: ${exchangeProperty.channel} resourceFile: ${exchangeProperty.resourceFile}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "84745b6e-68bb-4431-bd4d-7eb342118389",
          "description" : "SQL Create Conversation",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to(\"sql:classpath:conversations.insert.sql?dataSource=#dsPostgres\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to(\"sql:classpath:conversations.insert.sql?dataSource=#dsPostgres\")"
        }, {
          "name" : "messageFilter",
          "nodeId" : "0340c5d4-0527-4fc3-87f1-9c2fa2a5752c",
          "description" : "Sanity Check",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "!conversation",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "18c6dcca-85a9-4ff8-b9a6-acf56370ed66",
              "description" : "Set Error",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "error",
                  "propertyValue" : "Error creating new conversation. Please try again.",
                  "uuid" : "0e9092db-c794-4332-bda2-2b08ac78a477"
                }, {
                  "language" : "",
                  "propertyName" : "CamelHttpResponseCode",
                  "propertyValue" : "500",
                  "uuid" : "1594a01c-502e-44c6-8f3e-73df3dfb765b"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?error=Error creating new conversation. Please try again.&CamelHttpResponseCode=500&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "54c78555-5633-4d52-814e-123b39398842",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            }, {
              "name" : "log",
              "nodeId" : "d939861b-68ee-4c09-a4da-5ee4c8868a1f",
              "description" : "204.api.create.sqlerr",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "ERROR",
                "logType" : "EIP",
                "loggerName" : "204.api.create.sqlerr",
                "message" : "${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=204.api.create.sqlerr&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "stop",
              "nodeId" : "b3365b9c-0623-4da9-8cbb-f51b9d7c800c",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${body} == null || ${body.size()} == 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          }, {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "a7654178-cb31-442b-a8dd-d4dc0b4d168d",
              "description" : "Store Conversation",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "conversation",
                  "propertyValue" : "${body[0]}",
                  "uuid" : "41f98e0c-a461-4f9c-8116-4bac4fb32b1f"
                }, {
                  "language" : "Simple",
                  "propertyName" : "conversationId",
                  "propertyValue" : "${exchangeProperty.conversation[conversation_id]}",
                  "uuid" : "38670a7b-f025-488a-ace8-7f97844f60e2"
                }, {
                  "language" : "Simple",
                  "propertyName" : "x-authorized",
                  "propertyValue" : "true",
                  "uuid" : "8313423e-7fb4-457a-9beb-4636a09d2bd3"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?conversation=${body[0]}&conversationId=${exchangeProperty.conversation[conversation_id]}&x-authorized=true&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "splitter",
              "nodeId" : "26c7e7ab-2c7c-4b06-b334-8f117db7652c",
              "description" : "recipients.each",
              "properties" : {
                "_type" : "splitter",
                "active" : true,
                "addNamespaces" : false,
                "aggregationStrategy" : "",
                "aggregationStrategyRef" : "",
                "camelGroup" : "routing",
                "expression" : "${exchangeProperty.recipients}",
                "language" : "Simple",
                "name" : "splitter",
                "namespaces" : [ ],
                "parallelProcessing" : false,
                "shareUnitOfWork" : false,
                "stopOnException" : true,
                "streaming" : false,
                "suppressExceptions" : false,
                "timeout" : "0",
                "token" : ",",
                "tokenize" : false,
                "url" : "",
                "useAggregationStrategy" : false
              },
              "_type" : "splitter",
              "branches" : [ {
                "type" : "split",
                "label" : "split",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "5b592cb0-cc4a-4abd-823d-b7d8ab802524",
                  "description" : "Get Recipient Params",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Simple",
                      "propertyName" : "recipientNumber",
                      "propertyValue" : "${body[number]}",
                      "uuid" : "108c2885-0977-4be0-b3e0-adc99bb3a3b4"
                    }, {
                      "language" : "Simple",
                      "propertyName" : "label",
                      "propertyValue" : "${body[label]}",
                      "uuid" : "9edde59f-7692-4938-868e-142ad3be86ce"
                    }, {
                      "language" : "Simple",
                      "propertyName" : "recipientLanguage",
                      "propertyValue" : "${body[language]}",
                      "uuid" : "f978ff20-6569-46e1-b918-d326685de2f4"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?recipientNumber=${body[number]}&label=${body[label]}&recipientLanguage=${body[language]}&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "process",
                  "nodeId" : "f5fd2e4a-b304-450c-865e-edbe9e91d1c8",
                  "description" : "Set Recipient Request",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "HashMap<String, String> recipRequest = new HashMap<String, String>() {{\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n}};\n\nif (exchange.getProperty(\"label\") != null)\n\trecipRequest.put(\"label\", (String)exchange.getProperty(\"label\"));\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\trecipRequest.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\nelse if (exchange.getProperty(\"language\") != null)\n\trecipRequest.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nexchange.getIn().setBody(recipRequest);",
                    "import" : "",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?code=HashMap<String, String> recipRequest = new HashMap<String, String>() {{\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n}};\n\nif (exchange.getProperty(\"label\") != null)\n\trecipRequest.put(\"label\", (String)exchange.getProperty(\"label\"));\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\trecipRequest.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\nelse if (exchange.getProperty(\"language\") != null)\n\trecipRequest.put(\"language\", (String)exchange.getProperty(\"language\"));\n\nexchange.getIn().setBody(recipRequest);"
                }, {
                  "name" : "log",
                  "nodeId" : "d7ea2fcd-c185-40e2-b6d8-ec0721cf7fbe",
                  "description" : "204.api.create.recip.in",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "204.api.create.recip.in",
                    "message" : "${body}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.recip.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "32a99d33-af91-40af-b166-777b294810ba",
                  "description" : "Set Request Headers",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".marshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson)\n.removeHeaders(\"CamelHttp*\")\n.setHeader('CamelHttpPath').constant('/api/v1/recipients')",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.marshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson)\n.removeHeaders(\"CamelHttp*\")\n.setHeader('CamelHttpPath').constant('/api/v1/recipients')"
                }, {
                  "name" : "http",
                  "nodeId" : "66cf4a9c-485b-4ebb-b12b-215da2bed526",
                  "description" : "Create Recipient",
                  "properties" : {
                    "_type" : "http",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "bridgeEndpoint" : false,
                    "camelGroup" : "component",
                    "connectTimeout" : "-1",
                    "connectionRequestTimeout" : "-1",
                    "disableStreamCache" : true,
                    "httpMethod" : "POST",
                    "httpUri" : "{{convey.api.host}}",
                    "name" : "http",
                    "scheme" : "https",
                    "socketTimeout" : "-1",
                    "throwExceptionOnFailure" : true,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "http",
                  "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=true"
                }, {
                  "name" : "convertBodyTo",
                  "nodeId" : "7f63cda0-e4f9-4691-b169-ccafa6033622",
                  "description" : "To String",
                  "properties" : {
                    "_type" : "convertBodyTo",
                    "active" : true,
                    "camelGroup" : "transform",
                    "name" : "convertBodyTo",
                    "targetClass" : "String.class",
                    "url" : ""
                  },
                  "_type" : "convertBodyTo",
                  "kameletPropertiesUrl" : "?targetClass=String.class"
                }, {
                  "name" : "setProperties",
                  "nodeId" : "b4e00f8f-4071-40a0-948d-845f01123d67",
                  "description" : "Set Recipient",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "JsonPath",
                      "propertyName" : "recipient",
                      "propertyValue" : "$.data",
                      "uuid" : "1ee5d85c-3d0f-4b71-a360-db52f35d9c8a"
                    }, {
                      "language" : "JsonPath",
                      "propertyName" : "recipientId",
                      "propertyValue" : "$.data.recipient_id",
                      "uuid" : "584d9db9-f399-4ec3-9e90-fdba4f8ca373"
                    }, {
                      "language" : "JsonPath",
                      "propertyName" : "recipientLanguage",
                      "propertyValue" : "$.data.language",
                      "uuid" : "2d3d82a3-49df-4eb2-b4a8-67483ef7ba42"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?recipient=$.data&recipientId=$.data.recipient_id&recipientLanguage=$.data.language&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "8be5cfdc-19de-404e-abd2-b3876ad9c673",
                  "description" : "SQL Add Conv Recips",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".to(\"sql:classpath:conversation_recipients.insert.sql?dataSource=#dsPostgres\")",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.to(\"sql:classpath:conversation_recipients.insert.sql?dataSource=#dsPostgres\")"
                }, {
                  "name" : "messageFilter",
                  "nodeId" : "846e63e0-7897-4bb1-883e-5b54202bfb30",
                  "description" : "Opening Message?",
                  "properties" : {
                    "_type" : "messageFilter",
                    "active" : true,
                    "camelGroup" : "routing",
                    "name" : "messageFilter",
                    "url" : ""
                  },
                  "_type" : "messageFilter",
                  "branches" : [ {
                    "type" : "filter",
                    "label" : "if message",
                    "route" : [ {
                      "name" : "process",
                      "nodeId" : "fecda0af-0c03-421f-a5d5-0340d6eeed0f",
                      "description" : "Set Message Request",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "String direction = \"outbound\";\nif (exchange.getProperty(\"direction\") != null)\n\tdirection = (String)exchange.getProperty(\"direction\");\n\nHashMap<String, String> messageReq = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"body\", (String)exchange.getProperty(\"message\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\t\n\tput(\"direction\", direction);\n}};\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\tmessageReq.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\n\nexchange.getIn().setBody(messageReq);\n",
                        "import" : "",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=String direction = \"outbound\";\nif (exchange.getProperty(\"direction\") != null)\n\tdirection = (String)exchange.getProperty(\"direction\");\n\nHashMap<String, String> messageReq = new HashMap<String, String>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"body\", (String)exchange.getProperty(\"message\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\t\n\tput(\"direction\", direction);\n}};\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\tmessageReq.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\n\nexchange.getIn().setBody(messageReq);\n"
                    }, {
                      "name" : "log",
                      "nodeId" : "f782695f-72d6-4061-bfd3-e38f9c0c8206",
                      "description" : "204.api.create.msg.in",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "204.api.create.msg.in",
                        "message" : "${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.msg.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "dslProcessor",
                      "nodeId" : "9958cfbf-9692-4f5d-bf53-967c10b55dfd",
                      "description" : "Set Request Headers",
                      "properties" : {
                        "_type" : "dslProcessor",
                        "active" : true,
                        "camelGroup" : "core",
                        "dsl" : ".marshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson)\n.removeHeaders(\"CamelHttp*\")\n.setHeader('CamelHttpPath').constant('/api/v1/messages')\n.setHeader(\"Content-Type\").constant(\"application/json\")",
                        "name" : "dslProcessor",
                        "url" : ""
                      },
                      "_type" : "dslProcessor",
                      "kameletPropertiesUrl" : "?dsl=.marshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson)\n.removeHeaders(\"CamelHttp*\")\n.setHeader('CamelHttpPath').constant('/api/v1/messages')\n.setHeader(\"Content-Type\").constant(\"application/json\")"
                    }, {
                      "name" : "http",
                      "nodeId" : "dcefe108-cdab-4de3-9639-2b5f99c92e94",
                      "description" : "POST /messages",
                      "properties" : {
                        "_type" : "http",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "bridgeEndpoint" : false,
                        "camelGroup" : "component",
                        "connectTimeout" : "-1",
                        "connectionRequestTimeout" : "-1",
                        "disableStreamCache" : true,
                        "httpMethod" : "POST",
                        "httpUri" : "{{convey.api.host}}",
                        "name" : "http",
                        "scheme" : "https",
                        "socketTimeout" : "-1",
                        "throwExceptionOnFailure" : true,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "http",
                      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=true"
                    }, {
                      "name" : "log",
                      "nodeId" : "96fa5570-be27-4b61-8c89-45669a96b7d0",
                      "description" : "204.api.create.msg.out",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "204.api.create.msg.out",
                        "message" : "(${header.CamelHttpResponseCode}) ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=204.api.create.msg.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    } ],
                    "properties" : {
                      "addNamespaces" : "false",
                      "condition" : "${exchangeProperty.message}",
                      "language" : "Simple",
                      "namespaces" : [ ],
                      "suppressExceptions" : "false"
                    }
                  } ],
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : { }
              }, {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "direct",
                  "nodeId" : "08221492-3be7-4f09-baf5-0e7a305fd218",
                  "description" : "to getConversationById",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "getConversationById",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=getConversationById"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "1ba99105-cc68-4104-a6bb-7f794c1a348d",
                  "description" : "HTTP201",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "201",
                      "language" : "Constant",
                      "uuid" : "2c349b75-a06a-4cfc-88ad-ab2d3cbac4a6"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "setBody",
                  "nodeId" : "ef53013e-b943-4172-8e82-ed39fcc77eab",
                  "description" : "Set Response",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "$.data",
                    "language" : "JsonPath",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "0a4424bf-e356-47a4-ac28-0c3c348bde63",
                  "description" : "Render Response",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".bean('renderResponse')\n.log(LoggingLevel.INFO, 'api.conversations.create.out', '(${header.CamelHttpResponseCode}) ${body}')",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')\n.log(LoggingLevel.INFO, 'api.conversations.create.out', '(${header.CamelHttpResponseCode}) ${body}')"
                }, {
                  "name" : "seda",
                  "nodeId" : "6d5c9d13-8059-4a68-a80c-58fd28cfee8a",
                  "description" : "enqueue-event",
                  "properties" : {
                    "_type" : "seda",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "blockWhenFull" : false,
                    "camelGroup" : "core",
                    "concurrentConsumers" : "1",
                    "endpointName" : "enqueue-event",
                    "limitConcurrentConsumers" : true,
                    "multipleConsumers" : false,
                    "name" : "seda",
                    "pollTimeout" : "1000",
                    "size" : "1000",
                    "specifyMaximumCapacitySize" : false,
                    "timeout" : "30000",
                    "toDynamicEndpoint" : false,
                    "url" : "",
                    "waitForTaskToComplete" : "Never"
                  },
                  "_type" : "seda",
                  "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.recipients}&language=Simple&parallelProcessing=false&shareUnitOfWork=false&stopOnException=true&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-22",
    "enabled" : true,
    "routeId" : 22,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "f1e3db17-f71d-49e8-9195-9d35535235a5",
      "description" : "getConversationRecipients",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/conversations/{conversationId}/recipients",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getConversationRecipients",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/conversations/{conversationId}/recipients&method=get&operationName=getConversationRecipients&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "99bc8471-d0b0-41f2-8bc4-a2fca26049c3",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ba7ed2c5-9067-4592-8c93-256fc244b8e5",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} == 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "47d8470e-d2da-4db7-8e3a-c4d490942c0a",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "bc265f82-8604-4554-97b5-84be3d1a3493"
        }, {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "37ed16cb-5b51-4e57-abd3-d927bf501af1"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&conversationId=conversationId&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "13fb177a-c28d-40cc-89f9-cf26dc8cbc0a",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "3ac877bb-2955-42cb-ac3c-648ea2005c7b",
      "description" : "SQL Validate Conversation",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT id FROM conversations WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT id FROM conversations WHERE id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "messageRouter",
      "nodeId" : "9e4cb810-5654-44fa-b354-b6ca66a7800d",
      "description" : "Exists?",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "3debe102-0549-4f9a-9dc4-481677da664a",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      }, {
        "type" : "when",
        "label" : "when",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "b0f1f061-b281-4bc2-bb86-b6f4d2c815f4",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Conversation not found",
              "uuid" : "8cc76244-dd24-4676-8abc-a676656fc8f3"
            }, {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "404",
              "uuid" : "8965f452-c158-43b3-8b34-c4c79ec35375"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Conversation not found&CamelHttpResponseCode=404&addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "a9daef56-c06f-4424-9a21-08cb6c985a61",
          "description" : "SQL Get Recipients",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:SELECT r.id AS recipient_id, r.recipient_number AS number, r.ten_dlc, r.fingerprint, r.friendly_name AS label, r.language, TO_CHAR(cr.created_at, \\'YYYY-MM-DD HH24:MI:SS\\') AS created_at FROM conversation_recipients cr LEFT JOIN recipients r ON cr.recipient_id = r.id WHERE cr.conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) ORDER BY cr.created_at ASC?dataSource=#dsPostgres&OutputType=SelectList",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:SELECT r.id AS recipient_id, r.recipient_number AS number, r.ten_dlc, r.fingerprint, r.friendly_name AS label, r.language, TO_CHAR(cr.created_at, \\'YYYY-MM-DD HH24:MI:SS\\') AS created_at FROM conversation_recipients cr LEFT JOIN recipients r ON cr.recipient_id = r.id WHERE cr.conversation_id = CAST(:#${exchangeProperty.conversationId} AS uuid) AND r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) ORDER BY cr.created_at ASC?dataSource=#dsPostgres&OutputType=SelectList"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  } ],
  "traits" : [ {
    "name" : "health",
    "configuration" : {
      "enabled" : true,
      "livenessProbeEnabled" : true,
      "readinessProbeEnabled" : true
    }
  } ],
  "id" : "46502b90-708d-478a-90ea-058b38851d8a",
  "name" : "r204-conversations-api",
  "description" : "Conversations REST API",
  "createdAt" : "2023-10-04T18:05:07.394744846",
  "updatedAt" : "2023-10-04T18:05:07.394745535",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}