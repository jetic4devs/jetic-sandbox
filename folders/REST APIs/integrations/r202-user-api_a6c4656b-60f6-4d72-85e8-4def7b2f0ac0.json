{
  "revision" : 2015,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : "bbb9efa1-b2d5-496e-acff-3115320030f4",
  "currentProfileUuid" : "e606328a-fa16-4385-b81f-46a859bf7811",
  "parameterGroupUuids" : [ "e1d81a6a-655e-42ff-8288-6b0891abe7b0", "3dacce84-b8c8-4759-8bfa-355c8cf6acd6", "c9a8ecf3-391c-4a06-bdc0-68a1a504fdd9", "c08652a3-d6b0-49e8-8f94-a7b6845afe60", "ca06b01a-b205-4b2b-9e9d-9f49614e7e94", "1e16c327-8438-492e-b6c2-2244741e1fd9", "351ac858-4e6b-4902-9090-0be62c4dc9e0" ],
  "repoResourceUuids" : [ "07e34d9c-7cea-4532-94e6-7da0f6bddeb3", "71e48dda-80e9-4034-af48-cf39a9a10938", "f50d9293-f6bf-47b6-b21e-4cfda6eee3c4", "60b1161c-74ee-4cd8-96a1-0055c90271c1", "53fdde81-5a17-45a2-adbc-fe66d992d5b4", "fedc2ba8-c348-4a92-a89c-844badda8f1f", "6c0635de-32bb-4847-b940-1e5860af0e73", "5a8616e2-545a-4fb4-92a0-308feae7fc27", "af3ad35e-2a78-4a12-8766-7cbcb523d857", "6b672a79-cad2-4a21-99f1-78de292a3095", "eddb9cf2-828c-4bf6-a038-93128340a0c2", "1872a943-2a9b-4513-8739-06e95090b977", "55882383-5e69-44b0-a3ac-12785e306303", "9fb5f9ac-54fb-4ea4-b9d6-a3f95d92021b", "e859d27c-054e-489d-96ef-1338b179fde7", "2d21c0b9-a829-4420-84e6-67d34aaf6026", "e07ee775-654d-4d80-833f-3948c328330e", "0d41f9ca-58b0-434f-a68e-5855e59f3249", "42d575b0-00cb-4a37-93ad-edde1b42a9ec", "32f62f4b-6bad-4045-97c6-ae63d0807af4", "dbcd60e7-2713-45ac-b440-49946137f161", "a1057428-1531-40a8-a129-ed27382e947f", "3b5aa833-0eaa-4cb9-8ce8-ca97eac74110", "05649865-0c5a-4bfd-bddb-046f69383940", "a26703d4-ceed-4860-a0bd-76f10f62b306", "e117e204-f9f8-4b65-ac47-18920b0cb30c", "4da10b43-9e5d-4345-861c-96d4138ca9d5", "4e021d57-2b93-4eab-8ecd-1e4ea641a24b", "46baf835-0c08-4aa0-93fe-1e13a7e9475d", "17e7ca54-4247-4e9c-ba30-d078e3ac407a", "38657aaf-c7a4-4a04-9321-bb750c2e67b5" ],
  "routeDefinitions" : [ {
    "id" : null,
    "camelRouteId" : "route-1",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "ebbf8a78-b256-4c6d-bc3f-0d6e0a09f683",
      "description" : "getUsers",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getUsers",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users&method=get&operationName=getUsers&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "32618296-4e9f-4fa9-9ff1-9f7972a38dd5",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "004b52f7-c2ca-4c18-97ea-742713c977f6",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "7275378c-52c8-41cb-844c-eb7dd88aa75e",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "b48b3802-455b-45d9-9af7-a544e5847aea"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "d6420557-5d20-4664-8fe0-b5e472139061",
      "description" : "SQL Get Users",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getusers-sql-1')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getusers-sql-1')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5c5cbb8c-720c-45b7-82bd-ff21d78abd6f",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean(\"setResponseMetadata\").bean(\"renderResponse\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean(\"setResponseMetadata\").bean(\"renderResponse\")"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "bdb422e4-a382-4b4f-bae7-9d9d22ebf718",
      "description" : "getCurrentUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getCurrentUser",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me&method=get&operationName=getCurrentUser&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e40202d3-8b46-4dcc-a26f-14cf577bab0f",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "46321181-1175-458a-8e9b-25135d2640a6",
      "description" : "me.get.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "api.user.me.get.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.me.get.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "6936d36e-f34f-490b-9bd6-e8ef655e6f06",
      "description" : "UUID Present?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "6092fc07-cbeb-4a2b-b74e-073513b77695",
          "description" : "Set AgencyID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Header",
              "propertyName" : "agencyId",
              "propertyValue" : "x-agency-id",
              "uuid" : "ab91ce5a-5a8d-417a-8aa2-40fe6718f3f9"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "936f5d4c-676d-4815-b06b-8ee7ffadd457",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "423a55f0-d914-4821-9701-1a6d8a59daa6",
          "description" : "SQL Get Current User",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getcurruser-sql-1')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}').id('log-getcurruser-sql-1')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")"
        }, {
          "name" : "messageFilter",
          "nodeId" : "a78b65b6-ba89-418b-b1c8-f3ae49ade37d",
          "description" : "",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "a2712005-584a-42c9-a321-dbd3fa6b4443",
              "description" : "Set User",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "user",
                  "propertyValue" : "${body}",
                  "uuid" : "d73f4d62-05e6-44c6-b91a-07f8ff82e3e0"
                }, {
                  "language" : "Constant",
                  "propertyName" : "sqlOperation",
                  "propertyValue" : "getAgencies",
                  "uuid" : "43029bbd-8e1d-4e4c-b84d-676ddf664630"
                }, {
                  "language" : "Simple",
                  "propertyName" : "fields",
                  "propertyValue" : "default_agency",
                  "uuid" : "624fe215-b508-4633-83b4-86ff0beb3524"
                }, {
                  "language" : "Simple",
                  "propertyName" : "environment",
                  "propertyValue" : "{{convey.web.environment}}",
                  "uuid" : "5d332558-5f3c-402d-a242-46127adde595"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?user=${body}&sqlOperation=getAgencies&fields=default_agency&environment={{convey.web.environment}}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "23feff5f-b187-49bf-9933-c272f4728458",
              "description" : "SQL Get User Agencies",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".to(\"velocity:user_agencies.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}').id('log-getcurruser-sql-2')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.to(\"velocity:user_agencies.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}').id('log-getcurruser-sql-2')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
            }, {
              "name" : "setProperties",
              "nodeId" : "ea383662-d65f-4961-bb37-d94a6a4b9eb7",
              "description" : "Set User Agencies",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "userAgencies",
                  "propertyValue" : "${body}",
                  "uuid" : "810c8d7d-df94-4f60-b5fd-ecf9077b0d7a"
                }, {
                  "language" : "Constant",
                  "propertyName" : "settingsScope",
                  "propertyValue" : "user",
                  "uuid" : "c845691c-6bcf-45dd-81ab-3db12d6f959b"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?userAgencies=${body}&settingsScope=user&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "92dbb743-a87e-4b4f-ac1b-544d868e0b34",
              "description" : "SQL Get User Settings",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".to(\"velocity:settings.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}').id('log-getuser-settings-sql-3')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
                "name" : "dslProcessor",
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "userAgencies",
                  "propertyValue" : "${body}",
                  "uuid" : "810c8d7d-df94-4f60-b5fd-ecf9077b0d7a"
                }, {
                  "language" : "",
                  "propertyName" : "",
                  "propertyValue" : "",
                  "uuid" : "2459a70d-af3b-45bf-9318-084f394383cf"
                } ],
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?userAgencies=${body}&dsl=.to(\"velocity:settings.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}').id('log-getuser-settings-sql-3')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
            }, {
              "name" : "process",
              "nodeId" : "c9e81e61-9472-4b6c-b5e8-15b3807a32c0",
              "description" : "Format Response",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "HashMap<String, Object> user = (Map)exchange.getProperty(\"user\");\nArrayList<HashMap<String, Object>> userAgencies = (ArrayList)exchange.getProperty(\"userAgencies\");\nArrayList<HashMap<String, Object>> userSettings = (ArrayList)exchange.getIn().getBody();\n\nuser.put(\"agencies\", userAgencies);\nString xAgencyId = (String)exchange.getProperty(\"agencyId\");\n\ntry {\n\tfor ( HashMap userAgency : userAgencies ) {\n\t\tif (String.valueOf(userAgency.get(\"default_agency\")).equals(\"true\"))\n\t\t\tuser.put(\"default_agency\", userAgency);\n\t\t\n\t\ttry {\n\t\t\tif (xAgencyId != null && xAgencyId.equals(String.valueOf(userAgency.get(\"agency_id\"))) && userAgency.get(\"roles\") != null) {\n\t\t\t\tArrayList<String> userRoles = Arrays.asList(String.valueOf(userAgency.get(\"roles\")).split(\",\"));\n\t\t\t\tuser.put(\"roles\", userRoles);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"Error getting roles\");\n\t\t}\n\t}\n} catch (Exception e) {}\n\nHashMap<String, Object> settings = new HashMap<>();\n\ntry {\n\tfor ( HashMap userSetting : userSettings ) {\n\t\tString setting = String.valueOf(userSetting.get(\"name\"));\n\t\tString value = (String)userSetting.get(\"value\");\n\t\tString namespace = String.valueOf(userSetting.get(\"namespace\"));\n\n\t\tif (value.matches(\"true|false\"))\n\t\t\tsettings.put(setting, Boolean.parseBoolean(value));\n\t\telse\n\t\t\tsettings.put(setting, value);\n\t}\n} catch (Exception e) {}\n\nSystem.out.println(settings);\nuser.put(\"settings\", settings);\n\nexchange.getIn().setBody(user);",
                "import" : "// org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=HashMap<String, Object> user = (Map)exchange.getProperty(\"user\");\nArrayList<HashMap<String, Object>> userAgencies = (ArrayList)exchange.getProperty(\"userAgencies\");\nArrayList<HashMap<String, Object>> userSettings = (ArrayList)exchange.getIn().getBody();\n\nuser.put(\"agencies\", userAgencies);\nString xAgencyId = (String)exchange.getProperty(\"agencyId\");\n\ntry {\n\tfor ( HashMap userAgency : userAgencies ) {\n\t\tif (String.valueOf(userAgency.get(\"default_agency\")).equals(\"true\"))\n\t\t\tuser.put(\"default_agency\", userAgency);\n\t\t\n\t\ttry {\n\t\t\tif (xAgencyId != null && xAgencyId.equals(String.valueOf(userAgency.get(\"agency_id\"))) && userAgency.get(\"roles\") != null) {\n\t\t\t\tArrayList<String> userRoles = Arrays.asList(String.valueOf(userAgency.get(\"roles\")).split(\",\"));\n\t\t\t\tuser.put(\"roles\", userRoles);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println(\"Error getting roles\");\n\t\t}\n\t}\n} catch (Exception e) {}\n\nHashMap<String, Object> settings = new HashMap<>();\n\ntry {\n\tfor ( HashMap userSetting : userSettings ) {\n\t\tString setting = String.valueOf(userSetting.get(\"name\"));\n\t\tString value = (String)userSetting.get(\"value\");\n\t\tString namespace = String.valueOf(userSetting.get(\"namespace\"));\n\n\t\tif (value.matches(\"true|false\"))\n\t\t\tsettings.put(setting, Boolean.parseBoolean(value));\n\t\telse\n\t\t\tsettings.put(setting, value);\n\t}\n} catch (Exception e) {}\n\nSystem.out.println(settings);\nuser.put(\"settings\", settings);\n\nexchange.getIn().setBody(user);&import=// org.apache.camel.Message"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "f1970022-392d-467e-9a31-3c76c73921f0",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "filter",
            "route" : [ {
              "name" : "setHeaders",
              "nodeId" : "b2d1ba03-e789-4612-b05d-7e99d8a2de84",
              "description" : "HTTP404",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "404",
                  "language" : "Constant",
                  "uuid" : "423e5746-c161-47ee-9b23-1e227e7a30ec"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "setProperties",
              "nodeId" : "05bbced2-0a34-4371-a192-92f666948711",
              "description" : "Set Not Found",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "error",
                  "propertyValue" : "User Not Found",
                  "uuid" : "d8c517fd-2e37-48e7-818b-98f8013ac560"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?error=User Not Found&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "86b75203-da00-426c-8311-686d6c0393d6",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            }, {
              "name" : "stop",
              "nodeId" : "e2fd1bdf-bd2e-4e5f-9520-4cc0a9382ca2",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelSqlRowCount} == 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "yes",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "909c0cf0-89f0-4bb5-b4cb-4b0bd192018c",
          "description" : "Set User UUID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Header",
              "propertyName" : "userUuid",
              "propertyValue" : "userUuid",
              "uuid" : "0fbce5ea-e134-4e5e-835c-5fce19c111bd"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?userUuid=userUuid&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "log",
          "nodeId" : "80052e96-a35d-4d46-abb3-6e2906febef6",
          "description" : "get",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "api.user.get",
            "message" : "Setting User UUID: ${exchangeProperty.userUuid}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.get&message=Setting User UUID: ${exchangeProperty.userUuid}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.x-authorized} == true && ${header.userUuid} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "29fdd3c1-0d9f-4621-8ef8-0eae40ab0702",
      "description" : "",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "Exception"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "304c9c4b-5650-44bd-aaf9-6ea08ebbafab",
          "description" : "202.err",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "ERROR",
            "logType" : "EIP",
            "loggerName" : "202.err",
            "message" : "${exception.stacktrace}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=202.err&message=${exception.stacktrace}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "a9327bcf-1665-4065-aa75-2c54ef20f036",
          "description" : "HTTP500",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "500",
              "language" : "Constant",
              "uuid" : "57c6029a-3485-449b-86a4-cf1fdcd41b99"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "4acbe416-fdbc-41d5-84bd-8e4816113c01",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "error",
              "propertyValue" : "An error has occurred trying to process API request. ${exception.message}",
              "uuid" : "2fe30109-dfb6-415e-ab5e-1f3d0d84a632"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=An error has occurred trying to process API request. ${exception.message}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "77e75dbc-73c5-46ba-a2fd-de82b340eabd",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "0368bf9a-dcbb-4d44-a8c9-d9e6f3b9a935",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "43b2116f-86a5-4ad1-8645-68032af5bbf7",
      "description" : "getUserById",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/{userId}",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getUserById",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/{userId}&method=get&operationName=getUserById&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "9e1b092d-77ca-4e2d-910a-f7f4d8e973f0",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "8446725e-380d-45a1-80db-f45b095e7b9d",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "14ebac32-7c43-46e0-b972-3fa168b7fb50",
      "description" : "Set Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userUuid",
          "propertyValue" : "userUuid",
          "uuid" : "079473de-101b-4076-8005-94a713f56dbc"
        }, {
          "language" : "Simple",
          "propertyName" : "x-authorized",
          "propertyValue" : "true",
          "uuid" : "5821ed88-f9b1-4565-93c6-b2f40f703cd0"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "824db64b-0766-44f5-afa3-352b9e1d3e6f"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=userUuid&x-authorized=true&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ba19203a-c85e-4828-a6ce-d736918525e9",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "66821558-bcd7-4cc6-adc8-f991c286b536",
      "description" : "SQL Get User",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:users.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectOne&useMessageBodyForSql=true\")"
    }, {
      "name" : "messageFilter",
      "nodeId" : "8079233f-7933-4038-a4b8-f282c421907b",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "99374980-5916-4e78-a149-1d813b4d9df1",
          "description" : "Get User Response",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "user",
              "propertyValue" : "${body}",
              "uuid" : "5abe3dce-2177-4f58-a6fb-79b11f159bce"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?user=${body}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "ddb09fe7-94ce-41f4-a3bd-6e563898cc3c",
          "description" : "Agency Specified?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "setBody",
              "nodeId" : "a279d4ae-6afb-4005-9f45-f9b19807066d",
              "description" : "Set Response Body",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "${exchangeProperty.user}",
                "language" : "Simple",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.user}&language=Simple&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "c9f126df-a4d7-4175-abc8-b95972b698f5",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "Yes",
            "route" : [ {
              "name" : "log",
              "nodeId" : "d321a4f1-f188-4fb4-9926-d1e7f09b395c",
              "description" : "",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "log",
                "message" : "Getting user roles for agencyID: ${exchangeProperty.agencyId}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=Getting user roles for agencyID: ${exchangeProperty.agencyId}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "direct",
              "nodeId" : "f0fd4621-4f93-4541-9cbb-1802f892a2db",
              "description" : "sqlGetUserRoles",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "sqlGetUserRoles",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=sqlGetUserRoles"
            }, {
              "name" : "process",
              "nodeId" : "8ca25cc5-c118-4d19-8849-68b0c77ed216",
              "description" : "Format Roles",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "HashMap<String, Object> user = (HashMap)exchange.getProperty(\"user\");\nuser.put(\"user_roles\", (List)exchange.getProperty(\"userRolesFlat\"));\nexchange.setProperty(\"user\", user);",
                "import" : "// import org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=HashMap<String, Object> user = (HashMap)exchange.getProperty(\"user\");\nuser.put(\"user_roles\", (List)exchange.getProperty(\"userRolesFlat\"));\nexchange.setProperty(\"user\", user);&import=// import org.apache.camel.Message"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.agencyId} != null && ${exchangeProperty.agencyId} != ''",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "not found",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "3838a422-fb5f-4c67-b566-66db58cbd332",
          "description" : "",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "User Not Found",
              "uuid" : "61bd50c9-15cf-4b49-b8ca-f89d8ba67909"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=User Not Found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "3e299320-5b12-43a5-9283-39e6374d4487",
          "description" : "",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "abfd3d79-16a2-49d0-b614-3255a2427ee4"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "9fa77fc6-81a4-456a-ac5b-b0cd1eac1234",
          "description" : "",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "e4cb2a45-e554-4781-9d73-94cbea708f85",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "be35b376-38a7-4628-866d-dba2f89e0bd3",
      "description" : "createUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "createUser",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users&method=post&operationName=createUser&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "4cffa720-2d67-46a9-bf82-a10605f0bcfd",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "d2259e5d-c0ef-482c-81a7-48207a2e1209",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "822d5e2e-ae10-4738-9ab8-eae5cf79aa36",
      "description" : "202.api.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.create.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.create.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "d7082404-9915-407c-8aaa-5774f4858a47",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "57b06198-ab36-485e-893f-8157c469f159",
      "description" : "Get User Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "federatedId",
          "propertyValue" : "$.federated_id",
          "uuid" : "142170de-0e7f-4ce6-9b9c-7b43fcb0c62e"
        }, {
          "language" : "JsonPath",
          "propertyName" : "fname",
          "propertyValue" : "$.fname",
          "uuid" : "18ad2f12-7c8c-4cde-b024-8554b7c2208b"
        }, {
          "language" : "JsonPath",
          "propertyName" : "lname",
          "propertyValue" : "$.lname",
          "uuid" : "5988de69-7916-4bf2-bf7f-d4cc2633b472"
        }, {
          "language" : "JsonPath",
          "propertyName" : "email",
          "propertyValue" : "$.email",
          "uuid" : "beffceca-c0f8-4610-aeb4-6bfa8ae786ff"
        }, {
          "language" : "JsonPath",
          "propertyName" : "phone",
          "propertyValue" : "$.phone",
          "uuid" : "8e1c0ce4-e124-4b09-bd96-8029666612d1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "sendInvite",
          "propertyValue" : "$.send_invite",
          "uuid" : "1d1d051f-5887-4e47-8fa2-2a00cbb3254c"
        }, {
          "language" : "JsonPath",
          "propertyName" : "operatorId",
          "propertyValue" : "$.operator_id",
          "uuid" : "a9061241-f90a-4fbd-9e32-ea609d01806c"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "386d1857-e49a-4801-953d-c7c04495cc25"
        }, {
          "language" : "JsonPath",
          "propertyName" : "roles",
          "propertyValue" : "$.roles[*].role_id",
          "uuid" : "a2950246-0158-41b1-8848-78f07b633aad"
        }, {
          "language" : "Simple",
          "propertyName" : "environment",
          "propertyValue" : "{{convey.web.environment}}",
          "uuid" : "fd365a98-1856-4bae-849f-1c4163eba1a1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "password",
          "propertyValue" : "$.password",
          "uuid" : "6f793da4-fa97-42c3-a160-42e050226c5b"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?federatedId=$.federated_id&fname=$.fname&lname=$.lname&email=$.email&phone=$.phone&sendInvite=$.send_invite&operatorId=$.operator_id&agencyId=x-agency-id&roles=$.roles[*].role_id&environment={{convey.web.environment}}&password=$.password&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "aa84bc37-08d3-420c-8705-e102442cacdb",
      "description" : "SQL Check Email",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT id AS user_id, federated_id, created_at, updated_at FROM users WHERE ( (email = :#${exchangeProperty.email} AND federated_id = :#${exchangeProperty.federatedId}) OR federated_id = :#${exchangeProperty.federatedId}) AND deleted_at IS NULL?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT id AS user_id, federated_id, created_at, updated_at FROM users WHERE ( (email = :#${exchangeProperty.email} AND federated_id = :#${exchangeProperty.federatedId}) OR federated_id = :#${exchangeProperty.federatedId}) AND deleted_at IS NULL?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "messageRouter",
      "nodeId" : "be3ccc5b-efa6-4af8-b3dd-764ea5ca0345",
      "description" : "Email Exists?",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "1bd5325a-9d9f-44a7-87b8-e3cd2e9db795",
          "description" : "Get User Props",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "userUuid",
              "propertyValue" : "${body[user_id]}",
              "uuid" : "1d34a5da-c75f-46f3-8457-0eaf90676ff6"
            }, {
              "language" : "Simple",
              "propertyName" : "userCreatedAt",
              "propertyValue" : "${body[created_at]}",
              "uuid" : "b625b3ea-9a66-44a2-b13e-662184a2a8d0"
            }, {
              "language" : "Simple",
              "propertyName" : "userUpdatedAt",
              "propertyValue" : "${body[updated_at]}",
              "uuid" : "6de82eec-e086-418d-bae6-b0f17a907334"
            }, {
              "language" : "Constant",
              "propertyName" : "status",
              "propertyValue" : "confirmed",
              "uuid" : "6f9c9a47-ddd6-49e9-95ed-5830fb4fa3d0"
            }, {
              "language" : "Simple",
              "propertyName" : "federatedId",
              "propertyValue" : "${body[federated_id]}",
              "uuid" : "16d10c29-c5a1-47a8-aa1e-2113441d6340"
            }, {
              "language" : "Simple",
              "propertyName" : "userUuid",
              "propertyValue" : "${body[user_id]}",
              "uuid" : "2fd532a5-d525-4443-a389-318ff58af32d"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?userUuid=${body[user_id]}&userCreatedAt=${body[created_at]}&userUpdatedAt=${body[updated_at]}&status=confirmed&federatedId=${body[federated_id]}&userUuid=${body[user_id]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "9f6f5c3c-79d8-452a-a375-db0da47452e6",
          "description" : "SSO User?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "messageFilter",
              "nodeId" : "35a342c2-ae5d-4ef6-91da-faea42facfe4",
              "description" : "AgencyID?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "messageFilter",
                  "nodeId" : "63e941c7-6a00-4d22-b216-bba9d1f87ebc",
                  "description" : "AgencyID?",
                  "properties" : {
                    "_type" : "messageFilter",
                    "active" : true,
                    "camelGroup" : "routing",
                    "name" : "messageFilter",
                    "url" : ""
                  },
                  "_type" : "messageFilter",
                  "branches" : [ {
                    "type" : "route",
                    "label" : "route",
                    "route" : [ {
                      "name" : "messageFilter",
                      "nodeId" : "44f952dc-8069-4300-b121-b2da012704f5",
                      "description" : "Add Roles?",
                      "properties" : {
                        "_type" : "messageFilter",
                        "active" : true,
                        "camelGroup" : "routing",
                        "name" : "messageFilter",
                        "url" : ""
                      },
                      "_type" : "messageFilter",
                      "branches" : [ {
                        "type" : "route",
                        "label" : "route",
                        "route" : [ {
                          "name" : "setHeaders",
                          "nodeId" : "9c4fba84-0ad9-4627-9627-c5e54f4b0337",
                          "description" : "Set Current User",
                          "properties" : {
                            "_type" : "setHeaders",
                            "active" : true,
                            "addNamespaces" : false,
                            "camelGroup" : "core",
                            "headerList" : [ {
                              "headerName" : "userUuid",
                              "headerValue" : "${exchangeProperty.userUuid}",
                              "language" : "Simple",
                              "uuid" : "d86ab201-ab27-4ccb-8ad1-6774c3deb3f8"
                            }, {
                              "headerName" : "agencyId",
                              "headerValue" : "${exchangeProperty.agencyId}",
                              "language" : "Simple",
                              "uuid" : "9cbc1e01-1a98-4508-a77a-59c38870daec"
                            }, {
                              "headerName" : "x-authorized",
                              "headerValue" : "true",
                              "language" : "Simple",
                              "uuid" : "2b813b64-7868-461c-aceb-32a6b38b8710"
                            }, {
                              "headerName" : "x-agency-id",
                              "headerValue" : "${exchangeProperty.agencyId}",
                              "language" : "Simple",
                              "uuid" : "c9c7137f-0c65-4a44-985e-6f46652feda5"
                            } ],
                            "name" : "setHeaders",
                            "namespaces" : [ ],
                            "suppressExceptions" : false,
                            "url" : ""
                          },
                          "_type" : "setHeaders",
                          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                        }, {
                          "name" : "direct",
                          "nodeId" : "010da1ac-32ea-4fc4-8605-dcb1e0d780fe",
                          "description" : "getUserById",
                          "properties" : {
                            "_type" : "direct",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "core",
                            "endpointName" : "getUserById",
                            "name" : "direct",
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "direct",
                          "kameletPropertiesUrl" : "?endpointName=getUserById"
                        }, {
                          "name" : "setBody",
                          "nodeId" : "088195dc-91e8-42db-81fa-6f2a79e10d80",
                          "description" : "Set Response Body",
                          "properties" : {
                            "_type" : "setBody",
                            "active" : true,
                            "addNamespaces" : false,
                            "camelGroup" : "core",
                            "expression" : "$.data",
                            "language" : "JsonPath",
                            "name" : "setBody",
                            "namespaces" : [ ],
                            "suppressExceptions" : false,
                            "url" : ""
                          },
                          "_type" : "setBody",
                          "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
                        }, {
                          "name" : "setHeaders",
                          "nodeId" : "7d87016e-e74d-4bd6-a088-56be4db0beb4",
                          "description" : "HTTP201",
                          "properties" : {
                            "_type" : "setHeaders",
                            "active" : true,
                            "addNamespaces" : false,
                            "camelGroup" : "core",
                            "headerList" : [ {
                              "headerName" : "CamelHttpResponseCode",
                              "headerValue" : "201",
                              "language" : "Constant",
                              "uuid" : "1a0a0e3a-8f74-4241-bf43-c6e219cf34e0"
                            } ],
                            "name" : "setHeaders",
                            "namespaces" : [ ],
                            "suppressExceptions" : false,
                            "url" : ""
                          },
                          "_type" : "setHeaders",
                          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                        }, {
                          "name" : "dslProcessor",
                          "nodeId" : "5fda65d7-a6ff-486e-ab8e-259baba985f0",
                          "description" : "Render Response",
                          "properties" : {
                            "_type" : "dslProcessor",
                            "active" : true,
                            "camelGroup" : "core",
                            "dsl" : ".bean(\"renderResponse\")",
                            "name" : "dslProcessor",
                            "url" : ""
                          },
                          "_type" : "dslProcessor",
                          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
                        }, {
                          "name" : "log",
                          "nodeId" : "cabc1c3d-6d64-4f71-881c-4f4ce82ca3a8",
                          "description" : "out",
                          "properties" : {
                            "_type" : "log",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "component",
                            "level" : "INFO",
                            "logType" : "EIP",
                            "loggerName" : "user.api.create.out",
                            "message" : "(${header.CamelHttpResponseCode}) ${body}",
                            "multiline" : false,
                            "name" : "log",
                            "showAll" : false,
                            "showBody" : true,
                            "showBodyType" : true,
                            "showCaughtException" : false,
                            "showExchangeId" : false,
                            "showHeaders" : false,
                            "showProperties" : false,
                            "showStackTrace" : false,
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "log",
                          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=user.api.create.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                        } ],
                        "properties" : { }
                      }, {
                        "type" : "filter",
                        "label" : "roles != null",
                        "route" : [ {
                          "name" : "log",
                          "nodeId" : "2e2ac135-95e6-41fc-970d-be25ed7490b3",
                          "description" : "202.api.create.roles",
                          "properties" : {
                            "_type" : "log",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "component",
                            "level" : "INFO",
                            "logType" : "EIP",
                            "loggerName" : "202.api.create.roles",
                            "message" : "Adding roles: ${exchangeProperty.roles}",
                            "multiline" : false,
                            "name" : "log",
                            "showAll" : false,
                            "showBody" : true,
                            "showBodyType" : true,
                            "showCaughtException" : false,
                            "showExchangeId" : false,
                            "showHeaders" : false,
                            "showProperties" : false,
                            "showStackTrace" : false,
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "log",
                          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.create.roles&message=Adding roles: ${exchangeProperty.roles}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                        }, {
                          "name" : "direct",
                          "nodeId" : "bce26e7d-16d3-4404-8eb4-e7e725f1eeb2",
                          "description" : "updateRoles",
                          "properties" : {
                            "_type" : "direct",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "core",
                            "endpointName" : "updateRoles",
                            "name" : "direct",
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "direct",
                          "kameletPropertiesUrl" : "?endpointName=updateRoles"
                        } ],
                        "properties" : {
                          "addNamespaces" : "false",
                          "condition" : "${exchangeProperty.roles} != null",
                          "language" : "Simple",
                          "namespaces" : [ ],
                          "suppressExceptions" : "false"
                        }
                      } ],
                      "kameletPropertiesUrl" : ""
                    } ],
                    "properties" : { }
                  }, {
                    "type" : "filter",
                    "label" : "agencyId != null",
                    "route" : [ {
                      "name" : "log",
                      "nodeId" : "15631794-0039-42ca-91fd-726933e9e767",
                      "description" : "",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "log",
                        "message" : "INSERT INTO user_agencies (user_id, agency_id, federated_id, default_agency, created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), :#${exchangeProperty.federatedId}, TRUE, NOW(), NOW()) ON CONFLICT(user_id, agency_id) DO UPDATE SET updated_at = NOW()",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=INSERT INTO user_agencies (user_id, agency_id, federated_id, default_agency, created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), :#${exchangeProperty.federatedId}, TRUE, NOW(), NOW()) ON CONFLICT(user_id, agency_id) DO UPDATE SET updated_at = NOW()&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "messagingEndpoint",
                      "nodeId" : "41b817af-513c-4999-afd6-c0b041eafa0a",
                      "description" : "SQL Set Default Agency",
                      "properties" : {
                        "_type" : "messagingEndpoint",
                        "active" : true,
                        "camelGroup" : "core",
                        "name" : "messagingEndpoint",
                        "toDynamicEndpoint" : false,
                        "uri" : "sql:INSERT INTO user_agencies (user_id, agency_id, federated_id, default_agency, created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), :#${exchangeProperty.federatedId}, TRUE, NOW(), NOW()) ON CONFLICT(user_id, agency_id) DO UPDATE SET updated_at = NOW()?dataSource=#dsPostgres",
                        "url" : ""
                      },
                      "_type" : "messagingEndpoint",
                      "kameletPropertiesUrl" : "?uri=sql:INSERT INTO user_agencies (user_id, agency_id, federated_id, default_agency, created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), :#${exchangeProperty.federatedId}, TRUE, NOW(), NOW()) ON CONFLICT(user_id, agency_id) DO UPDATE SET updated_at = NOW()?dataSource=#dsPostgres"
                    } ],
                    "properties" : {
                      "addNamespaces" : "false",
                      "condition" : "${exchangeProperty.agencyId} != null",
                      "language" : "Simple",
                      "namespaces" : [ ],
                      "suppressExceptions" : "false"
                    }
                  } ],
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : { }
              }, {
                "type" : "filter",
                "label" : "agencyId == null",
                "route" : [ {
                  "name" : "process",
                  "nodeId" : "3f3b19a0-eabe-44b8-88ac-4ca014f5fce1",
                  "description" : "Get Email Domain ",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "String email = (String)exchange.getProperty(\"email\");\nString domain = (String)email.substring(email.indexOf(\"@\")+1);\nexchange.setProperty(\"domain\", domain);\nSystem.out.println(\"Checking domain: \" + domain);",
                    "import" : "// org.apache.camel.Message",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?code=String email = (String)exchange.getProperty(\"email\");\nString domain = (String)email.substring(email.indexOf(\"@\")+1);\nexchange.setProperty(\"domain\", domain);\nSystem.out.println(\"Checking domain: \" + domain);&import=// org.apache.camel.Message"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "473360a2-a203-404c-8c70-2b1f0a8e1f30",
                  "description" : "SQL Get Agency",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:SELECT a.id FROM agencies a WHERE a.agency_domain = :#${exchangeProperty.domain} AND environment = :#${exchangeProperty.environment}?dataSource=#dsPostgres&OutputType=SelectOne",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:SELECT a.id FROM agencies a WHERE a.agency_domain = :#${exchangeProperty.domain} AND environment = :#${exchangeProperty.environment}?dataSource=#dsPostgres&OutputType=SelectOne"
                }, {
                  "name" : "setProperties",
                  "nodeId" : "b454efe0-1e8a-440e-a319-a55769ac1a37",
                  "description" : "Get Agency ID",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Simple",
                      "propertyName" : "agencyId",
                      "propertyValue" : "${body}",
                      "uuid" : "c0b8bfd0-75c8-4c67-8911-433e0dd4d7ff"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?agencyId=${body}&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "log",
                  "nodeId" : "2afd22c4-2dcd-4930-a493-f900fc829eb7",
                  "description" : "",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "log",
                    "message" : "Found agency: ${exchangeProperty.agencyId}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=Found agency: ${exchangeProperty.agencyId}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.agencyId} == null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "federatedId == null",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "8c8a05fb-3287-449e-a8dc-32b41d069c99",
              "description" : "Set Auth0 Operation",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "auth0RequestedOperation",
                  "propertyValue" : "createUser",
                  "uuid" : "6ad37ea9-6b69-44b3-98c6-8df61f2d1474"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?auth0RequestedOperation=createUser&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "setBody",
              "nodeId" : "705b5d68-4bfe-48f4-988f-436d9ad9f4db",
              "description" : "Set JSON Request",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "{\"email\": \"${exchangeProperty.email}\", \"first_name\": \"${exchangeProperty.fname}\", \"last_name\": \"${exchangeProperty.lname}\", \"user_id\": \"${exchangeProperty.userUuid}\"}",
                "language" : "Simple",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"email\": \"${exchangeProperty.email}\", \"first_name\": \"${exchangeProperty.fname}\", \"last_name\": \"${exchangeProperty.lname}\", \"user_id\": \"${exchangeProperty.userUuid}\"}&language=Simple&suppressExceptions=false"
            }, {
              "name" : "process",
              "nodeId" : "212126b2-7d26-424e-bd87-50d1b8a1e376",
              "description" : "Set JSON Request",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, String> request = new HashMap<String, String>() {{\n\tput(\"email\", (String)exchange.getProperty(\"email\"));\n\tput(\"first_name\", (String)exchange.getProperty(\"fname\"));\n\tput(\"last_name\", (String)exchange.getProperty(\"lname\"));\n\tput(\"user_id\", (String)exchange.getProperty(\"userUuid\"));\n\tput(\"password\", (String)exchange.getProperty(\"password\"));\t\n}};\n\nexchange.getIn().setBody(mapper.writeValueAsString(request));",
                "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, String> request = new HashMap<String, String>() {{\n\tput(\"email\", (String)exchange.getProperty(\"email\"));\n\tput(\"first_name\", (String)exchange.getProperty(\"fname\"));\n\tput(\"last_name\", (String)exchange.getProperty(\"lname\"));\n\tput(\"user_id\", (String)exchange.getProperty(\"userUuid\"));\n\tput(\"password\", (String)exchange.getProperty(\"password\"));\t\n}};\n\nexchange.getIn().setBody(mapper.writeValueAsString(request));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
            }, {
              "name" : "exchangePattern",
              "nodeId" : "b2fe8a35-b6b1-4e60-ba99-733d47d79b15",
              "description" : "InOut",
              "properties" : {
                "_type" : "exchangePattern",
                "active" : true,
                "camelGroup" : "core",
                "exchangePattern" : "InOut",
                "name" : "exchangePattern",
                "url" : ""
              },
              "_type" : "exchangePattern",
              "kameletPropertiesUrl" : "?exchangePattern=InOut"
            }, {
              "name" : "log",
              "nodeId" : "5cb642b0-a161-4035-bbea-f02aa0fc5328",
              "description" : "202.api.create.auth0.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "OFF",
                "logType" : "EIP",
                "loggerName" : "log",
                "message" : "202.api.create.auth0.in",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=OFF&logType=EIP&loggerName=log&message=202.api.create.auth0.in&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "seda",
              "nodeId" : "6b1a2566-9fc7-4d9d-917a-bb600d546d71",
              "description" : "auth0CreateUser",
              "properties" : {
                "_type" : "seda",
                "active" : true,
                "advancedParameters" : [ ],
                "blockWhenFull" : false,
                "camelGroup" : "core",
                "concurrentConsumers" : "1",
                "endpointName" : "auth0Request",
                "limitConcurrentConsumers" : true,
                "multipleConsumers" : false,
                "name" : "seda",
                "pollTimeout" : "1000",
                "size" : "1000",
                "specifyMaximumCapacitySize" : false,
                "timeout" : "10000",
                "toDynamicEndpoint" : false,
                "url" : "",
                "waitForTaskToComplete" : "IfReplyExpected"
              },
              "_type" : "seda",
              "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=auth0Request&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=10000&waitForTaskToComplete=IfReplyExpected"
            }, {
              "name" : "log",
              "nodeId" : "5da8f432-73e5-4859-b023-622aac8187d7",
              "description" : "202.api.create.auth0.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "202.api.create.auth0.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.create.auth0.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "messageFilter",
              "nodeId" : "7063c979-4a7e-4986-a9e1-b415386d4237",
              "description" : "Auth0 OK?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "93b4cbf4-c069-4ace-b8c5-18a6dd45fab2",
                  "description" : "Get Federated ID",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "JsonPath",
                      "propertyName" : "federatedId",
                      "propertyValue" : "$.user_id",
                      "uuid" : "cf857528-0f37-48f7-9d16-768379071be0"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?federatedId=$.user_id&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "cbf8f078-d8ca-48e1-9ab0-aac745ed7b80",
                  "description" : "SQL Set Federated ID",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:UPDATE users SET federated_id = :#${exchangeProperty.federatedId}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:UPDATE users SET federated_id = :#${exchangeProperty.federatedId}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "6fa4ed0c-2b1b-47c1-811f-13ba230784fb",
                  "description" : "SQL Fulfill Invite",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:UPDATE invitations SET fulfilled_at = NOW(), updated_at = NOW() WHERE email = :#${exchangeProperty.email}?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:UPDATE invitations SET fulfilled_at = NOW(), updated_at = NOW() WHERE email = :#${exchangeProperty.email}?dataSource=#dsPostgres"
                } ],
                "properties" : { }
              }, {
                "type" : "filter",
                "label" : "!2XX",
                "route" : [ {
                  "name" : "log",
                  "nodeId" : "b68d57cc-cef8-4bd4-829d-e742c2df49dd",
                  "description" : "user.create.auth0.err",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "WARN",
                    "logType" : "EIP",
                    "loggerName" : "user.create.auth0.err",
                    "message" : "(${header.CamelHttpResponseCode}) ${body}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=user.create.auth0.err&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "setProperties",
                  "nodeId" : "a59103a8-7b3e-481f-a162-980ae1ba276d",
                  "description" : "Set Error",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "JsonPath",
                      "propertyName" : "error",
                      "propertyValue" : "$.error",
                      "uuid" : "d2a1eb36-e582-43b4-bb61-fabfa5810a2d"
                    }, {
                      "language" : "Header",
                      "propertyName" : "CamelHttpResponseCode",
                      "propertyValue" : "CamelHttpResponseCode",
                      "uuid" : "327df1e2-5157-485b-8302-625f2ebbe70a"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?error=$.error&CamelHttpResponseCode=CamelHttpResponseCode&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "43ba2295-a88e-4e8d-9a21-663aa52c8b4d",
                  "description" : "SQL Revert",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:DELETE FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:DELETE FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
                }, {
                  "name" : "direct",
                  "nodeId" : "712f92bb-5e32-47b2-9de2-fd89c7cf6055",
                  "description" : "Render Error",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "renderError",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=renderError"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${header.CamelHttpResponseCode} not in '200,201' ",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.federatedId} == null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "when",
        "label" : "create user",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "9740f50f-3ffc-4c95-9f70-ae6f3c5d0ca3",
          "description" : "SQL Create User",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to(\"sql:classpath:users.insert.sql?dataSource=#dsPostgres\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to(\"sql:classpath:users.insert.sql?dataSource=#dsPostgres\")"
        }, {
          "name" : "setBody",
          "nodeId" : "0a44c95b-64ad-40c3-b1a1-41ff62230c04",
          "description" : "Set New User",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "${body[0]}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=${body[0]}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "3429aac5-e470-4145-920e-1667f76fba1d",
          "description" : "SQL Error",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "filter",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "f12c24d6-a1fd-44ba-b5c1-c30036c05392",
              "description" : "Set Error",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "error",
                  "propertyValue" : "An error occurred creating new user. Please try again",
                  "uuid" : "1973ed73-75c8-4161-84a5-a1adf9d6cccf"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?error=An error occurred creating new user. Please try again&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "direct",
              "nodeId" : "41482efa-fa29-4699-aa0f-6af8aa0fe3bc",
              "description" : "Render Error",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "renderError",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=renderError"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelSqlUpdateCount} == 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6-50cd740d",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "a294d745-3ea7-4c94-a6e7-14c9f96116de",
      "description" : "sendUserInvitation",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/{userUuid}/invite",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "sendUserInvitation",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/{userUuid}/invite&method=post&operationName=sendUserInvitation&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "421797a2-213f-473f-a0b6-91bfc4265d6c",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "70c17d7f-d5ca-4c81-b28a-b5148205fa56",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f6a22ba5-4c7b-4c23-8fa9-b368ef1d2fb4",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "f3b4be0b-d896-4f75-a070-5ad76dde22c3",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userUuid",
          "propertyValue" : "userUuid",
          "uuid" : "f3671084-50d6-4e60-a1df-9bf01d458ead"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "cd441418-4b8d-403a-8286-291b08e7d1ab"
        }, {
          "language" : "Simple",
          "propertyName" : "sendGridApiKey",
          "propertyValue" : "{{convey.sendgrid.apikey}}",
          "uuid" : "2247c715-312a-4601-9d29-e32073096438"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=userUuid&agencyId=x-agency-id&sendGridApiKey={{convey.sendgrid.apikey}}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "fb803cf4-bda0-4a55-ad3b-9616ec681625",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "e36597df-c812-407b-8402-6fc38beeeef3",
      "description" : "SQL Get User",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT u.fname, u.lname, u.federated_id, u.last_login, u.email, u.phone, u.operator_id, string_agg(a.agency_name, \\'\\') AS agency_name FROM users u LEFT JOIN user_agencies ua ON u.id = ua.user_id LEFT JOIN ( SELECT id, agency_name FROM agencies ) a on ua.agency_id = a.id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) GROUP BY u.id?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT u.fname, u.lname, u.federated_id, u.last_login, u.email, u.phone, u.operator_id, string_agg(a.agency_name, \\'\\') AS agency_name FROM users u LEFT JOIN user_agencies ua ON u.id = ua.user_id LEFT JOIN ( SELECT id, agency_name FROM agencies ) a on ua.agency_id = a.id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) GROUP BY u.id?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "51ebbbc1-7368-48aa-ae2d-76099368236b",
      "description" : "Get User",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "fname",
          "propertyValue" : "${body[fname]}",
          "uuid" : "1cc3e1f9-fec6-4830-87a0-7cad8762280e"
        }, {
          "language" : "Simple",
          "propertyName" : "lname",
          "propertyValue" : "${body[lname]}",
          "uuid" : "8a7cdc4d-4455-4dbe-8cb5-2b25a0bd41a3"
        }, {
          "language" : "Simple",
          "propertyName" : "email",
          "propertyValue" : "${body[email]}",
          "uuid" : "cc38e432-8590-41b2-8f02-cddd5f2ac27e"
        }, {
          "language" : "Simple",
          "propertyName" : "phone",
          "propertyValue" : "${body[phone]}",
          "uuid" : "74478ec9-3da8-45f0-9417-cb8ca30f0c51"
        }, {
          "language" : "Simple",
          "propertyName" : "operatorId",
          "propertyValue" : "${body[operator_id]}",
          "uuid" : "b1d16f0c-d624-41f8-b8e9-fcdf2506d1e0"
        }, {
          "language" : "Simple",
          "propertyName" : "lastLogin",
          "propertyValue" : "${body[last_login]}",
          "uuid" : "599cda76-b60e-4ba6-8532-c1ac98293301"
        }, {
          "language" : "Simple",
          "propertyName" : "agencyName",
          "propertyValue" : "${body[agency_name]}",
          "uuid" : "0d1740b8-ffb0-4618-adb8-42cf3f8bbd33"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?fname=${body[fname]}&lname=${body[lname]}&email=${body[email]}&phone=${body[phone]}&operatorId=${body[operator_id]}&lastLogin=${body[last_login]}&agencyName=${body[agency_name]}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "457dd5f2-bff2-4689-8ff9-f1f251ee4b52",
      "description" : "User Exists?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messageRouter",
          "nodeId" : "760e5fe3-dca9-4307-a67d-420064dd0938",
          "description" : "New User?",
          "properties" : {
            "_type" : "messageRouter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageRouter",
            "url" : ""
          },
          "_type" : "messageRouter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "dslProcessor",
              "nodeId" : "a3f6b7e4-bb02-4f7e-9620-978e7290605e",
              "description" : "Render HTML Template",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".to(\"velocity:user.invite.html.vm?allowContextMapAll=true\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.to(\"velocity:user.invite.html.vm?allowContextMapAll=true\")"
            }, {
              "name" : "setProperties",
              "nodeId" : "22692305-7b9e-402d-9907-733925f36a33",
              "description" : "Store HTML Email",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "emailBodyHtml",
                  "propertyValue" : "${body}",
                  "uuid" : "fbf88139-e5cd-4cf6-9426-5b3aaed41dd8"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?emailBodyHtml=${body}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "f2ff3a7c-6199-49af-978e-3feacb0114cb",
              "description" : "Render Text Email",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".to(\"velocity:user.invite.txt.vm?allowContextMapAll=true\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.to(\"velocity:user.invite.txt.vm?allowContextMapAll=true\")"
            }, {
              "name" : "setProperties",
              "nodeId" : "1b9e24cd-b79f-43f1-a4eb-fd7e078bda32",
              "description" : "Store Text Email",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "emailBodyText",
                  "propertyValue" : "${body}",
                  "uuid" : "73645b00-da1c-4a01-9368-7f5f50748697"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?emailBodyText=${body}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "dc7b919d-f6d9-4f10-a359-5ffd5fb0ea17",
              "description" : "Send Email",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean('sendEmail')",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean('sendEmail')"
            }, {
              "name" : "messageRouter",
              "nodeId" : "b1651685-fa5c-4360-9b43-b238a2f5b5e2",
              "description" : "",
              "properties" : {
                "_type" : "messageRouter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageRouter",
                "url" : ""
              },
              "_type" : "messageRouter",
              "branches" : [ {
                "type" : "when",
                "label" : "error",
                "route" : [ {
                  "name" : "setHeaders",
                  "nodeId" : "04bde1be-0f33-46d5-995f-9bb5309073c5",
                  "description" : "HTTP400",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "404",
                      "language" : "Constant",
                      "uuid" : "5d2dffd6-dea6-4775-9878-d263abb05e81"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "setProperties",
                  "nodeId" : "7b727f42-9aaf-4d4f-8e60-2f6cf6387090",
                  "description" : "Set Error",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Constant",
                      "propertyName" : "error",
                      "propertyValue" : "An error has occurred.",
                      "uuid" : "54a5fb89-fb13-4e29-8d32-c3de6a15821f"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?error=An error has occurred.&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "setBody",
                  "nodeId" : "f389da02-8b98-4bd8-982a-55fdf2962d4f",
                  "description" : "Clear Body",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "constant('')",
                    "language" : "GroovyDsl",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.emailSent} > 202",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              }, {
                "type" : "otherwise",
                "label" : "otherwise",
                "route" : [ {
                  "name" : "setBody",
                  "nodeId" : "72bc8bef-dc8e-4f51-a5a0-68ae15debfdf",
                  "description" : "Clear Body",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "constant('')",
                    "language" : "GroovyDsl",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "0aed4acd-a9de-48ab-a196-46aa637e20c4",
                  "description" : "HTTP204",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "204",
                      "language" : "Constant",
                      "uuid" : "0ab7c869-1419-4db3-9531-bee2f0db6c24"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                } ],
                "properties" : { }
              }, {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "messagingEndpoint",
                  "nodeId" : "bdad16b9-90fe-473b-ab63-56a170e7c9cf",
                  "description" : "SQL Update Token",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:UPDATE users SET token = :#${exchangeProperty.token}, token_created_at = NOW(), token_expires_at = to_timestamp(:#${exchangeProperty.expiresAt}) WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:UPDATE users SET token = :#${exchangeProperty.token}, token_created_at = NOW(), token_expires_at = to_timestamp(:#${exchangeProperty.expiresAt}) WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "3a53bcb6-2882-4232-9e25-94ee932699a2",
                  "description" : "Render Response",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".bean('renderResponse')",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "when",
            "label" : "new user",
            "route" : [ {
              "name" : "direct",
              "nodeId" : "0c13994c-c742-4dc1-9e83-da040aa149c7",
              "description" : "generateMagicToken",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "generateMagicToken",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=generateMagicToken"
            }, {
              "name" : "setProperties",
              "nodeId" : "3835f21c-7d07-4510-b478-9823fa1243f3",
              "description" : "Set Mail Props",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "JsonPath",
                  "propertyName" : "token",
                  "propertyValue" : "$.data.token",
                  "uuid" : "cb136441-b878-4360-95bd-05bf72689a7a"
                }, {
                  "language" : "Simple",
                  "propertyName" : "inviteEmailUrl",
                  "propertyValue" : "https://{{convey.web.hostname}}/t/${exchangeProperty.token}",
                  "uuid" : "bdcbceb2-69f6-4e84-a19f-90c2d2f49380"
                }, {
                  "language" : "Simple",
                  "propertyName" : "emailRecipient",
                  "propertyValue" : "${exchangeProperty.email}",
                  "uuid" : "ddedbf6c-9269-4afd-a514-7271c01e93a4"
                }, {
                  "language" : "Constant",
                  "propertyName" : "emailSubject",
                  "propertyValue" : "Convey911 - Invitation to set up your account",
                  "uuid" : "0da73b37-8713-4452-8039-27e341b0c5c5"
                }, {
                  "language" : "JsonPath",
                  "propertyName" : "expiresAt",
                  "propertyValue" : "$.data.expires_at",
                  "uuid" : "5d170eaf-4bda-4054-8e76-0e258f784e62"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?token=$.data.token&inviteEmailUrl=https://{{convey.web.hostname}}/t/${exchangeProperty.token}&emailRecipient=${exchangeProperty.email}&emailSubject=Convey911 - Invitation to set up your account&expiresAt=$.data.expires_at&addNamespaces=false&suppressExceptions=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.lastLogin} == null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          }, {
            "type" : "otherwise",
            "label" : "existing user",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "462ff717-820f-4f10-94e9-6407287ff711",
              "description" : "Set Mail Props",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "emailRecipient",
                  "propertyValue" : "${exchangeProperty.email}",
                  "uuid" : "0b833339-87fb-42c3-b3b7-413edf300d1e"
                }, {
                  "language" : "Constant",
                  "propertyName" : "emailSubject",
                  "propertyValue" : "Convey911 - You've been added to an agency!",
                  "uuid" : "e088d616-3735-4fd2-b0bb-d52d5cb550e5"
                }, {
                  "language" : "Simple",
                  "propertyName" : "loginUrl",
                  "propertyValue" : "{{convey.web.hostname}}",
                  "uuid" : "f3e2d91a-0564-4b0e-8ab4-bc60f4791aa3"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?emailRecipient=${exchangeProperty.email}&emailSubject=Convey911 - You've been added to an agency!&loginUrl={{convey.web.hostname}}&addNamespaces=false&suppressExceptions=false"
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "404",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "4722f406-53b4-4d0c-b5ba-5d237972f80f",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "5416859c-cf81-48b1-a0c2-c9a7e1f439fb"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "3fa6f7c4-40de-46f6-821f-c7bde8277ca7",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "User not found.",
              "uuid" : "5fa85bd4-1921-4dda-b156-10116e4da43d"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=User not found.&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "f3f8bffa-f0ca-460d-a963-570acc6627d7",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "7d4a8dbe-8c49-4ed6-80b1-b20bf9e5c2b1",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-9",
    "enabled" : true,
    "routeId" : 7,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "ee95f0e3-8b6d-45bf-bf7c-b0bbd72fa138",
      "description" : "renderError",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "renderError",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=renderError"
    }, {
      "name" : "messageFilter",
      "nodeId" : "cad21f48-a16f-417a-aaff-12160c17418d",
      "description" : "Status Code?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "92d82d14-c3bf-4b34-be86-ad97eb591611",
          "description" : "Set Response Code",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "${exchangeProperty.CamelHttpResponseCode}",
              "language" : "Simple",
              "uuid" : "e80820a6-ad26-4f63-8828-2f0a525776ae"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "f3f6ccf2-c9fc-4014-bf7e-8ee43c3f89ec",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "stop",
          "nodeId" : "b488a516-dbdd-40cf-a1e6-d58e8db89a3f",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "!ResponseCode",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "4ad41939-2226-4e4a-bc01-5bcc0cc275c6",
          "description" : "Set Response Code",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "500",
              "uuid" : "0bfb4dbe-c9c5-48b8-86e2-41d3cf51d545"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?CamelHttpResponseCode=500&addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.CamelHttpResponseCode} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-10",
    "enabled" : true,
    "routeId" : 8,
    "route" : [ {
      "name" : "deleteRequest",
      "nodeId" : "5777d478-fef0-4389-92fc-905f6bc03686",
      "description" : "deleteUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/{userUuid}",
        "method" : "delete",
        "name" : "deleteRequest",
        "operationName" : "deleteUser",
        "produces" : "application/json",
        "requestmethod" : "DELETE",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/{userUuid}&method=delete&operationName=deleteUser&produces=application/json&requestmethod=DELETE"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "a5d4e58f-f679-42cf-b8b8-d4ee7e2af7ca",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "554b8437-0f02-4f8f-b1ef-dcdb5838722f",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "e2cc1773-f6e0-4ab5-9e77-b62f80e6b7a5",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userUuid",
          "propertyValue" : "userUuid",
          "uuid" : "5d05a8dd-6363-4be1-90a6-304980fdf08c"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "181bb35a-cd13-4d90-bfb3-84a8b40530ad"
        }, {
          "language" : "Header",
          "propertyName" : "hardDelete",
          "propertyValue" : "hardDelete",
          "uuid" : "c6df865c-92d7-48f4-8821-cb6908667acd"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=userUuid&agencyId=x-agency-id&hardDelete=hardDelete&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "27d1c8a9-e8d1-4ddf-abaa-a90eda2f918b",
      "description" : "delete.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "api.user.delete.in",
        "message" : "Removing user userUuid:${exchangeProperty.userUuid} agencyId:${exchangeProperty.agencyId} hardDelete:${exchangeProperty.hardDelete}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.delete.in&message=Removing user userUuid:${exchangeProperty.userUuid} agencyId:${exchangeProperty.agencyId} hardDelete:${exchangeProperty.hardDelete}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageRouter",
      "nodeId" : "559ace75-1950-4b0a-96cc-e373cc7d34a2",
      "description" : "Hard Delete?",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "f49af6db-8e30-41bf-b6bb-0ce1a98f94b1",
          "description" : "HTTP204",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "204",
              "language" : "Constant",
              "uuid" : "ebddb080-5abe-492c-b8d8-5ad9fe7fa8f9"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "8a126274-3545-41b2-bca9-d0caa02a79f4",
          "description" : "Clear Body",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "constant('')",
            "language" : "GroovyDsl",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "c0f8f0d9-ffb7-4654-9f03-2f349e408999",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      }, {
        "type" : "when",
        "label" : "hardDelete==true",
        "route" : [ {
          "name" : "log",
          "nodeId" : "ffa5be22-03bd-4ab5-878e-a3d0c7ccd3bc",
          "description" : "delete.sql.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "api.user.delete.sql.in",
            "message" : "Performing Hard Delete",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.delete.sql.in&message=Performing Hard Delete&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "messagingEndpoint",
          "nodeId" : "dac05df4-db04-4484-83af-b81a29bf4c5d",
          "description" : "Remove Full User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:DELETE FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:DELETE FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.hardDelete} == true || ${exchangeProperty.hardDelete} == 1",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "log",
          "nodeId" : "300cf6b4-4a0b-420c-ac0b-1fd4e4e3e9ac",
          "description" : "delete.sql.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "delete.sql.in",
            "message" : "Performing Agency Delete",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=delete.sql.in&message=Performing Agency Delete&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "messagingEndpoint",
          "nodeId" : "1bec27f6-dbe4-4c36-b9e5-84db5eb87ffc",
          "description" : "Remove Agency User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:DELETE FROM user_agencies WHERE user_id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:DELETE FROM user_agencies WHERE user_id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-11",
    "enabled" : true,
    "routeId" : 9,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "e7584e36-c7aa-45d0-8c61-2ee7a56ff916",
      "description" : "updateRoles",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "updateRoles",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=updateRoles"
    }, {
      "name" : "direct",
      "nodeId" : "241f9360-daf0-4a05-9928-debca6ff5d43",
      "description" : "sqlGetUserRoles",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserRoles",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserRoles"
    }, {
      "name" : "process",
      "nodeId" : "c9c11fc5-6d55-4d47-aafd-d02a3548e59a",
      "description" : "Parse / Stringify",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper mapper = new ObjectMapper();\n\n// Get current roles (roles before)\nList<String> rolesBefore = new ArrayList<String>();\nArrayList<HashMap<String, String>> currentRoles = (ArrayList)exchange.getProperty(\"userRoles\");\nif (currentRoles) {\n\tfor (int i = 0; i < currentRoles.size(); i++) {\n\t\tHashMap<String, String> role = currentRoles.get(i);\n\t\trolesBefore.add(role.get(\"role_id\"));\n\t}\n}\n\n// Get new roles, to be updated\nList<String> rolesAfter = new ArrayList<String>();\nList<String> rolesRequested = (List)exchange.getProperty(\"roles\");\nif (rolesRequested) {\n\tfor (int i = 0; i < rolesRequested.size(); i++) \n\t\trolesAfter.add(rolesRequested.get(i));\n}\n\n// Determine which roles need to be added\nif (rolesAfter && rolesAfter.size() > 0) {\n\tList<String> rolesToAdd = new ArrayList<String>();\n\t\n\tfor (String role : rolesAfter) {\n\t\tif (rolesBefore.contains(role) == false)\n\t\t\trolesToAdd.push(role);\n\t}\n\t\n\tif (rolesToAdd.size() > 0) {\n\t\texchange.setProperty(\"rolesToAdd\", mapper.writeValueAsString(rolesToAdd));\n\t\texchange.setProperty(\"rolesToAddPojo\", rolesToAdd);\n\t}\n}\n\n// Determine which roles need to be removed\nif (rolesBefore && rolesBefore.size() > 0) {\n\tList<String> rolesToRemove = new ArrayList<String>();\n\t\n\tfor (String role : rolesBefore) {\n\t\tif (rolesAfter.contains(role) == false)\n\t\t\trolesToRemove.push(role);\n\t}\n\t\n\tif (rolesToRemove.size() > 0) {\n\t\texchange.setProperty(\"rolesToRemove\", mapper.writeValueAsString(rolesToRemove));\n\t\texchange.setProperty(\"rolesToRemovePojo\", rolesToRemove);\n\t}\n}\n\n",
        "import" : "",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\n// Get current roles (roles before)\nList<String> rolesBefore = new ArrayList<String>();\nArrayList<HashMap<String, String>> currentRoles = (ArrayList)exchange.getProperty(\"userRoles\");\nif (currentRoles) {\n\tfor (int i = 0; i < currentRoles.size(); i++) {\n\t\tHashMap<String, String> role = currentRoles.get(i);\n\t\trolesBefore.add(role.get(\"role_id\"));\n\t}\n}\n\n// Get new roles, to be updated\nList<String> rolesAfter = new ArrayList<String>();\nList<String> rolesRequested = (List)exchange.getProperty(\"roles\");\nif (rolesRequested) {\n\tfor (int i = 0; i < rolesRequested.size(); i++) \n\t\trolesAfter.add(rolesRequested.get(i));\n}\n\n// Determine which roles need to be added\nif (rolesAfter && rolesAfter.size() > 0) {\n\tList<String> rolesToAdd = new ArrayList<String>();\n\t\n\tfor (String role : rolesAfter) {\n\t\tif (rolesBefore.contains(role) == false)\n\t\t\trolesToAdd.push(role);\n\t}\n\t\n\tif (rolesToAdd.size() > 0) {\n\t\texchange.setProperty(\"rolesToAdd\", mapper.writeValueAsString(rolesToAdd));\n\t\texchange.setProperty(\"rolesToAddPojo\", rolesToAdd);\n\t}\n}\n\n// Determine which roles need to be removed\nif (rolesBefore && rolesBefore.size() > 0) {\n\tList<String> rolesToRemove = new ArrayList<String>();\n\t\n\tfor (String role : rolesBefore) {\n\t\tif (rolesAfter.contains(role) == false)\n\t\t\trolesToRemove.push(role);\n\t}\n\t\n\tif (rolesToRemove.size() > 0) {\n\t\texchange.setProperty(\"rolesToRemove\", mapper.writeValueAsString(rolesToRemove));\n\t\texchange.setProperty(\"rolesToRemovePojo\", rolesToRemove);\n\t}\n}\n\n"
    }, {
      "name" : "messageFilter",
      "nodeId" : "6de031ef-0f15-4951-aefc-e76881fca3ad",
      "description" : "rolesToAdd?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messageFilter",
          "nodeId" : "0af16b5c-5654-4d38-b9f0-ac303e3b70b5",
          "description" : "rolesToRemove?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "rolesToRemove",
            "route" : [ {
              "name" : "setBody",
              "nodeId" : "853aab36-c9f7-483c-9582-1c60a34f972e",
              "description" : "Remove Roles",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "{\"user_id\": \"${exchangeProperty.federatedId}\", \"roles\": ${exchangeProperty.rolesToRemove}}",
                "language" : "Simple",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"user_id\": \"${exchangeProperty.federatedId}\", \"roles\": ${exchangeProperty.rolesToRemove}}&language=Simple&suppressExceptions=false"
            }, {
              "name" : "setProperties",
              "nodeId" : "bcdd01a9-bbc2-4046-b676-a4e876b93348",
              "description" : "Set Operation",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Constant",
                  "propertyName" : "auth0RequestedOperation",
                  "propertyValue" : "removeUserRoles",
                  "uuid" : "f3e6be07-fa9b-42cb-98e1-f7cfd6836867"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?auth0RequestedOperation=removeUserRoles&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "seda",
              "nodeId" : "1469513c-ce23-4e2c-ba2d-4a72a1b3b85c",
              "description" : "auth0Request",
              "properties" : {
                "_type" : "seda",
                "active" : true,
                "advancedParameters" : [ ],
                "blockWhenFull" : false,
                "camelGroup" : "core",
                "concurrentConsumers" : "1",
                "endpointName" : "auth0Request",
                "limitConcurrentConsumers" : true,
                "multipleConsumers" : false,
                "name" : "seda",
                "pollTimeout" : "1000",
                "size" : "1000",
                "specifyMaximumCapacitySize" : false,
                "timeout" : "10000",
                "toDynamicEndpoint" : false,
                "url" : "",
                "waitForTaskToComplete" : "IfReplyExpected"
              },
              "_type" : "seda",
              "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=auth0Request&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=10000&waitForTaskToComplete=IfReplyExpected"
            }, {
              "name" : "splitter",
              "nodeId" : "ea0d43e9-2dfb-40b3-b2ab-aaa4133fdabc",
              "description" : "each role",
              "properties" : {
                "_type" : "splitter",
                "active" : true,
                "addNamespaces" : false,
                "aggregationStrategy" : "",
                "camelGroup" : "routing",
                "expression" : "${exchangeProperty.rolesToRemovePojo}",
                "language" : "Simple",
                "name" : "splitter",
                "namespaces" : [ ],
                "parallelProcessing" : false,
                "shareUnitOfWork" : false,
                "stopOnException" : false,
                "streaming" : false,
                "suppressExceptions" : false,
                "timeout" : "0",
                "token" : ",",
                "tokenize" : false,
                "url" : "",
                "useAggregationStrategy" : false
              },
              "_type" : "splitter",
              "branches" : [ {
                "type" : "split",
                "label" : "split",
                "route" : [ {
                  "name" : "messagingEndpoint",
                  "nodeId" : "c2e292ea-dc5e-4e5b-bcc1-4b9a6a76944d",
                  "description" : "SQL Get Role",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:SELECT id FROM roles WHERE role_id = :#${body}?dataSource=#dsPostgres&OutputType=SelectOne",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:SELECT id FROM roles WHERE role_id = :#${body}?dataSource=#dsPostgres&OutputType=SelectOne"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "b29b7100-e038-4020-8502-6a96c9acac3d",
                  "description" : "SQL Remove Role",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:DELETE FROM user_roles WHERE user_id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND role_id = CAST(:#${body} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:DELETE FROM user_roles WHERE user_id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND role_id = CAST(:#${body} AS uuid) AND agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid)?dataSource=#dsPostgres"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.rolesToRemovePojo}&language=Simple&parallelProcessing=false&shareUnitOfWork=false&stopOnException=false&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.rolesToRemove} != null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "rolesToAdd",
        "route" : [ {
          "name" : "setBody",
          "nodeId" : "abd08068-56ed-4dca-8c9a-7f57946893dd",
          "description" : "Add Roles",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "{\"user_id\": \"${exchangeProperty.federatedId}\", \"roles\": ${exchangeProperty.rolesToAdd}}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"user_id\": \"${exchangeProperty.federatedId}\", \"roles\": ${exchangeProperty.rolesToAdd}}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "c76b9187-baf7-45a0-862a-001debbdd9d1",
          "description" : "Set Auth0 Operation",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "auth0RequestedOperation",
              "propertyValue" : "addUserRoles",
              "uuid" : "f8d67022-706e-4948-91c4-381ccd227f84"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?auth0RequestedOperation=addUserRoles&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "seda",
          "nodeId" : "d17f5121-3b10-49e4-90af-9817fcb24457",
          "description" : "auth0Request",
          "properties" : {
            "_type" : "seda",
            "active" : true,
            "advancedParameters" : [ ],
            "blockWhenFull" : false,
            "camelGroup" : "core",
            "concurrentConsumers" : "1",
            "endpointName" : "auth0Request",
            "limitConcurrentConsumers" : true,
            "multipleConsumers" : false,
            "name" : "seda",
            "pollTimeout" : "1000",
            "size" : "1000",
            "specifyMaximumCapacitySize" : false,
            "timeout" : "10000",
            "toDynamicEndpoint" : false,
            "url" : "",
            "waitForTaskToComplete" : "IfReplyExpected"
          },
          "_type" : "seda",
          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=auth0Request&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=10000&waitForTaskToComplete=IfReplyExpected"
        }, {
          "name" : "setBody",
          "nodeId" : "aa24f233-5da5-4ecf-bd91-8e632ba09921",
          "description" : "Set rolesToAdd",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "${exchangeProperty.rolesToAdd}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.rolesToAdd}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "aa3d1c92-ea49-4da3-9c68-1da52b394598",
          "description" : "To POJO",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".unmarshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson, List.class)",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.unmarshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson, List.class)"
        }, {
          "name" : "splitter",
          "nodeId" : "563c3825-953a-455e-99e0-0ef96f660428",
          "description" : "each role",
          "properties" : {
            "_type" : "splitter",
            "active" : true,
            "addNamespaces" : false,
            "aggregationStrategy" : "",
            "camelGroup" : "routing",
            "expression" : "${exchangeProperty.rolesToAddPojo}",
            "language" : "Simple",
            "name" : "splitter",
            "namespaces" : [ ],
            "parallelProcessing" : false,
            "shareUnitOfWork" : false,
            "stopOnException" : false,
            "streaming" : false,
            "suppressExceptions" : false,
            "timeout" : "0",
            "token" : ",",
            "tokenize" : false,
            "url" : "",
            "useAggregationStrategy" : false
          },
          "_type" : "splitter",
          "branches" : [ {
            "type" : "split",
            "label" : "split",
            "route" : [ {
              "name" : "messagingEndpoint",
              "nodeId" : "5ccb7efa-6783-4b22-865a-238cb3f9d521",
              "description" : "SQL Get Role",
              "properties" : {
                "_type" : "messagingEndpoint",
                "active" : true,
                "camelGroup" : "core",
                "name" : "messagingEndpoint",
                "toDynamicEndpoint" : false,
                "uri" : "sql:SELECT id FROM roles WHERE role_id = :#${body}?dataSource=#dsPostgres&OutputType=SelectOne",
                "url" : ""
              },
              "_type" : "messagingEndpoint",
              "kameletPropertiesUrl" : "?uri=sql:SELECT id FROM roles WHERE role_id = :#${body}?dataSource=#dsPostgres&OutputType=SelectOne"
            }, {
              "name" : "messagingEndpoint",
              "nodeId" : "330af7e2-cc1e-422c-874a-8d32d75390b0",
              "description" : "SQL Add Role",
              "properties" : {
                "_type" : "messagingEndpoint",
                "active" : true,
                "camelGroup" : "core",
                "name" : "messagingEndpoint",
                "toDynamicEndpoint" : false,
                "uri" : "sql:INSERT INTO user_roles (user_id, role_id, agency_id, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), NOW(), NOW()) ON CONFLICT (user_id, role_id, agency_id) DO NOTHING?dataSource=#dsPostgres",
                "url" : ""
              },
              "_type" : "messagingEndpoint",
              "kameletPropertiesUrl" : "?uri=sql:INSERT INTO user_roles (user_id, role_id, agency_id, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), CAST(:#${exchangeProperty.agencyId} AS uuid), NOW(), NOW()) ON CONFLICT (user_id, role_id, agency_id) DO NOTHING?dataSource=#dsPostgres"
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.rolesToAddPojo}&language=Simple&parallelProcessing=false&shareUnitOfWork=false&stopOnException=false&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.rolesToAdd} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-13",
    "enabled" : true,
    "routeId" : 10,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "bfe493b9-151f-4558-bed7-9ba22d1fd663",
      "description" : "generateMagicToken",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "generateMagicToken",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=generateMagicToken"
    }, {
      "name" : "setHeaders",
      "nodeId" : "22c71e62-5adb-4714-abcb-94a7ebbc943e",
      "description" : "Set Token Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "Authorization",
          "headerValue" : "Bearer ${exchangeProperty.jwtToken}",
          "language" : "Simple",
          "uuid" : "27e1efbd-4213-467c-8617-572822bcd85b"
        }, {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/tokens",
          "language" : "Constant",
          "uuid" : "61f95fc8-ec2d-4f25-b191-b8dad65d4ba2"
        }, {
          "headerName" : "Content-Type",
          "headerValue" : "application/json",
          "language" : "Constant",
          "uuid" : "1b175e06-5811-4c6a-bac3-4a514b9afa9e"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "process",
      "nodeId" : "05239a68-bf12-476f-a9db-7f71bd039f6c",
      "description" : "Set Token Request",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> tokenData = new HashMap<String, Object>() {{\n\tput(\"user_id\", (String)exchange.getProperty(\"userUuid\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"agency_name\", (String)exchange.getProperty(\"agencyName\"));\t\t\n\tput(\"email\", (String)exchange.getProperty(\"email\"));\n\tput(\"fname\", (String)exchange.getProperty(\"fname\"));\n\tput(\"lname\", (String)exchange.getProperty(\"lname\"));\t\n\tput(\"phone\", (String)exchange.getProperty(\"phone\"));\t\n\tput(\"operatorId\", (String)exchange.getProperty(\"operatorId\"));\t\t\n\tput(\"workflow\", \"newuser\");\n}};\n\nHashMap<String, Object> tokenReq = new HashMap<String, Object>() {{\n\tput(\"service_type\", \"updateCurrentUser\");\n\tput(\"token_data\", tokenData);\t\t\n\tput(\"ttl\", 172800);\t\n}};\n\nexchange.getIn().setBody(mapper.writeValueAsString(tokenReq));",
        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> tokenData = new HashMap<String, Object>() {{\n\tput(\"user_id\", (String)exchange.getProperty(\"userUuid\"));\n\tput(\"agency_id\", (String)exchange.getProperty(\"agencyId\"));\t\n\tput(\"agency_name\", (String)exchange.getProperty(\"agencyName\"));\t\t\n\tput(\"email\", (String)exchange.getProperty(\"email\"));\n\tput(\"fname\", (String)exchange.getProperty(\"fname\"));\n\tput(\"lname\", (String)exchange.getProperty(\"lname\"));\t\n\tput(\"phone\", (String)exchange.getProperty(\"phone\"));\t\n\tput(\"operatorId\", (String)exchange.getProperty(\"operatorId\"));\t\t\n\tput(\"workflow\", \"newuser\");\n}};\n\nHashMap<String, Object> tokenReq = new HashMap<String, Object>() {{\n\tput(\"service_type\", \"updateCurrentUser\");\n\tput(\"token_data\", tokenData);\t\t\n\tput(\"ttl\", 172800);\t\n}};\n\nexchange.getIn().setBody(mapper.writeValueAsString(tokenReq));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
    }, {
      "name" : "http",
      "nodeId" : "21498775-3b36-48bf-9564-8d20c62f7d38",
      "description" : "POST /tokens",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "-1",
        "connectionRequestTimeout" : "-1",
        "disableStreamCache" : true,
        "httpMethod" : "POST",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "-1",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=true"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "f02b6b1f-f9bd-4f80-8a8a-d7f0be7d4b18",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-14",
    "enabled" : true,
    "routeId" : 11,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "b8eda8bb-6ba8-4280-ae4b-e99c51fa6abf",
      "description" : "getMagicToken",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getMagicToken",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getMagicToken"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f54ed5f6-2282-452e-89e2-2c425aea6382",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "7ba89452-a292-4a23-afce-a6a1fb9c1441",
      "description" : "Set Token Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/tokens/${header.x-access-token}",
          "language" : "Simple",
          "uuid" : "24d177b4-6dac-44c4-86d5-e073f4370339"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "http",
      "nodeId" : "439504d7-cbb1-4c5e-888d-18d24974f83c",
      "description" : "GET /tokens/:id",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "-1",
        "connectionRequestTimeout" : "-1",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "-1",
        "throwExceptionOnFailure" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=-1&connectionRequestTimeout=-1&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=-1&throwExceptionOnFailure=false"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "d63f552b-3b06-4753-b33a-1facf8d3a1bf",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "messageFilter",
      "nodeId" : "6f7cfdfb-2454-4600-b125-ca0f564973f0",
      "description" : "404",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "log",
          "nodeId" : "2ffd08f0-4c61-4581-9c16-138349053f7f",
          "description" : "404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "user.token.404",
            "message" : "Invalid Token",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=user.token.404&message=Invalid Token&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "8e9105b4-3427-4aa8-ba10-68191fe705ea",
          "description" : "HTTP401",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "401",
              "language" : "Constant",
              "uuid" : "55fb326b-8237-4123-89a5-29c759bf4567"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "c96e08a5-ce2d-44dd-af3a-a247cadd87b8",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "Invalid token. Unauthorized.",
              "uuid" : "2c026fe2-0555-4cfa-8091-7b705cc0cab6"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=Invalid token. Unauthorized.&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "9629ea34-fe56-4686-bb7c-9a1b77906b1e",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "stop",
          "nodeId" : "2c7d0a59-725e-439f-920f-74ea3b2eda72",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelHttpResponseCode} != 200",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "11033fd1-6bac-4a68-8124-706c8a30b110",
          "description" : "Get Token Params",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "userUuid",
              "propertyValue" : "$.data.token_data.user_id",
              "uuid" : "febad748-bc5d-44f6-8d54-1059ff6a55c9"
            }, {
              "language" : "JsonPath",
              "propertyName" : "agencyId",
              "propertyValue" : "$.data.token_data.agency_id",
              "uuid" : "346821c0-af16-4614-ace1-2f24aa30ec98"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?userUuid=$.data.token_data.user_id&agencyId=$.data.token_data.agency_id&addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-15",
    "enabled" : true,
    "routeId" : 12,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "b4114387-f9d0-49c9-a6bc-2b66f8f94488",
      "description" : "sqlUpdateUser",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlUpdateUser",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlUpdateUser"
    }, {
      "name" : "messageFilter",
      "nodeId" : "fafffa21-12e2-4934-8b2b-ce7732b9bc26",
      "description" : "Change Password?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "c834bdd5-00b6-44fb-ab5c-7b30a64cc0be",
          "description" : "SQL Update User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:UPDATE users SET fname = COALESCE(:#${exchangeProperty.firstName}, fname), lname = COALESCE(:#${exchangeProperty.lastName}, lname), phone = COALESCE(:#${exchangeProperty.phone}, phone), operator_id = COALESCE(:#${exchangeProperty.operatorId}, operator_id), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:UPDATE users SET fname = COALESCE(:#${exchangeProperty.firstName}, fname), lname = COALESCE(:#${exchangeProperty.lastName}, lname), phone = COALESCE(:#${exchangeProperty.phone}, phone), operator_id = COALESCE(:#${exchangeProperty.operatorId}, operator_id), updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
        }, {
          "name" : "messageFilter",
          "nodeId" : "be6c7009-0170-4b66-b807-ab462e1d0897",
          "description" : "Update Settings?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "settings?",
            "route" : [ {
              "name" : "splitter",
              "nodeId" : "5ca9851c-131f-4b3b-bf16-b88f9e8190ea",
              "description" : "each setting",
              "properties" : {
                "_type" : "splitter",
                "active" : true,
                "addNamespaces" : false,
                "aggregationStrategy" : "",
                "camelGroup" : "routing",
                "expression" : "${exchangeProperty.settings}",
                "language" : "Simple",
                "name" : "splitter",
                "namespaces" : [ ],
                "parallelProcessing" : false,
                "shareUnitOfWork" : false,
                "stopOnException" : false,
                "streaming" : false,
                "suppressExceptions" : false,
                "timeout" : "0",
                "token" : ",",
                "tokenize" : false,
                "url" : "",
                "useAggregationStrategy" : false
              },
              "_type" : "splitter",
              "branches" : [ {
                "type" : "split",
                "label" : "split",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "3ad83052-6f03-4d26-adcc-d3b5ef8c11d2",
                  "description" : "Set Setting Params",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "JsonPath",
                      "propertyName" : "name",
                      "propertyValue" : "$.name",
                      "uuid" : "b09e661e-a340-4dca-8c44-38d4ad08aa22"
                    }, {
                      "language" : "JsonPath",
                      "propertyName" : "value",
                      "propertyValue" : "$.value",
                      "uuid" : "e4b623b1-3f2c-49ad-83c6-78762beb855a"
                    }, {
                      "language" : "Constant",
                      "propertyName" : "settingComponent",
                      "propertyValue" : "user",
                      "uuid" : "dbb33cae-7c50-4b45-915c-1a7b423615ab"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?name=$.name&value=$.value&settingComponent=user&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "bb856b5b-0aa7-447c-9c12-44c0419f6d7e",
                  "description" : "SQL Get Setting",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:SELECT id FROM settings WHERE name = :#${exchangeProperty.settingName} AND component = :#${exchangeProperty.settingComponent}?dataSource=#dsPostgres&OutputType=SelectOne",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:SELECT id FROM settings WHERE name = :#${exchangeProperty.settingName} AND component = :#${exchangeProperty.settingComponent}?dataSource=#dsPostgres&OutputType=SelectOne"
                }, {
                  "name" : "messagingEndpoint",
                  "nodeId" : "be888edc-652c-4099-b0cd-aaa8fa3d1017",
                  "description" : "SQL Update Setting",
                  "properties" : {
                    "_type" : "messagingEndpoint",
                    "active" : true,
                    "camelGroup" : "core",
                    "name" : "messagingEndpoint",
                    "toDynamicEndpoint" : false,
                    "uri" : "sql:INSERT INTO object_settings (object_id, setting_id, \"value\", created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), :#${exchangeProperty.settingValue}, NOW(), NOW()) ON CONFLICT (object_id, setting_id) DO UPDATE SET value = EXCLUDED.value, updated_at = NOW()?dataSource=#dsPostgres",
                    "url" : ""
                  },
                  "_type" : "messagingEndpoint",
                  "kameletPropertiesUrl" : "?uri=sql:INSERT INTO object_settings (object_id, setting_id, \"value\", created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), :#${exchangeProperty.settingValue}, NOW(), NOW()) ON CONFLICT (object_id, setting_id) DO UPDATE SET value = EXCLUDED.value, updated_at = NOW()?dataSource=#dsPostgres"
                }, {
                  "name" : "log",
                  "nodeId" : "bc9d27ff-e159-4077-a2ac-d0bf2d41906c",
                  "description" : "",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "log",
                    "message" : "INSERT INTO object_settings (object_id, setting_id, \"value\", created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), :#${exchangeProperty.settingValue}, NOW(), NOW()) ON CONFLICT (object_id, setting_id) DO UPDATE SET value = EXCLUDED.value, updated_at = NOW()",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=INSERT INTO object_settings (object_id, setting_id, \"value\", created_at, updated_at) VALUES(CAST(:#${exchangeProperty.userUuid} AS uuid), CAST(:#${body} AS uuid), :#${exchangeProperty.settingValue}, NOW(), NOW()) ON CONFLICT (object_id, setting_id) DO UPDATE SET value = EXCLUDED.value, updated_at = NOW()&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.settings}&language=Simple&parallelProcessing=false&shareUnitOfWork=false&stopOnException=false&streaming=false&suppressExceptions=false&timeout=0&token=,&tokenize=false&useAggregationStrategy=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.settings} != null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "eefcce63-d629-494a-9cac-14ae0eb6ac98",
          "description" : "Set Auth0 Operation",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "auth0RequestedOperation",
              "propertyValue" : "changePassword",
              "uuid" : "44f41cec-7375-4175-b520-34325b9ec434"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?auth0RequestedOperation=changePassword&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "c158c439-8265-4182-9fc0-ed34914bde1d",
          "description" : "Set Request JSON",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "{\"user_id\": \"${exchangeProperty.federatedId}\", \"password\": \"${exchangeProperty.password}\"}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"user_id\": \"${exchangeProperty.federatedId}\", \"password\": \"${exchangeProperty.password}\"}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "exchangePattern",
          "nodeId" : "da66a1a7-61fb-4484-abef-516187199757",
          "description" : "InOut",
          "properties" : {
            "_type" : "exchangePattern",
            "active" : true,
            "camelGroup" : "core",
            "exchangePattern" : "InOut",
            "name" : "exchangePattern",
            "url" : ""
          },
          "_type" : "exchangePattern",
          "kameletPropertiesUrl" : "?exchangePattern=InOut"
        }, {
          "name" : "seda",
          "nodeId" : "7c0752d0-8f13-438a-8958-27c61aa67e2c",
          "description" : "auth0Request",
          "properties" : {
            "_type" : "seda",
            "active" : true,
            "advancedParameters" : [ ],
            "blockWhenFull" : false,
            "camelGroup" : "core",
            "concurrentConsumers" : "1",
            "endpointName" : "auth0Request",
            "limitConcurrentConsumers" : true,
            "multipleConsumers" : false,
            "name" : "seda",
            "pollTimeout" : "1000",
            "size" : "1000",
            "specifyMaximumCapacitySize" : false,
            "timeout" : "10000",
            "toDynamicEndpoint" : false,
            "url" : "",
            "waitForTaskToComplete" : "IfReplyExpected"
          },
          "_type" : "seda",
          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=auth0Request&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=10000&waitForTaskToComplete=IfReplyExpected"
        }, {
          "name" : "messageFilter",
          "nodeId" : "11c0ba2c-8f5f-4054-8268-8c364a7257ac",
          "description" : "Error?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "filter",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "4c500249-da97-4a41-b5dc-802aa7e7ba42",
              "description" : "Set Error",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "JsonPath",
                  "propertyName" : "error",
                  "propertyValue" : "$.message",
                  "uuid" : "f854fdab-ee52-472b-954d-6a0d3b263ecc"
                }, {
                  "language" : "Header",
                  "propertyName" : "CamelHttpResponseCode",
                  "propertyValue" : "CamelHttpResponseCode",
                  "uuid" : "e05a75af-d6e1-4a53-a397-255136dbfecc"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?error=$.message&CamelHttpResponseCode=CamelHttpResponseCode&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "direct",
              "nodeId" : "65bf5cc0-b829-4f18-94c1-4e22386d4a17",
              "description" : "Render Error",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "renderError",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=renderError"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} != 200",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.password} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-18",
    "enabled" : true,
    "routeId" : 13,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "b3651403-f7fb-40d2-bd54-395d0b973f81",
      "description" : "sqlGetUserRoles",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserRoles",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserRoles"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "9f3ba96d-5dc5-4c5a-be0b-1124de57c46a",
      "description" : "SQL Get User Roles",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:user_roles.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:user_roles.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
    }, {
      "name" : "process",
      "nodeId" : "47fe24e6-5481-4e42-87c8-7354e8b6632f",
      "description" : "Parse / Flatten",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ArrayList<HashMap<String, Object>> userRoles = (ArrayList)exchange.getIn().getBody();\nList<String> userRolesFlat = new ArrayList<String>();\n\nfor (int i = 0; i < userRoles.size(); i++){\n\tHashMap<String, Object> role = userRoles.get(i);\n\tuserRolesFlat.add(String.valueOf(role.get(\"role\")));\n}\n\nexchange.setProperty(\"userRolesFlat\", userRolesFlat);\nexchange.setProperty(\"userRoles\", userRoles);",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, Object>> userRoles = (ArrayList)exchange.getIn().getBody();\nList<String> userRolesFlat = new ArrayList<String>();\n\nfor (int i = 0; i < userRoles.size(); i++){\n\tHashMap<String, Object> role = userRoles.get(i);\n\tuserRolesFlat.add(String.valueOf(role.get(\"role\")));\n}\n\nexchange.setProperty(\"userRolesFlat\", userRolesFlat);\nexchange.setProperty(\"userRoles\", userRoles);&import=// import org.apache.camel.Message"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "314b694f-2882-47ec-b506-6b9995f2e322",
      "description" : "SQL Get Invited Roles",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : false,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT roles FROM invitations WHERE email = :#${exchangeProperty.email} AND fulfilled_at IS NULL AND deleted_at IS NULL ORDER BY created_at DESC LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT roles FROM invitations WHERE email = :#${exchangeProperty.email} AND fulfilled_at IS NULL AND deleted_at IS NULL ORDER BY created_at DESC LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "process",
      "nodeId" : "e48c50f9-e981-45c9-8f69-eb2c679f401e",
      "description" : "Parse / Flatten",
      "properties" : {
        "_type" : "process",
        "active" : false,
        "camelGroup" : "transform",
        "code" : "String invitedRoles = (String)exchange.getIn().getBody();\n\ntry {\n\tList<String> invitedRolesFlat = new ArrayList<String>();\n\tList<String> listOfRoles = Arrays.asList(invitedRoles.split(\",\"));\n\n\tfor (int i = 0; i < listOfRoles.size(); i++){\n\t\tinvitedRolesFlat.add(listOfRoles.get(i));\n\t}\n\t\n\texchange.setProperty(\"invitedRoles\", invitedRolesFlat);\n} catch (Exception e) {\n\t\n}",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=String invitedRoles = (String)exchange.getIn().getBody();\n\ntry {\n\tList<String> invitedRolesFlat = new ArrayList<String>();\n\tList<String> listOfRoles = Arrays.asList(invitedRoles.split(\",\"));\n\n\tfor (int i = 0; i < listOfRoles.size(); i++){\n\t\tinvitedRolesFlat.add(listOfRoles.get(i));\n\t}\n\t\n\texchange.setProperty(\"invitedRoles\", invitedRolesFlat);\n} catch (Exception e) {\n\t\n}&import=// import org.apache.camel.Message"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-19",
    "enabled" : true,
    "routeId" : 14,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "9e27ef4f-8306-4112-a352-cbb2bebc90aa",
      "description" : "getUserMessageTemplates",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me/templates",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getUserMessageTemplates",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me/templates&method=get&operationName=getUserMessageTemplates&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "d9a43496-bfa4-43f0-948a-56f76ee06e22",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4de83299-0ced-4aac-8439-9a9fe9a3b477",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "e7160bf9-8c38-4f01-9ae3-0411a0844a10",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "f9278edc-84d5-4d62-8d4c-b484f318a794"
        }, {
          "language" : "Header",
          "propertyName" : "templateType",
          "propertyValue" : "templateType",
          "uuid" : "f8712ba5-977b-45a5-80be-1413a2ec7986"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&templateType=templateType&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "42b38a9b-bd40-48c8-ba49-565c53e96151",
      "description" : "!templateType",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "601e94f1-ff45-49a8-bf21-b5948f9665a7",
          "description" : "Remove Headers",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".removeHeaders(\"*\", \"x-*\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
        }, {
          "name" : "direct",
          "nodeId" : "06f90e8d-3f8e-415a-9fdf-04722800f6d2",
          "description" : "sqlGetUserId",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "sqlGetUserId",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "c13d803c-f198-405f-899a-95a3afc539ab",
          "description" : "SQL Get Templates",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to(\"velocity:message_templates.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to(\"velocity:message_templates.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.INFO, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "d7d30020-bdba-4752-bfc7-8824d3c19ea8",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "f72d735c-b16d-433b-a715-1baa03e7fb96",
          "description" : "Set Default Templ Type",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "templateType",
              "propertyValue" : "user",
              "uuid" : "33ba9141-4e95-4909-b2e0-6ae8bfd7c50a"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?templateType=user&addNamespaces=false&suppressExceptions=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.templateType} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-20",
    "enabled" : true,
    "routeId" : 15,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "8cff3d36-16bc-446a-9ed3-82d74a252441",
      "description" : "sqlGetUserId",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserId",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "63734e6e-9500-41bf-89d7-a0fafa5f6489",
      "description" : "SQL Get UserUUID",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT id FROM users WHERE federated_id = :#${exchangeProperty.userId}?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT id FROM users WHERE federated_id = :#${exchangeProperty.userId}?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "2ebaabbd-9291-4b65-8a22-0eba7a7b745d",
      "description" : "Set User UUID",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "userUuid",
          "propertyValue" : "${body}",
          "uuid" : "11fafa60-9053-478f-af33-cea84c9fb09a"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=${body}&addNamespaces=false&suppressExceptions=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-21",
    "enabled" : true,
    "routeId" : 16,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "9e349c23-74d4-4aee-86c8-a92f5e87098d",
      "description" : "createUserMessageTemplate",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me/templates",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "createUserMessageTemplate",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me/templates&method=post&operationName=createUserMessageTemplate&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "6e036e18-8b52-4e10-bb5d-3332a1c86fd7",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ce2128b6-fa83-4559-9b84-f3fc65543683",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "fab314ba-b179-4814-b077-0b2fc2f6f5ff",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "7374fdbb-d20d-4e7c-82b3-371971085653",
      "description" : "templ.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.templ.create.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.templ.create.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "9035ab33-c73a-4067-b019-cb0d1dba2af3",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "b34a4032-10ee-46ca-9141-9c6f4eed6dc8"
        }, {
          "language" : "JsonPath",
          "propertyName" : "name",
          "propertyValue" : "$.name",
          "uuid" : "7d5d9f5c-4036-4298-a54e-3f50208c2f59"
        }, {
          "language" : "JsonPath",
          "propertyName" : "text",
          "propertyValue" : "$.text",
          "uuid" : "832d43e1-60da-4b30-8109-d9b66b093b9a"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?agencyId=x-agency-id&name=$.name&text=$.text&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b1b15947-e07a-4c6f-92bc-3a9a21de646e",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "direct",
      "nodeId" : "6dcc3d97-af0a-47db-a08e-3e4a00f1cf52",
      "description" : "sqlGetUserId",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserId",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
    }, {
      "name" : "log",
      "nodeId" : "ad4a6f43-bb86-4481-9be0-bc17053e850c",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "${exchangeProperty.userUuid}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=${exchangeProperty.userUuid}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "02d3c838-452a-4cd8-a5da-16e90cbcfe66",
      "description" : "SQL Create Template",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"sql:classpath:message_templates.insert.sql?dataSource=#dsPostgres\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"sql:classpath:message_templates.insert.sql?dataSource=#dsPostgres\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "2ecba6e8-fcaa-4428-8939-83d207b6a4e9",
      "description" : "HTTP204",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpResponseCode",
          "headerValue" : "204",
          "language" : "Constant",
          "uuid" : "6f8c0447-906d-4a18-9aa7-80ac7df28a3a"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setBody",
      "nodeId" : "1b1711ce-91ed-4670-9d9c-1c14182f039a",
      "description" : "Clear Body",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "constant('')",
        "language" : "GroovyDsl",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
    }, {
      "name" : "stop",
      "nodeId" : "cda7ebbe-abef-460a-907d-3bb5beab9727",
      "description" : "",
      "properties" : {
        "_type" : "stop",
        "camelGroup" : "misc",
        "name" : "stop",
        "url" : ""
      },
      "_type" : "stop",
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-22",
    "enabled" : true,
    "routeId" : 17,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "ab5f2414-628d-42b1-8282-a38fb3704877",
      "description" : "updateUserMessageTemplate",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me/templates/{templateId}",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "updateUserMessageTemplate",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me/templates/{templateId}&method=put&operationName=updateUserMessageTemplate&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "a7e9d554-4f49-4895-8d3b-1fe349161069",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "09bc125e-f987-4e12-b1cb-873fba76e15b",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ae80e0d5-78e8-4af0-8e20-900e4f3a776e",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "1dbe341a-e776-46ed-b836-b6002104261e",
      "description" : "templ.update.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.templ.update.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.templ.update.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "e186b7af-b71b-437a-97ac-ee2e7d81723f",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "templateId",
          "propertyValue" : "templateId",
          "uuid" : "f9fa0a9d-a92c-4f05-82a5-d7cf51a082db"
        }, {
          "language" : "JsonPath",
          "propertyName" : "name",
          "propertyValue" : "$.name",
          "uuid" : "9532bde7-8c42-4fe6-b6dc-349d5640b08b"
        }, {
          "language" : "JsonPath",
          "propertyName" : "text",
          "propertyValue" : "$.text",
          "uuid" : "0a904ea0-3009-42b2-b57d-b08cb5851629"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?templateId=templateId&name=$.name&text=$.text&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "95fd049c-ebe3-4f25-982a-c88be214bd81",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "direct",
      "nodeId" : "61d5ec0a-f8d2-40fe-a98b-5800d7d09483",
      "description" : "sqlGetUserId",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserId",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "de3944d1-bab6-43b7-8282-60d8680e122c",
      "description" : "SQL Update Template",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:UPDATE message_templates SET name = :#${exchangeProperty.name}, text = :#${exchangeProperty.text}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:UPDATE message_templates SET name = :#${exchangeProperty.name}, text = :#${exchangeProperty.text}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
    }, {
      "name" : "log",
      "nodeId" : "1a7aa309-90ca-437b-b84b-449c06a84310",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "UPDATE message_templates SET name = :#${exchangeProperty.name}, text = :#${exchangeProperty.text}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=UPDATE message_templates SET name = :#${exchangeProperty.name}, text = :#${exchangeProperty.text}, updated_at = NOW() WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setHeaders",
      "nodeId" : "76c2b186-1592-49ae-b656-00fc2e3b42ba",
      "description" : "HTTP200",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpResponseCode",
          "headerValue" : "200",
          "language" : "Constant",
          "uuid" : "e28b9c47-194c-431d-a905-31bc263c0f4e"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "clearBody",
      "nodeId" : "24afbf2a-7780-40dd-a036-a61d2b3b73d7",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "stop",
      "nodeId" : "be563538-d558-4036-b9a8-d4240e70bc51",
      "description" : "",
      "properties" : {
        "_type" : "stop",
        "camelGroup" : "misc",
        "name" : "stop",
        "url" : ""
      },
      "_type" : "stop",
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-23",
    "enabled" : true,
    "routeId" : 18,
    "route" : [ {
      "name" : "deleteRequest",
      "nodeId" : "46c844a2-cb88-4fab-bcd4-cb2e30c7b54e",
      "description" : "deleteUserMessageTemplate",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me/templates/{templateId}",
        "method" : "delete",
        "name" : "deleteRequest",
        "operationName" : "deleteUserMessageTemplate",
        "produces" : "application/json",
        "requestmethod" : "DELETE",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me/templates/{templateId}&method=delete&operationName=deleteUserMessageTemplate&produces=application/json&requestmethod=DELETE"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "83d60490-a50c-4dee-b6c2-6074b244fb08",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "ac6d44ee-3d95-4f0a-8948-bae704f5ee76",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "50466e8c-f175-4531-af18-c1394ba3280e",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "templateId",
          "propertyValue" : "templateId",
          "uuid" : "77c0d36b-ec5a-47e6-9746-e85b5e5fa070"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?templateId=templateId&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "a52ed302-9fe9-4a75-bf6a-13362b41c841",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "direct",
      "nodeId" : "45490eb6-1afa-49eb-b76b-59021ddd8fb9",
      "description" : "sqlGetUserId",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserId",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "32e1e87f-9fd5-43ba-96ea-e11567cd207d",
      "description" : "SQL Delete Template",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:UPDATE message_templates SET status = \\'deleted\\' WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:UPDATE message_templates SET status = \\'deleted\\' WHERE id = CAST(:#${exchangeProperty.templateId} AS uuid) AND user_id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres"
    }, {
      "name" : "setHeaders",
      "nodeId" : "e4429ffe-3529-4f9b-aec6-05de0f44c30e",
      "description" : "HTTP204",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpResponseCode",
          "headerValue" : "204",
          "language" : "Constant",
          "uuid" : "c562d3bc-4fc0-4180-beb8-1e97de8a5d02"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setBody",
      "nodeId" : "99c487a1-05cb-4135-a149-77abac325cfb",
      "description" : "Clear Body",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "constant('')",
        "language" : "GroovyDsl",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression=constant('')&language=GroovyDsl&suppressExceptions=false"
    }, {
      "name" : "stop",
      "nodeId" : "9e81a88c-e6a5-4279-9bee-0608edc19ad2",
      "description" : "",
      "properties" : {
        "_type" : "stop",
        "camelGroup" : "misc",
        "name" : "stop",
        "url" : ""
      },
      "_type" : "stop",
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-7",
    "enabled" : true,
    "routeId" : 19,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "9e3b93b5-d7db-4d98-a838-7ca7b4e4a49b",
      "description" : "updateUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/{userUuid}",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "updateUser",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/{userUuid}&method=put&operationName=updateUser&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "968d1dd6-f1de-4c54-8066-cd6dacd34228",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "f29f0d83-a23c-4b7a-8e96-68245ad5f00a",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "75f3081a-3440-414c-9c81-0b2d66a7a924",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "11b44252-a549-46eb-bb73-a829d04e761c",
      "description" : "202.api.update.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.update.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.update.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "2bc98ae1-d793-41ef-9e11-8be8ffb534ec",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userUuid",
          "propertyValue" : "userUuid",
          "uuid" : "63655d0b-dcc2-445c-a9fd-ff6dced0004d"
        }, {
          "language" : "JsonPath",
          "propertyName" : "firstName",
          "propertyValue" : "$.fname",
          "uuid" : "2ffb63bf-fdc6-41d4-801d-1fdbb4309dea"
        }, {
          "language" : "JsonPath",
          "propertyName" : "lastname",
          "propertyValue" : "$.lname",
          "uuid" : "7a1cc065-e6bb-4cc3-a412-66957e5558b0"
        }, {
          "language" : "JsonPath",
          "propertyName" : "phone",
          "propertyValue" : "$.phone",
          "uuid" : "758f76fd-a011-47c5-a534-1b3b55724e07"
        }, {
          "language" : "JsonPath",
          "propertyName" : "settings",
          "propertyValue" : "$.settings",
          "uuid" : "c90f1ace-62be-4a99-b39b-326aec1973b1"
        }, {
          "language" : "Simple",
          "propertyName" : "x-authorized",
          "propertyValue" : "true",
          "uuid" : "f0a230a8-0171-43a6-aacc-ae3cb068bc25"
        }, {
          "language" : "JsonPath",
          "propertyName" : "roles",
          "propertyValue" : "$.roles[*].role_id",
          "uuid" : "53ab098b-8ba0-4074-be7b-caefdc49f1e3"
        }, {
          "language" : "Header",
          "propertyName" : "agencyId",
          "propertyValue" : "x-agency-id",
          "uuid" : "6d768663-9db7-4061-b9fb-4a70cbf82b0b"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=userUuid&firstName=$.fname&lastname=$.lname&phone=$.phone&settings=$.settings&x-authorized=true&roles=$.roles[*].role_id&agencyId=x-agency-id&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "a4e91b68-37d8-48d8-a2fb-d4255e7526ed",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "log",
      "nodeId" : "4c71d72b-9592-46b7-a237-475b09417092",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "SELECT u.fname, u.lname, u.email, u.federated_id, u.phone, string_agg(r.role_id, \\',\\') AS roles FROM users u LEFT JOIN user_roles ur ON u.id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.role_id LEFT JOIN user_agencies ua ON u.id = ua.user_id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) OR r.agency_id IS NULL ) GROUP BY u.id",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=SELECT u.fname, u.lname, u.email, u.federated_id, u.phone, string_agg(r.role_id, \\',\\') AS roles FROM users u LEFT JOIN user_roles ur ON u.id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.role_id LEFT JOIN user_agencies ua ON u.id = ua.user_id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) OR r.agency_id IS NULL ) GROUP BY u.id&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "87198fe2-5e9c-463f-a4b9-ed45fd7bbc52",
      "description" : "SQL Get User",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT u.fname, u.lname, u.email, u.federated_id, u.phone, string_agg(r.role_id, \\',\\') AS roles FROM users u LEFT JOIN user_roles ur ON u.id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.id LEFT JOIN user_agencies ua ON u.id = ua.user_id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) OR r.agency_id IS NULL ) GROUP BY u.id?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT u.fname, u.lname, u.email, u.federated_id, u.phone, string_agg(r.role_id, \\',\\') AS roles FROM users u LEFT JOIN user_roles ur ON u.id = ur.user_id LEFT JOIN roles r ON ur.role_id = r.id LEFT JOIN user_agencies ua ON u.id = ua.user_id WHERE u.id = CAST(:#${exchangeProperty.userUuid} AS uuid) AND ua.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) AND ( r.agency_id = CAST(:#${exchangeProperty.agencyId} AS uuid) OR r.agency_id IS NULL ) GROUP BY u.id?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "4a48a370-09a9-4529-9f72-e31ac19f70f7",
      "description" : "Get User Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "rolesBefore",
          "propertyValue" : "${body[roles]}",
          "uuid" : "72a48c9e-1fde-4b3f-8a0d-3e759e736d93"
        }, {
          "language" : "Simple",
          "propertyName" : "federatedId",
          "propertyValue" : "${body[federated_id]}",
          "uuid" : "1d37fdde-10ba-4205-8142-c239ecef633b"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?rolesBefore=${body[roles]}&federatedId=${body[federated_id]}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "c3386648-8534-4401-9b4d-300b00584422",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "8b23efe7-e002-48df-bf44-352c19d35766",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "322f032e-158d-4c7b-85a7-ff238f3c08e3"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "a66c9d93-d38c-4b82-9f1e-face30f7b42d",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "User not found",
              "uuid" : "bbe4717d-2953-4692-8d36-de3ec7b1beaf"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=User not found&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "ed5c3dfe-8167-4fdc-99b3-ae817e6a9f78",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        }, {
          "name" : "log",
          "nodeId" : "b0cef76f-6bff-4949-9803-d81ef6d1e097",
          "description" : "404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "api.user.update.404",
            "message" : "User ${exchangeProperty.userId} not found",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=api.user.update.404&message=User ${exchangeProperty.userId} not found&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "stop",
          "nodeId" : "36bbb05f-5841-4788-a208-9df8eddd57ee",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "858e2d70-3c57-474d-8128-a6cd104d59ff",
          "description" : "sqlUpdateUser",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "sqlUpdateUser",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=sqlUpdateUser"
        }, {
          "name" : "direct",
          "nodeId" : "0572fa95-a0ee-42ad-af22-f2d6cbb9dc1f",
          "description" : "updateRoles",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "updateRoles",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=updateRoles"
        }, {
          "name" : "setHeaders",
          "nodeId" : "b020006b-28ba-4933-8285-eb3b26709c3c",
          "description" : "Set User ID",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "userUuid",
              "headerValue" : "${exchangeProperty.userUuid}",
              "language" : "Simple",
              "uuid" : "0db7873f-1aee-4489-9a72-addcc9d560e5"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "23ba8bd2-19e6-4be9-988f-1e6a9fdc8aa0",
          "description" : "getUserById",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getUserById",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getUserById"
        }, {
          "name" : "setBody",
          "nodeId" : "fdcc58ef-5853-4c47-8c41-0d4ba1ff7d4c",
          "description" : "Set Response",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "$.data",
            "language" : "JsonPath",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "6581d220-a086-4c1b-853d-d970e13d2a20",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('renderResponse')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-17",
    "enabled" : true,
    "routeId" : 20,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "115df5d1-3208-41f1-b903-ec3d765e33db",
      "description" : "auth0Request",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "10",
        "endpointName" : "auth0Request",
        "limitConcurrentConsumers" : false,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=10&endpointName=auth0Request&limitConcurrentConsumers=false&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "setHeaders",
      "nodeId" : "cd68da2d-da06-4310-88ee-1c98f7dcd306",
      "description" : "Set Auth0 Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "x-requested-operation",
          "headerValue" : "${exchangeProperty.auth0RequestedOperation}",
          "language" : "Simple",
          "uuid" : "f1ef86df-79fe-4861-823c-c08c021bc93d"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "01b89d1d-a11d-4927-b16d-d52e389ff180",
      "description" : "202.seda.auth0.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.seda.auth0.in",
        "message" : "Auth0 ${header.x-requested-operation}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.seda.auth0.in&message=Auth0 ${header.x-requested-operation}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "b59b6a33-9ce1-4e1c-8cbb-ec52c9dd5400",
      "description" : "InOut",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOut",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOut"
    }, {
      "name" : "jms",
      "nodeId" : "af767929-aac4-4b3f-a43f-625011af2915",
      "description" : "providers.data.auth0",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "providers.data.auth0",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=providers.data.auth0&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    }, {
      "name" : "log",
      "nodeId" : "3303bd3c-c4cd-4d87-81bd-410797990310",
      "description" : "202.seda.auth0.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.seda.auth0.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.seda.auth0.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-22-7e3ce91c",
    "enabled" : false,
    "routeId" : 21,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "15c7ef94-f083-4442-a831-21b8a565890a",
      "description" : "linkUserIdentity",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/{userUuid}/link/{childId}",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "linkUserIdentity",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/{userUuid}/link/{childId}&method=post&operationName=linkUserIdentity&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "08fa2896-95f6-4d16-a52d-2cc378eeb5f5",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "c8c0005a-e968-44da-9ad3-6e9da314ffa3",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "788e25d2-c09c-4bd6-be55-ab8ba38e8725",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "6e1ac185-206b-4f0f-a2ba-9a66e6044f3e",
      "description" : "link.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.link.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.link.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "24390ddc-664b-4af5-b161-f979d6a9ed38",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "userUuid",
          "propertyValue" : "userUuid",
          "uuid" : "806dd3a7-a40b-4cc7-b169-bf826fda620b"
        }, {
          "language" : "Header",
          "propertyName" : "childId",
          "propertyValue" : "childId",
          "uuid" : "5d365a9f-d264-4960-b6ef-e06eb19e6d25"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userUuid=userUuid&childId=childId&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "d00c2a87-d2a5-469e-aad2-ed5151b2c86a",
      "description" : "SQL Get User",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AND deleted_at IS NULL?dataSource=dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AND deleted_at IS NULL?dataSource=dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "setProperties",
      "nodeId" : "fd8c8a6f-5a9b-4d58-a92f-342b2a693e76",
      "description" : "Set FederatedID",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "userFederatedId",
          "propertyValue" : "${body}",
          "uuid" : "ff0f1a52-571d-44a4-8b76-df8fc5587997"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?userFederatedId=${body}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "8d4790ea-1aa8-4a07-84bb-3435e357819d",
      "description" : "Not Found",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "1ad2f5ff-7894-4788-8b70-8b29a74636f0",
          "description" : "404",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".setBody('')\n.setHeader('CamelHttpResponseCode')\n\t.constant('404')",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.setBody('')\n.setHeader('CamelHttpResponseCode')\n\t.constant('404')"
        }, {
          "name" : "stop",
          "nodeId" : "549e8fd8-9278-4cb7-bf97-f39c40e0a4db",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.userFederatedId} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messagingEndpoint",
          "nodeId" : "07ddf805-9bcd-4df1-8e66-21e1cd1a7bc1",
          "description" : "SQL Get Child User",
          "properties" : {
            "_type" : "messagingEndpoint",
            "active" : true,
            "camelGroup" : "core",
            "name" : "messagingEndpoint",
            "toDynamicEndpoint" : false,
            "uri" : "sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.childUuid} AND deleted_at IS NULL?dataSource=dsPostgres&OutputType=SelectOne",
            "url" : ""
          },
          "_type" : "messagingEndpoint",
          "kameletPropertiesUrl" : "?uri=sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.childUuid} AND deleted_at IS NULL?dataSource=dsPostgres&OutputType=SelectOne"
        }, {
          "name" : "setProperties",
          "nodeId" : "597725d4-ce17-4529-a494-090bce8e3d01",
          "description" : "Set Child FederatedID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "childFederatedId",
              "propertyValue" : "${body}",
              "uuid" : "cd872b12-2c5c-4af1-bebb-74a3571f76ea"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?childFederatedId=${body}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "f00dd31d-018b-47a7-be69-f970bb276da4",
          "description" : "Not Found",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "filter",
            "route" : [ {
              "name" : "dslProcessor",
              "nodeId" : "b74e1c4a-9299-4157-8354-db47742702bd",
              "description" : "404",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : "from('direct://dsl-processor')",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=from('direct://dsl-processor')"
            }, {
              "name" : "stop",
              "nodeId" : "e21a0e70-316e-45d9-940f-db9ef9a0f2b5",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.childFederatedId} == null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          }, {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "process",
              "nodeId" : "ce06e820-f3b5-4341-a7b7-815a177aac45",
              "description" : "Format Auth0 Request",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "String toUserId = (String)exchange.getProperty(\"toUserId\");\n\nif (toUserId.startsWith(\"auth0|\")) {\n\texchange.setProperty(\"toProvider\", \"auth0\");\n\texchange.setProperty(\"toUid\", toUserId.substring(6));\n}\n\t\n\n",
                "import" : "// import org.apache.camel.Message",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=String toUserId = (String)exchange.getProperty(\"toUserId\");\n\nif (toUserId.startsWith(\"auth0|\")) {\n\texchange.setProperty(\"toProvider\", \"auth0\");\n\texchange.setProperty(\"toUid\", toUserId.substring(6));\n}\n\t\n\n&import=// import org.apache.camel.Message"
            }, {
              "name" : "messageFilter",
              "nodeId" : "a9b2c771-4713-49c4-a6ee-6161a5f9ac78",
              "description" : "Invalid",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "filter",
                "label" : "filter",
                "route" : [ {
                  "name" : "setBody",
                  "nodeId" : "1204205b-66cf-42e9-af61-e5a3e2c5cc3b",
                  "description" : "Set Error",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "{\"error\": \"Invalid provider specified\"}",
                    "language" : "Simple",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"error\": \"Invalid provider specified\"}&language=Simple&suppressExceptions=false"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "82f36655-f52c-431d-a5af-08bb9a0da25e",
                  "description" : "HTTP400",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "400",
                      "language" : "Constant",
                      "uuid" : "41a8fe97-763e-47a7-b129-f72a5f94c191"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "stop",
                  "nodeId" : "544bc0ec-710f-43d3-a2c6-a91ff92da7a6",
                  "description" : "",
                  "properties" : {
                    "_type" : "stop",
                    "camelGroup" : "misc",
                    "name" : "stop",
                    "url" : ""
                  },
                  "_type" : "stop",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.toProvider} == null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              }, {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "process",
                  "nodeId" : "84d035cd-8784-4697-bf51-2ca252d2a3eb",
                  "description" : "Format request",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "",
                    "import" : "// import org.apache.camel.Message",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?import=// import org.apache.camel.Message"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-12",
    "enabled" : true,
    "routeId" : 22,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "831d8ca1-f543-43a3-a6e3-27f75104cb8e",
      "description" : "updateCurrentUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "updateCurrentUser",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me&method=put&operationName=updateCurrentUser&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "127c4de0-899d-4402-900c-6f10234c7659",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "setProperties",
      "nodeId" : "1234e7cb-15ba-41d0-ab78-88e6722681b1",
      "description" : "Store Request",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "body",
          "propertyValue" : "${body}",
          "uuid" : "126207d3-1d3f-4fa8-b90e-a7431b1f078e"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?body=${body}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messageRouter",
      "nodeId" : "410f098e-b1cd-4222-a3ec-cf1209c23a4d",
      "description" : "",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "when",
        "label" : "x-access-token",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "bd356e38-dea4-475e-9852-bcb241abde4d",
          "description" : "getMagicToken",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "getMagicToken",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=getMagicToken"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.x-access-token} != null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "7b2893a7-ad84-4c45-b745-f1b290a91341",
          "description" : "Validate JWT",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
        } ],
        "properties" : { }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "dslProcessor",
          "nodeId" : "642f2d14-3306-4047-a60a-e4f6331243e6",
          "description" : "Validate Request",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
        }, {
          "name" : "setBody",
          "nodeId" : "5f2d78df-3bf4-4ea2-8275-901cb238ed9e",
          "description" : "Restore Body",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "${exchangeProperty.body}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.body}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "664cc8da-284f-47a3-a25c-512b63f6bccc",
          "description" : "Set Input Params",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "firstName",
              "propertyValue" : "$.fname",
              "uuid" : "30e987f8-71ce-4fb4-9715-e421dab17fc1"
            }, {
              "language" : "JsonPath",
              "propertyName" : "lastName",
              "propertyValue" : "$.lname",
              "uuid" : "3a24c371-f998-48ac-b24e-1fb64ede21ff"
            }, {
              "language" : "JsonPath",
              "propertyName" : "phone",
              "propertyValue" : "$.phone",
              "uuid" : "215323c8-3190-405e-9030-4b3e3cfa05ee"
            }, {
              "language" : "JsonPath",
              "propertyName" : "operatorId",
              "propertyValue" : "$.operator_id",
              "uuid" : "ca6ddf30-dff9-423e-b262-63249afd3aca"
            }, {
              "language" : "JsonPath",
              "propertyName" : "password",
              "propertyValue" : "$.password",
              "uuid" : "4ad85a54-a967-4eb7-a228-1f5afc94148a"
            }, {
              "language" : "JsonPath",
              "propertyName" : "settings",
              "propertyValue" : "$.settings",
              "uuid" : "e2c12591-88ff-43a2-bfea-7dfb45c98f05"
            } ],
            "suppressExceptions" : true,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?firstName=$.fname&lastName=$.lname&phone=$.phone&operatorId=$.operator_id&password=$.password&settings=$.settings&addNamespaces=false&suppressExceptions=true"
        }, {
          "name" : "messageFilter",
          "nodeId" : "ac95ace1-71b9-4df5-90c2-7352ebafc0e9",
          "description" : "User UUID?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "messagingEndpoint",
              "nodeId" : "495532e1-6e91-4039-8d64-f257da50c67e",
              "description" : "SQL Get User",
              "properties" : {
                "_type" : "messagingEndpoint",
                "active" : true,
                "camelGroup" : "core",
                "name" : "messagingEndpoint",
                "toDynamicEndpoint" : false,
                "uri" : "sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne",
                "url" : ""
              },
              "_type" : "messagingEndpoint",
              "kameletPropertiesUrl" : "?uri=sql:SELECT federated_id FROM users WHERE id = CAST(:#${exchangeProperty.userUuid} AS uuid)?dataSource=#dsPostgres&OutputType=SelectOne"
            }, {
              "name" : "setProperties",
              "nodeId" : "b9bc8686-1a3b-4438-971a-0093e768cbd7",
              "description" : "Set Federated ID",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "federatedId",
                  "propertyValue" : "${body}",
                  "uuid" : "da9a1902-5105-410f-94cc-2f6d0730ee64"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?federatedId=${body}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "messageFilter",
              "nodeId" : "877033bb-894b-43fc-9308-481d935ea317",
              "description" : "Not Found?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "direct",
                  "nodeId" : "f7b1a185-333d-47c3-9831-715b76bc6f5c",
                  "description" : "sqlUpdateUser",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "sqlUpdateUser",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=sqlUpdateUser"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "cc0b01a5-421a-4f2c-8643-b2db502c2bfb",
                  "description" : "Set UUID",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "userUuid",
                      "headerValue" : "${exchangeProperty.userUuid}",
                      "language" : "Simple",
                      "uuid" : "7d8e213e-c4f8-4ca3-bbb5-e9eef2c7cc10"
                    }, {
                      "headerName" : "x-authorized",
                      "headerValue" : "true",
                      "language" : "Simple",
                      "uuid" : "e6be0175-15d6-4df5-a3dc-8a5e643b77ba"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "direct",
                  "nodeId" : "fc10c1ad-5eb7-4cea-b085-16d9f8b91e96",
                  "description" : "getCurrentUser",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "getCurrentUser",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=getCurrentUser"
                }, {
                  "name" : "setBody",
                  "nodeId" : "0da3873a-b655-4723-9038-eb258f0ce57e",
                  "description" : "Set Response",
                  "properties" : {
                    "_type" : "setBody",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "expression" : "$.data",
                    "language" : "JsonPath",
                    "name" : "setBody",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setBody",
                  "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
                }, {
                  "name" : "dslProcessor",
                  "nodeId" : "7bb3cc80-380d-4f18-ae7d-dee8405e9110",
                  "description" : "Render Response",
                  "properties" : {
                    "_type" : "dslProcessor",
                    "active" : true,
                    "camelGroup" : "core",
                    "dsl" : ".bean('renderResponse')",
                    "name" : "dslProcessor",
                    "url" : ""
                  },
                  "_type" : "dslProcessor",
                  "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
                }, {
                  "name" : "log",
                  "nodeId" : "8fa675f2-a668-4cd2-ad40-3cb3570802b6",
                  "description" : "",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "log",
                    "message" : "(${header.CamelHttpResponseCode}) ${body}",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                } ],
                "properties" : { }
              }, {
                "type" : "filter",
                "label" : "filter",
                "route" : [ {
                  "name" : "setProperties",
                  "nodeId" : "88a65de7-e0e2-44ef-81c4-22f099293112",
                  "description" : "Set Error",
                  "properties" : {
                    "_type" : "setProperties",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "name" : "setProperties",
                    "namespaces" : [ ],
                    "propertyList" : [ {
                      "language" : "Constant",
                      "propertyName" : "error",
                      "propertyValue" : "User Not Found",
                      "uuid" : "a2106865-a8e0-4e3e-a8f4-d8514c9b7617"
                    }, {
                      "language" : "Constant",
                      "propertyName" : "CamelHttpResponseCode",
                      "propertyValue" : "404",
                      "uuid" : "e0978aab-04a2-40fb-9827-32377683fecb"
                    } ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setProperties",
                  "kameletPropertiesUrl" : "?error=User Not Found&CamelHttpResponseCode=404&addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "direct",
                  "nodeId" : "028740f4-acb6-4640-9b5c-9ba6d3331d00",
                  "description" : "Render Error",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "renderError",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=renderError"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.federatedId} == null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "userUuid==null",
            "route" : [ {
              "name" : "direct",
              "nodeId" : "b7621837-b487-4243-a597-1249bd4a288b",
              "description" : "sqlGetUserId",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "sqlGetUserId",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.userUuid} == null",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-23-7792691b",
    "enabled" : true,
    "routeId" : 23,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "d960607e-b802-4b76-9903-a3ea303b2801",
      "description" : "createCurrentUser",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/users/me",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "createCurrentUser",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/users/me&method=post&operationName=createCurrentUser&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "88ea412e-43f5-4e93-9148-aaae6325f27d",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "aa2fa4d5-af13-4090-a11b-bdf072b37536",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n.filter().simple('${exchangeProperty.jwtAuth} != true')\n        .stop()\n    .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "fa01bdc6-889d-4574-bea9-5fd81c7f0184",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n.filter().simple('${header.CamelHttpResponseCode} >= 400')\n\t.bean('renderResponse')\n  .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}')\t\n        .stop()\n    .end()"
    }, {
      "name" : "log",
      "nodeId" : "2d9354c2-1bee-4a07-99b4-7075101ceaba",
      "description" : "me.create.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.api.me.create.in",
        "message" : "${headers} ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.me.create.in&message=${headers} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "process",
      "nodeId" : "f6e7b8da-08d8-400a-908c-674db5c1ef96",
      "description" : "Set Federated ID",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper jackson = new ObjectMapper();\nHashMap<String, Object> requestIn = jackson.readValue((String)exchange.getIn().getBody(), HashMap.class);\nrequestIn.put(\"federated_id\", (String)exchange.getProperty(\"userId\"));\nexchange.setProperty(\"requestIn\", jackson.writeValueAsString(requestIn));",
        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper jackson = new ObjectMapper();\nHashMap<String, Object> requestIn = jackson.readValue((String)exchange.getIn().getBody(), HashMap.class);\nrequestIn.put(\"federated_id\", (String)exchange.getProperty(\"userId\"));\nexchange.setProperty(\"requestIn\", jackson.writeValueAsString(requestIn));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
    }, {
      "name" : "direct",
      "nodeId" : "fbc4845a-78da-40f7-80c6-830cc8860279",
      "description" : "sqlGetUserId",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sqlGetUserId",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sqlGetUserId"
    }, {
      "name" : "messageFilter",
      "nodeId" : "d10db08a-4159-4eb4-99ac-587a72fd4ff8",
      "description" : "User Exists?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setBody",
          "nodeId" : "c29aa069-c04a-4377-977c-f5d650faed00",
          "description" : "Set Create User Request",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "${exchangeProperty.requestIn}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression=${exchangeProperty.requestIn}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "e0fd5634-374f-4fde-841f-71ce04cd680c",
          "description" : "createUser",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "createUser",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=createUser"
        }, {
          "name" : "setProperties",
          "nodeId" : "e8d5592c-b4a1-4c73-b5cc-fdf336ba575a",
          "description" : "Get User ID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "userUuid",
              "propertyValue" : "$.data.user_id",
              "uuid" : "9dc82924-70de-4bc6-a5e6-4b7171b7647d"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?userUuid=$.data.user_id&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "22595337-9078-4613-9516-bbc33026dee6",
          "description" : "Set Auth0 Operation",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "x-requested-operation",
              "headerValue" : "getUserByEmail",
              "language" : "Constant",
              "uuid" : "e64e6257-1948-42f9-b72e-9868f2dfa09b"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "d23efdde-a3d0-4817-b128-35724b139a60",
          "description" : "Set Auth0 Request",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "{\"email\": \"${exchangeProperty.email}\"}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"email\": \"${exchangeProperty.email}\"}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "exchangePattern",
          "nodeId" : "66beaa1f-da59-4c41-b7ba-4614606dc9ec",
          "description" : "InOut",
          "properties" : {
            "_type" : "exchangePattern",
            "active" : true,
            "camelGroup" : "core",
            "exchangePattern" : "InOut",
            "name" : "exchangePattern",
            "url" : ""
          },
          "_type" : "exchangePattern",
          "kameletPropertiesUrl" : "?exchangePattern=InOut"
        }, {
          "name" : "log",
          "nodeId" : "13cd4faf-c8a4-4614-b97a-29004f758c0b",
          "description" : "linkid.search.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "api.user.me.create.linkid.search.in",
            "message" : "${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.me.create.linkid.search.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "jms",
          "nodeId" : "9b3410f1-6d35-42d8-a02a-c02ca658f645",
          "description" : "providers.data.auth0",
          "properties" : {
            "_type" : "jms",
            "active" : true,
            "advancedParameters" : [ ],
            "asyncConsumer" : false,
            "camelGroup" : "component",
            "concurrentConsumers" : "1",
            "connectionFactory" : "#pooledConnectionFactory",
            "destinationName" : "providers.data.auth0",
            "destinationType" : "queue",
            "exchangePattern" : "InOnly",
            "name" : "jms",
            "setConnectionFactory" : true,
            "toDynamicEndpoint" : false,
            "transacted" : false,
            "url" : ""
          },
          "_type" : "jms",
          "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=providers.data.auth0&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
        }, {
          "name" : "log",
          "nodeId" : "df152d7c-be21-45fe-b8c7-78ad2d38f2a2",
          "description" : "linkid.search.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "api.user.me.create.linkid.search.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.me.create.linkid.search.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "6485c535-7657-417b-9763-d98f24f3769c",
          "description" : "Get User Props",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "identities",
              "propertyValue" : "$.[*].identities",
              "uuid" : "23646c88-be39-4b8b-9ccc-3b14d01efa20"
            }, {
              "language" : "JsonPath",
              "propertyName" : "auth0Identity",
              "propertyValue" : "$.[*].identities[?(@.provider == 'auth0')]",
              "uuid" : "6b6b75bf-c73f-48b3-8f37-b3b2ad6bd812"
            }, {
              "language" : "JsonPath",
              "propertyName" : "rsosIdentity",
              "propertyValue" : "$.[*].identities[?(@.provider == 'oauth2' && @.connection == 'RapidSOS')]",
              "uuid" : "55a1f7d6-71e4-4954-a0db-f046494ab4af"
            } ],
            "suppressExceptions" : true,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?identities=$.[*].identities&auth0Identity=$.[*].identities[?(@.provider == 'auth0')]&rsosIdentity=$.[*].identities[?(@.provider == 'oauth2' && @.connection == 'RapidSOS')]&addNamespaces=false&suppressExceptions=true"
        }, {
          "name" : "messageFilter",
          "nodeId" : "2a35a2dd-f0e1-4ee1-8b96-06e045814a55",
          "description" : "",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "filter",
            "label" : "Email Match?",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "c2ec16c4-0ac5-4a4a-967f-8e894a3a0c8a",
              "description" : "Set Identities",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "rsosUserId",
                  "propertyValue" : "oauth2|${exchangeProperty.rsosIdentity[0][user_id]}",
                  "uuid" : "ebc10d8e-6465-434e-99d9-a9995e7b181a"
                }, {
                  "language" : "Simple",
                  "propertyName" : "auth0UserId",
                  "propertyValue" : "${exchangeProperty.auth0Identity[0][user_id]}",
                  "uuid" : "a760cd6b-2a22-4f6a-a395-0cbb2eb31ded"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?rsosUserId=oauth2|${exchangeProperty.rsosIdentity[0][user_id]}&auth0UserId=${exchangeProperty.auth0Identity[0][user_id]}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "788e89f3-2520-4efe-8b4d-683934d7f5cd",
              "description" : "Remove Headers",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
            }, {
              "name" : "setHeaders",
              "nodeId" : "ffb4da86-1314-48cf-b60e-e9d5edc0eb72",
              "description" : "Set Auth0 Operation",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "x-requested-operation",
                  "headerValue" : "linkIdentities",
                  "language" : "Constant",
                  "uuid" : "8bf5f31f-a8e6-4ee5-be21-ecd42cbd51fe"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "exchangePattern",
              "nodeId" : "5da19546-aa31-4471-98d9-07af500ddd1d",
              "description" : "InOut",
              "properties" : {
                "_type" : "exchangePattern",
                "active" : true,
                "camelGroup" : "core",
                "exchangePattern" : "InOut",
                "name" : "exchangePattern",
                "url" : ""
              },
              "_type" : "exchangePattern",
              "kameletPropertiesUrl" : "?exchangePattern=InOut"
            }, {
              "name" : "setBody",
              "nodeId" : "ab764a24-ab10-4854-a03b-fbb59bf23590",
              "description" : "Set Auth0 Request",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "{\"from_userid\": \"${exchangeProperty.rsosUserId}\", \"to_userid\": \"${exchangeProperty.auth0UserId}\"}",
                "language" : "Simple",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"from_userid\": \"${exchangeProperty.rsosUserId}\", \"to_userid\": \"${exchangeProperty.auth0UserId}\"}&language=Simple&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "91b476d4-b90f-4569-9349-4382c41b2419",
              "description" : "linkid.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "api.user.me.create.linkid.in",
                "message" : "${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=api.user.me.create.linkid.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "jms",
              "nodeId" : "a956b7e4-bf2c-4212-8e3c-2d1825d6b3ae",
              "description" : "providers.data.auth0",
              "properties" : {
                "_type" : "jms",
                "active" : true,
                "advancedParameters" : [ ],
                "asyncConsumer" : false,
                "camelGroup" : "component",
                "concurrentConsumers" : "1",
                "connectionFactory" : "#pooledConnectionFactory",
                "destinationName" : "providers.data.auth0",
                "destinationType" : "queue",
                "exchangePattern" : "InOnly",
                "name" : "jms",
                "setConnectionFactory" : true,
                "toDynamicEndpoint" : false,
                "transacted" : false,
                "url" : ""
              },
              "_type" : "jms",
              "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=providers.data.auth0&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
            }, {
              "name" : "log",
              "nodeId" : "ea64c79d-59e4-4b40-9f05-448fe23c70a1",
              "description" : "linkid.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "202.api.me.create.linkid.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.api.me.create.linkid.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.auth0Identity} != null && ${exchangeProperty.auth0Identity.size()} > 0 && ${exchangeProperty.rsosIdentity} != null && ${exchangeProperty.rsosIdentity.size()} > 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          }, {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "setHeaders",
              "nodeId" : "02b1a886-3819-4951-9b90-53625db6ac2f",
              "description" : "Set Token",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "Authorization",
                  "headerValue" : "Bearer ${exchangeProperty.jwtToken}",
                  "language" : "Simple",
                  "uuid" : "54517812-8cdd-4b0c-ba42-864338d2ded9"
                }, {
                  "headerName" : "x-authorized",
                  "headerValue" : "true",
                  "language" : "Simple",
                  "uuid" : "976d9868-8b71-4d9f-bc7a-4b81e9ad602b"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "clearBody",
              "nodeId" : "62f59718-6623-47c1-aa33-6dbbae741b6a",
              "description" : "",
              "properties" : {
                "_type" : "clearBody",
                "camelGroup" : "core",
                "name" : "clearBody",
                "url" : ""
              },
              "_type" : "clearBody",
              "kameletPropertiesUrl" : ""
            }, {
              "name" : "direct",
              "nodeId" : "f6421809-8604-46ff-8646-9a122ed3bac7",
              "description" : "getCurrentUser",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "getCurrentUser",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=getCurrentUser"
            }, {
              "name" : "setBody",
              "nodeId" : "44661c9b-c196-4889-87b2-6ed73add78f6",
              "description" : "Set Response JSON",
              "properties" : {
                "_type" : "setBody",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "expression" : "$.data",
                "language" : "JsonPath",
                "name" : "setBody",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setBody",
              "kameletPropertiesUrl" : "?addNamespaces=false&expression=$.data&language=JsonPath&suppressExceptions=false"
            }, {
              "name" : "setHeaders",
              "nodeId" : "9335c975-ad52-48a6-9eb7-3451dcea72f5",
              "description" : "HTTP201",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpResponseCode",
                  "headerValue" : "201",
                  "language" : "Constant",
                  "uuid" : "b7aa5399-5c50-40c4-92ca-af963a2dea60"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "d80d5aec-3adf-4ba7-b840-28dd2c01a2ed",
              "description" : "renderResponse",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            }, {
              "name" : "seda",
              "nodeId" : "8705e451-5cc7-431d-baff-4076b906c92f",
              "description" : "enqueue-io-event",
              "properties" : {
                "_type" : "seda",
                "active" : true,
                "advancedParameters" : [ ],
                "blockWhenFull" : false,
                "camelGroup" : "core",
                "concurrentConsumers" : "1",
                "endpointName" : "enqueue-io-event",
                "limitConcurrentConsumers" : true,
                "multipleConsumers" : false,
                "name" : "seda",
                "pollTimeout" : "1000",
                "size" : "1000",
                "specifyMaximumCapacitySize" : false,
                "timeout" : "30000",
                "toDynamicEndpoint" : false,
                "url" : "",
                "waitForTaskToComplete" : "Never"
              },
              "_type" : "seda",
              "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-io-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "exists",
        "route" : [ {
          "name" : "log",
          "nodeId" : "6f201262-c498-4cfe-8251-691eea53c635",
          "description" : "me.create.409",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "202.api.me.create.409",
            "message" : "User exists for federatedId ${exchangeProperty.userId}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=202.api.me.create.409&message=User exists for federatedId ${exchangeProperty.userId}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setProperties",
          "nodeId" : "86ef0110-0cc6-47bf-9e9f-cc8dbf61da77",
          "description" : "Set Error",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "error",
              "propertyValue" : "The user already exists.",
              "uuid" : "14c42ba2-7fc7-4205-a487-0051e3e5542f"
            }, {
              "language" : "Constant",
              "propertyName" : "CamelHttpResponseCode",
              "propertyValue" : "409",
              "uuid" : "d11df66d-ef7f-45e4-95b6-ec6e7161e0ca"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?error=The user already exists.&CamelHttpResponseCode=409&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "52aecfeb-287f-4295-807e-805e2a4b7cf3",
          "description" : "Render Error",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "renderError",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=renderError"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} > 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-24",
    "enabled" : true,
    "routeId" : 24,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "e1645924-ef49-4faf-b336-4e0ddefc49ec",
      "description" : "enqueue-io-event",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "1",
        "endpointName" : "enqueue-io-event",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=enqueue-io-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "e1a0721f-278d-436f-bc2d-a9c504f768bf",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "log",
      "nodeId" : "5d02b5ee-ade9-4fab-85be-4283a65b5713",
      "description" : "202.io.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "202.io.out",
        "message" : "Emitting topic: ${header.CamelJmsDestinationName} ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=202.io.out&message=Emitting topic: ${header.CamelJmsDestinationName} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "jms",
      "nodeId" : "4f3da6fd-a3da-4a60-8292-8404ce55d38f",
      "description" : "Emit IO Event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "io.event",
        "destinationType" : "topic",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=io.event&destinationType=topic&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-25",
    "enabled" : true,
    "routeId" : 25,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "286b46c5-50d2-4881-99a2-2821ea262042",
      "description" : "get-auth0-token",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-auth0-token",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-auth0-token"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "6eaec7c5-a7b9-4d6c-8370-fea1f2d26825",
      "description" : "InOut",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOut",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOut"
    }, {
      "name" : "clearBody",
      "nodeId" : "fcd72ed3-d774-40be-9232-6ead181ac232",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "jms",
      "nodeId" : "74fb501b-62e2-44b8-b057-6bdba1c8c4ae",
      "description" : "auth0.manager.tokens",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "auth0.manager.tokens",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=auth0.manager.tokens&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  } ],
  "traits" : [ {
    "name" : "environment",
    "configuration" : { }
  }, {
    "name" : "health",
    "configuration" : {
      "enabled" : true,
      "livenessProbeEnabled" : true,
      "readinessProbeEnabled" : true
    }
  }, {
    "name" : "ingress",
    "configuration" : { }
  } ],
  "id" : "a6c4656b-60f6-4d72-85e8-4def7b2f0ac0",
  "name" : "r202-user-api",
  "description" : "User API",
  "createdAt" : "2023-10-04T18:05:06.731495708",
  "updatedAt" : "2023-10-04T18:05:06.731496357",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}