{
  "revision" : 686,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : "7a879e6e-7dca-403a-b44b-8cbe6ea61eff",
  "currentProfileUuid" : "ae5301ac-5200-4b54-876c-b514515feb02",
  "parameterGroupUuids" : [ "e1d81a6a-655e-42ff-8288-6b0891abe7b0", "3dacce84-b8c8-4759-8bfa-355c8cf6acd6", "ca06b01a-b205-4b2b-9e9d-9f49614e7e94", "c9a8ecf3-391c-4a06-bdc0-68a1a504fdd9" ],
  "repoResourceUuids" : [ "38657aaf-c7a4-4a04-9321-bb750c2e67b5", "07e34d9c-7cea-4532-94e6-7da0f6bddeb3", "e859d27c-054e-489d-96ef-1338b179fde7", "0d41f9ca-58b0-434f-a68e-5855e59f3249", "a1057428-1531-40a8-a129-ed27382e947f", "3b5aa833-0eaa-4cb9-8ce8-ca97eac74110", "71e48dda-80e9-4034-af48-cf39a9a10938", "60b1161c-74ee-4cd8-96a1-0055c90271c1", "f50d9293-f6bf-47b6-b21e-4cfda6eee3c4", "1872a943-2a9b-4513-8739-06e95090b977", "05649865-0c5a-4bfd-bddb-046f69383940", "b05c127c-2cc6-4a3b-be56-d1a5a031a09c", "55882383-5e69-44b0-a3ac-12785e306303", "9fb5f9ac-54fb-4ea4-b9d6-a3f95d92021b", "17e7ca54-4247-4e9c-ba30-d078e3ac407a", "2d21c0b9-a829-4420-84e6-67d34aaf6026", "fedc2ba8-c348-4a92-a89c-844badda8f1f", "1a1810e3-c6f4-4124-923d-b42f2658a8a2", "a0cf3036-e558-4cf0-95cf-b7bee4de52e6", "eddb9cf2-828c-4bf6-a038-93128340a0c2", "5243cc16-b3fd-4710-9338-162c5ca5afae", "b4c494c5-21e9-47bc-84f9-51400a080ac5", "26b4c320-0975-4f15-bfee-1217b8e41053" ],
  "routeDefinitions" : [ {
    "id" : null,
    "camelRouteId" : "route-1",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "e9327506-85d4-4b7c-8c31-64e55a8ab821",
      "description" : "textTranslate",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/text_translate",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "textTranslate",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/text_translate&method=post&operationName=textTranslate&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "dc2eee8a-eb0e-4f14-9cd1-a699960dbeca",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "10a8b33b-ac35-466d-9a0e-57ed29b8e001",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "47c68daa-00a9-4202-a788-1b98707b59a4",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()"
    }, {
      "name" : "log",
      "nodeId" : "b85b1204-2d0a-4747-9a74-dfd9a1617f39",
      "description" : "211.api.trnslt.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "211.api.trnslt.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trnslt.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "b8d313f9-926c-4d5d-8125-3f38b5a4cea6",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "inputLang",
          "propertyValue" : "$.input_dialect",
          "uuid" : "1fa631ae-6405-43cb-83f4-946b72c01c3f"
        }, {
          "language" : "JsonPath",
          "propertyName" : "inputText",
          "propertyValue" : "$.input_text",
          "uuid" : "97cce7ab-5c6d-42cc-bb88-3bf8814a1c17"
        }, {
          "language" : "JsonPath",
          "propertyName" : "outputLang",
          "propertyValue" : "$.output_dialect",
          "uuid" : "a0e7a83f-1045-4b5f-8ca9-23cdc5360701"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageId",
          "propertyValue" : "$.message_id",
          "uuid" : "78ca1693-7ab2-4ba3-8eed-3a8999725c42"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?inputLang=$.input_dialect&inputText=$.input_text&outputLang=$.output_dialect&messageId=$.message_id&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "messageFilter",
      "nodeId" : "aa126e90-b38c-4170-b6b0-a14b66707f13",
      "description" : "inputLang Specified?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "messageFilter",
          "nodeId" : "5f557565-9122-43e3-9600-a735a326dc9d",
          "description" : "Valid Request?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "dslProcessor",
              "nodeId" : "cc25067c-8ec4-4640-a9f4-e6dedb7ad583",
              "description" : "Remove Headers",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".removeHeaders(\"*\", \"x-*\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
            }, {
              "name" : "setProperties",
              "nodeId" : "df0f0e7e-f3a4-48d7-8b89-3ec13d3c77b0",
              "description" : "Get Providers",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "Simple",
                  "propertyName" : "providers",
                  "propertyValue" : "${bean:providerGetters?method=getProviderByLanguage(${exchangeProperty.outputLang.toLowerCase()})}",
                  "uuid" : "6932f901-05f1-41ba-9c9f-60179ac562d8"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?providers=${bean:providerGetters?method=getProviderByLanguage(${exchangeProperty.outputLang.toLowerCase()})}&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "messageFilter",
              "nodeId" : "d02d7300-9255-4ea1-8fe8-bd67f2d1f5c8",
              "description" : "supported?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "filter",
                "label" : "filter",
                "route" : [ {
                  "name" : "log",
                  "nodeId" : "34bd4d9f-41ad-4137-beb7-80289e00c2ff",
                  "description" : "211.api.trans.404",
                  "properties" : {
                    "_type" : "log",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "component",
                    "level" : "INFO",
                    "logType" : "EIP",
                    "loggerName" : "211.api.trans.404",
                    "message" : "${exchangeProperty.outputLang} not supported",
                    "multiline" : false,
                    "name" : "log",
                    "showAll" : false,
                    "showBody" : true,
                    "showBodyType" : true,
                    "showCaughtException" : false,
                    "showExchangeId" : false,
                    "showHeaders" : false,
                    "showProperties" : false,
                    "showStackTrace" : false,
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "log",
                  "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trans.404&message=${exchangeProperty.outputLang} not supported&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                }, {
                  "name" : "setHeaders",
                  "nodeId" : "efce883c-81b2-4933-8f28-bc666ecc13f9",
                  "description" : "HTTP404",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "404",
                      "language" : "Constant",
                      "uuid" : "2316830b-3416-4618-b38c-e21ec5ba7bec"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "clearBody",
                  "nodeId" : "08541687-db3f-4b85-8e28-37587055f319",
                  "description" : "",
                  "properties" : {
                    "_type" : "clearBody",
                    "camelGroup" : "core",
                    "name" : "clearBody",
                    "url" : ""
                  },
                  "_type" : "clearBody",
                  "kameletPropertiesUrl" : ""
                }, {
                  "name" : "stop",
                  "nodeId" : "381ccbcf-497d-4f1e-a5ea-bbb17f42a432",
                  "description" : "",
                  "properties" : {
                    "_type" : "stop",
                    "camelGroup" : "misc",
                    "name" : "stop",
                    "url" : ""
                  },
                  "_type" : "stop",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.providers} == null || ${exchangeProperty.providers.size()} == 0",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              }, {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "splitter",
                  "nodeId" : "9fe5ea2c-3349-4f4f-8a2b-626b28039b89",
                  "description" : "Each Provider",
                  "properties" : {
                    "_type" : "splitter",
                    "active" : true,
                    "addNamespaces" : false,
                    "aggregationStrategy" : "ListAggregationStrategy",
                    "camelGroup" : "routing",
                    "expression" : "${exchangeProperty.providers}",
                    "language" : "Simple",
                    "name" : "splitter",
                    "namespaces" : [ ],
                    "parallelProcessing" : true,
                    "shareUnitOfWork" : false,
                    "stopOnException" : false,
                    "streaming" : false,
                    "suppressExceptions" : false,
                    "timeout" : "3500",
                    "token" : ",",
                    "tokenize" : false,
                    "url" : "",
                    "useAggregationStrategy" : true
                  },
                  "_type" : "splitter",
                  "branches" : [ {
                    "type" : "split",
                    "label" : "split",
                    "route" : [ {
                      "name" : "exchangePattern",
                      "nodeId" : "bade498b-4ae9-45f1-a084-dac6693c4822",
                      "description" : "InOut",
                      "properties" : {
                        "_type" : "exchangePattern",
                        "active" : true,
                        "camelGroup" : "core",
                        "exchangePattern" : "InOut",
                        "name" : "exchangePattern",
                        "url" : ""
                      },
                      "_type" : "exchangePattern",
                      "kameletPropertiesUrl" : "?exchangePattern=InOut"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "b895dd46-aa52-48bf-bcf1-852f787178ae",
                      "description" : "Set Provider Queue",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelJmsDestinationName",
                          "headerValue" : "providers.${body}.translate",
                          "language" : "Simple",
                          "uuid" : "ff44d98e-3993-4287-bc04-99c5eae9c1c4"
                        }, {
                          "headerName" : "X-Enable-Confidence",
                          "headerValue" : "true",
                          "language" : "Constant",
                          "uuid" : "71041ed0-d47f-4780-a002-2f0a9f28410d"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "process",
                      "nodeId" : "812d6a9a-d603-4465-b576-8a4063d36c10",
                      "description" : "Set Request",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "ObjectMapper jackson = new ObjectMapper();\nHashMap<String, String> requestJson = new HashMap<String, String>() {{\n\tput(\"input_text\", (String)exchange.getProperty(\"inputText\"));\n\tput(\"input_dialect\", (String)exchange.getProperty(\"inputLang\"));\n\tput(\"output_dialect\", (String)exchange.getProperty(\"outputLang\"));\n}};\nexchange.getIn().setBody(jackson.writeValueAsString(requestJson));",
                        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=ObjectMapper jackson = new ObjectMapper();\nHashMap<String, String> requestJson = new HashMap<String, String>() {{\n\tput(\"input_text\", (String)exchange.getProperty(\"inputText\"));\n\tput(\"input_dialect\", (String)exchange.getProperty(\"inputLang\"));\n\tput(\"output_dialect\", (String)exchange.getProperty(\"outputLang\"));\n}};\nexchange.getIn().setBody(jackson.writeValueAsString(requestJson));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
                    }, {
                      "name" : "log",
                      "nodeId" : "5a7b30ab-9968-4c51-bc97-2f23a459c37b",
                      "description" : "211.api.trslt.jms.in",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "211.api.trslt.jms.in",
                        "message" : "${header.CamelJmsDestinationName} ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trslt.jms.in&message=${header.CamelJmsDestinationName} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "jms",
                      "nodeId" : "354b47e4-6493-4d74-9bd8-dceeae0fc5aa",
                      "description" : "provider.translate",
                      "properties" : {
                        "_type" : "jms",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "asyncConsumer" : false,
                        "camelGroup" : "component",
                        "concurrentConsumers" : "1",
                        "connectionFactory" : "#pooledConnectionFactory",
                        "destinationName" : "queue.name?timeToLive=5000&requestTimeout=35000",
                        "destinationType" : "queue",
                        "exchangePattern" : "InOnly",
                        "name" : "jms",
                        "setConnectionFactory" : true,
                        "toDynamicEndpoint" : false,
                        "transacted" : false,
                        "url" : ""
                      },
                      "_type" : "jms",
                      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=queue.name?timeToLive=5000&requestTimeout=35000&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
                    }, {
                      "name" : "log",
                      "nodeId" : "680597ab-e4ff-447c-ac84-1f949ace9aaa",
                      "description" : "211.api.trslt.jms.out",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "211.api.trslt.jms.out",
                        "message" : "(${header.CamelHttpResponseCode}) ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trslt.jms.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "setProperties",
                      "nodeId" : "e05fa61e-dd08-4d13-8cf6-282450654caa",
                      "description" : "Error Check",
                      "properties" : {
                        "_type" : "setProperties",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "name" : "setProperties",
                        "namespaces" : [ ],
                        "propertyList" : [ {
                          "language" : "JsonPath",
                          "propertyName" : "hasError",
                          "propertyValue" : "$.error",
                          "uuid" : "122cddfb-4a34-432a-98f8-0fc2752bd6de"
                        }, {
                          "language" : "JsonPath",
                          "propertyName" : "provider",
                          "propertyValue" : "$.data.provider",
                          "uuid" : "1fae6874-4b96-46b3-acff-481644977eef"
                        }, {
                          "language" : "JsonPath",
                          "propertyName" : "outputText",
                          "propertyValue" : "$.output_text",
                          "uuid" : "7a5f474c-2cdf-4c53-9e11-f189ae7da06d"
                        } ],
                        "suppressExceptions" : true,
                        "url" : ""
                      },
                      "_type" : "setProperties",
                      "kameletPropertiesUrl" : "?hasError=$.error&provider=$.data.provider&outputText=$.output_text&addNamespaces=false&suppressExceptions=true"
                    }, {
                      "name" : "messageRouter",
                      "nodeId" : "a7f737ee-68de-4083-ac4d-ab9fdacbc5c4",
                      "description" : "",
                      "properties" : {
                        "_type" : "messageRouter",
                        "active" : true,
                        "camelGroup" : "routing",
                        "name" : "messageRouter",
                        "url" : ""
                      },
                      "_type" : "messageRouter",
                      "branches" : [ {
                        "type" : "when",
                        "label" : "hasError == true",
                        "route" : [ {
                          "name" : "log",
                          "nodeId" : "7d65d399-f54b-4173-80ec-c68268df7379",
                          "description" : "211.api.trslt.rslt.err",
                          "properties" : {
                            "_type" : "log",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "component",
                            "level" : "WARN",
                            "logType" : "EIP",
                            "loggerName" : "211.api.trslt.rslt.err",
                            "message" : "Translation error encountered ${exchangeProperty.hasError}",
                            "multiline" : false,
                            "name" : "log",
                            "showAll" : false,
                            "showBody" : true,
                            "showBodyType" : true,
                            "showCaughtException" : false,
                            "showExchangeId" : false,
                            "showHeaders" : false,
                            "showProperties" : false,
                            "showStackTrace" : false,
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "log",
                          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=211.api.trslt.rslt.err&message=Translation error encountered ${exchangeProperty.hasError}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                        }, {
                          "name" : "clearBody",
                          "nodeId" : "e49ecc59-93b2-4db9-ba07-40d1eb8a1536",
                          "description" : "",
                          "properties" : {
                            "_type" : "clearBody",
                            "camelGroup" : "core",
                            "name" : "clearBody",
                            "url" : ""
                          },
                          "_type" : "clearBody",
                          "kameletPropertiesUrl" : ""
                        } ],
                        "properties" : {
                          "addNamespaces" : "false",
                          "condition" : "${exchangeProperty.hasError} != null",
                          "language" : "Simple",
                          "namespaces" : [ ],
                          "suppressExceptions" : "false"
                        }
                      }, {
                        "type" : "when",
                        "label" : "!hasError && messageId",
                        "route" : [ {
                          "name" : "log",
                          "nodeId" : "150c1b93-6a0b-4cb3-b3de-da41c54e61f6",
                          "description" : "",
                          "properties" : {
                            "_type" : "log",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "camelGroup" : "component",
                            "level" : "INFO",
                            "logType" : "EIP",
                            "loggerName" : "log",
                            "message" : "Storing translation ${body}",
                            "multiline" : false,
                            "name" : "log",
                            "showAll" : false,
                            "showBody" : true,
                            "showBodyType" : true,
                            "showCaughtException" : false,
                            "showExchangeId" : false,
                            "showHeaders" : false,
                            "showProperties" : false,
                            "showStackTrace" : false,
                            "toDynamicEndpoint" : false,
                            "url" : ""
                          },
                          "_type" : "log",
                          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=Storing translation ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                        }, {
                          "name" : "seda",
                          "nodeId" : "dfe5acda-c5cf-4cdb-8418-8640ea1cf6a8",
                          "description" : "store-translation",
                          "properties" : {
                            "_type" : "seda",
                            "active" : true,
                            "advancedParameters" : [ ],
                            "blockWhenFull" : false,
                            "camelGroup" : "core",
                            "concurrentConsumers" : "1",
                            "endpointName" : "store-translation",
                            "limitConcurrentConsumers" : true,
                            "multipleConsumers" : false,
                            "name" : "seda",
                            "pollTimeout" : "1000",
                            "size" : "1000",
                            "specifyMaximumCapacitySize" : false,
                            "timeout" : "30000",
                            "toDynamicEndpoint" : false,
                            "url" : "",
                            "waitForTaskToComplete" : "Never"
                          },
                          "_type" : "seda",
                          "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=store-translation&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
                        } ],
                        "properties" : {
                          "addNamespaces" : "false",
                          "condition" : "${exchangeProperty.hasError} == null && ${exchangeProperty.messageId} != null",
                          "language" : "Simple",
                          "namespaces" : [ ],
                          "suppressExceptions" : "false"
                        }
                      } ],
                      "kameletPropertiesUrl" : ""
                    } ],
                    "properties" : { }
                  }, {
                    "type" : "route",
                    "label" : "route",
                    "route" : [ {
                      "name" : "process",
                      "nodeId" : "37340d7a-75f4-4489-ad89-151ac66dd4b5",
                      "description" : "Format Response",
                      "properties" : {
                        "_type" : "process",
                        "active" : true,
                        "camelGroup" : "transform",
                        "code" : "ObjectMapper jackson = new ObjectMapper();\nList<HashMap<String, Object>> responseList = exchange.getIn().getBody(List.class);\nif(responseList == null){\n\texchange.getIn().setBody(\"[]\");\n}\nelse {\n\ttry {\n\t\tresponseList.sort((o1, o2)-> o2.get(\"score\").compareTo(o1.get(\"score\")));\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\n\texchange.getIn().setBody(jackson.writeValueAsString(responseList));\t\n}\n",
                        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                        "name" : "process",
                        "url" : ""
                      },
                      "_type" : "process",
                      "kameletPropertiesUrl" : "?code=ObjectMapper jackson = new ObjectMapper();\nList<HashMap<String, Object>> responseList = exchange.getIn().getBody(List.class);\nif(responseList == null){\n\texchange.getIn().setBody(\"[]\");\n}\nelse {\n\ttry {\n\t\tresponseList.sort((o1, o2)-> o2.get(\"score\").compareTo(o1.get(\"score\")));\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\n\texchange.getIn().setBody(jackson.writeValueAsString(responseList));\t\n}\n&import=import com.fasterxml.jackson.databind.ObjectMapper;"
                    }, {
                      "name" : "setHeaders",
                      "nodeId" : "e02704c6-686f-4ca5-8a21-0f779d876570",
                      "description" : "HTTP200",
                      "properties" : {
                        "_type" : "setHeaders",
                        "active" : true,
                        "addNamespaces" : false,
                        "camelGroup" : "core",
                        "headerList" : [ {
                          "headerName" : "CamelHttpResponseCode",
                          "headerValue" : "200",
                          "language" : "Constant",
                          "uuid" : "6a4d811b-e384-45cb-879e-749b6617324a"
                        } ],
                        "name" : "setHeaders",
                        "namespaces" : [ ],
                        "suppressExceptions" : false,
                        "url" : ""
                      },
                      "_type" : "setHeaders",
                      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                    }, {
                      "name" : "dslProcessor",
                      "nodeId" : "7c5c5b95-e7a0-44d1-90e1-a9c04e0979fc",
                      "description" : "Render Response",
                      "properties" : {
                        "_type" : "dslProcessor",
                        "active" : true,
                        "camelGroup" : "core",
                        "dsl" : ".unmarshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson, ArrayList.class).bean(\"renderResponse\")",
                        "name" : "dslProcessor",
                        "url" : ""
                      },
                      "_type" : "dslProcessor",
                      "kameletPropertiesUrl" : "?dsl=.unmarshal().json(org.apache.camel.model.dataformat.JsonLibrary.Jackson, ArrayList.class).bean(\"renderResponse\")"
                    }, {
                      "name" : "log",
                      "nodeId" : "d1452365-02cf-4684-92f4-e75eb5c59dfa",
                      "description" : "211.api.trans.out",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "211.api.trans.out",
                        "message" : "(${header.CamelHttpResponseCode}) ${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trans.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    } ],
                    "properties" : { }
                  } ],
                  "kameletPropertiesUrl" : "?addNamespaces=false&aggregationStrategy=ListAggregationStrategy&expression=${exchangeProperty.providers}&language=Simple&parallelProcessing=true&shareUnitOfWork=false&stopOnException=false&streaming=false&suppressExceptions=false&timeout=3500&token=,&tokenize=false&useAggregationStrategy=true"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "input==output",
            "route" : [ {
              "name" : "process",
              "nodeId" : "fab40a90-b072-4e9c-a567-b8f236d51a55",
              "description" : "Set Response",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "ObjectMapper mapper = new ObjectMapper();\n\nString inputLang = (String)exchange.getProperty(\"inputLang\");\nString outputLang = (String)exchange.getProperty(\"outputLang\");\nString inputText = (String)exchange.getProperty(\"inputText\");\nString detectedDialect = (String)exchange.getProperty(\"detectedDialect\");\n\nHashMap<String, Object> response = new HashMap<String, Object>() {{\n\tput(\"input_dialect\", inputLang);\n\tput(\"output_dialect\", outputLang);\n\tput(\"input_text\", inputText);\n\tput(\"output_text\", inputText);\n\tput(\"score\", 1);\n}};\n\nif (detectedDialect != null) {\n\tresponse.put(\"detected_dialect\", detectedDialect);\n\tresponse.put(\"detected_confidence\", exchange.getProperty(\"detectedConfidence\"));\n\tresponse.put(\"input_dialect\", null);\n\texchange.getIn().setHeader(\"x-response-metadata\", null);\n}\n\nArrayList<HashMap<String, Object>> jsonResponse = new ArrayList<HashMap<String, Object>>() {{\n\tadd(response);\n}};\n\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);\nexchange.getIn().setBody(jsonResponse);",
                "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nString inputLang = (String)exchange.getProperty(\"inputLang\");\nString outputLang = (String)exchange.getProperty(\"outputLang\");\nString inputText = (String)exchange.getProperty(\"inputText\");\nString detectedDialect = (String)exchange.getProperty(\"detectedDialect\");\n\nHashMap<String, Object> response = new HashMap<String, Object>() {{\n\tput(\"input_dialect\", inputLang);\n\tput(\"output_dialect\", outputLang);\n\tput(\"input_text\", inputText);\n\tput(\"output_text\", inputText);\n\tput(\"score\", 1);\n}};\n\nif (detectedDialect != null) {\n\tresponse.put(\"detected_dialect\", detectedDialect);\n\tresponse.put(\"detected_confidence\", exchange.getProperty(\"detectedConfidence\"));\n\tresponse.put(\"input_dialect\", null);\n\texchange.getIn().setHeader(\"x-response-metadata\", null);\n}\n\nArrayList<HashMap<String, Object>> jsonResponse = new ArrayList<HashMap<String, Object>>() {{\n\tadd(response);\n}};\n\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);\nexchange.getIn().setBody(jsonResponse);&import=import com.fasterxml.jackson.databind.ObjectMapper;"
            }, {
              "name" : "dslProcessor",
              "nodeId" : "7bd34ec2-0016-4ea8-83a8-87878b65a84c",
              "description" : "Render Response",
              "properties" : {
                "_type" : "dslProcessor",
                "active" : true,
                "camelGroup" : "core",
                "dsl" : ".bean(\"renderResponse\")",
                "name" : "dslProcessor",
                "url" : ""
              },
              "_type" : "dslProcessor",
              "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
            }, {
              "name" : "log",
              "nodeId" : "7fd195ca-e238-4e87-8769-099a8841479f",
              "description" : "211.api.trnslt.200",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "211.api.trnslt.200",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.trnslt.200&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "stop",
              "nodeId" : "c1fc8828-6a26-4e72-9c1f-6ab1284aaedc",
              "description" : "",
              "properties" : {
                "_type" : "stop",
                "camelGroup" : "misc",
                "name" : "stop",
                "url" : ""
              },
              "_type" : "stop",
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.inputLang} != null && ${exchangeProperty.inputLang.substring(0,2)} == ${exchangeProperty.outputLang.substring(0,2)}",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "inputLang==null",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "01354ea0-b557-4d0a-a846-7294042ce62f",
          "description" : "to:textTranslateDetect",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "textTranslateDetect",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=textTranslateDetect"
        }, {
          "name" : "setProperties",
          "nodeId" : "235c054c-3a43-4be2-b2e9-282a9a1bff71",
          "description" : "Set Detected Lang",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "detectedDialect",
              "propertyValue" : "$.data[0].detected_dialect",
              "uuid" : "eb972589-b45e-4356-b602-ed6bd177eb8e"
            }, {
              "language" : "JsonPath",
              "propertyName" : "detectedConfidence",
              "propertyValue" : "$.data[0].detected_confidence",
              "uuid" : "8b605a63-7d2a-4e06-9e77-ea2e4f934001"
            }, {
              "language" : "Simple",
              "propertyName" : "inputLang",
              "propertyValue" : "${exchangeProperty.detectedDialect}",
              "uuid" : "8cef3b61-e44e-44ab-86a5-8ff8ac22b899"
            } ],
            "suppressExceptions" : true,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?detectedDialect=$.data[0].detected_dialect&detectedConfidence=$.data[0].detected_confidence&inputLang=${exchangeProperty.detectedDialect}&addNamespaces=false&suppressExceptions=true"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.inputLang} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "b3ccaea1-a227-4261-8614-291af9084893",
      "description" : "sql-get-providers",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "sql-get-providers",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=sql-get-providers"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "dfded01a-1574-4765-9e70-25cf0b79841b",
      "description" : "SQL Get Providers",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT code, string_agg(provider, \\',\\') AS providers FROM dialects WHERE text IS TRUE AND active IS TRUE GROUP BY code?dataSource=#dsPostgres&OutputType=SelectList",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT code, string_agg(provider, \\',\\') AS providers FROM dialects WHERE text IS TRUE AND active IS TRUE GROUP BY code?dataSource=#dsPostgres&OutputType=SelectList"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-3",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "putRequest",
      "nodeId" : "decd1ab0-c804-490b-8557-013e1d276970",
      "description" : "textTranslateDetect",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/text_translate",
        "method" : "put",
        "name" : "putRequest",
        "operationName" : "textTranslateDetect",
        "produces" : "application/json",
        "requestmethod" : "PUT",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/text_translate&method=put&operationName=textTranslateDetect&produces=application/json&requestmethod=PUT"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "330c8e45-1ae7-4276-8b7e-7f206fdf840c",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "1bd29157-d477-4780-ac05-bedbd108a6f2",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "7f5f736a-eb8a-43dc-9328-68f73d99dfdb",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()"
    }, {
      "name" : "log",
      "nodeId" : "4214ff60-bb82-4e4f-acfa-79524a1309bd",
      "description" : "211.api.detect.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "211.api.detect.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.detect.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "10cd4021-8d93-4e6f-bc6e-304c81e682ab",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "inputText",
          "propertyValue" : "$.input_text",
          "uuid" : "ba80097a-dbc3-4994-85a3-99cd45d4beb6"
        }, {
          "language" : "Simple",
          "propertyName" : "providers",
          "propertyValue" : "${bean:providerGetters?method=getAutoDetectProviders}",
          "uuid" : "35a4bfb5-4038-4c8f-ab90-b8c01c219e37"
        }, {
          "language" : "Header",
          "propertyName" : "minThreshold",
          "propertyValue" : "min_threshold",
          "uuid" : "4ff1c29a-0395-46de-9ea7-924e3ad63629"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?inputText=$.input_text&providers=${bean:providerGetters?method=getAutoDetectProviders}&minThreshold=min_threshold&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4a3bdfb3-9da1-45b1-8618-e24c819e59dc",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "splitter",
      "nodeId" : "a619f67c-08cd-4b7e-abe6-a3bbab338e46",
      "description" : "Each Provider",
      "properties" : {
        "_type" : "splitter",
        "active" : true,
        "addNamespaces" : false,
        "aggregationStrategy" : "ListMapAggregationStrategy",
        "camelGroup" : "routing",
        "expression" : "${exchangeProperty.providers}",
        "language" : "Simple",
        "name" : "splitter",
        "namespaces" : [ ],
        "parallelProcessing" : true,
        "shareUnitOfWork" : false,
        "stopOnException" : false,
        "streaming" : false,
        "suppressExceptions" : false,
        "timeout" : "2500",
        "token" : ",",
        "tokenize" : false,
        "url" : "",
        "useAggregationStrategy" : true
      },
      "_type" : "splitter",
      "branches" : [ {
        "type" : "split",
        "label" : "split",
        "route" : [ {
          "name" : "exchangePattern",
          "nodeId" : "dbffc9dd-25d2-4a3a-98f5-d472c7c81670",
          "description" : "InOut",
          "properties" : {
            "_type" : "exchangePattern",
            "active" : true,
            "camelGroup" : "core",
            "exchangePattern" : "InOut",
            "name" : "exchangePattern",
            "url" : ""
          },
          "_type" : "exchangePattern",
          "kameletPropertiesUrl" : "?exchangePattern=InOut"
        }, {
          "name" : "setHeaders",
          "nodeId" : "f04615da-d1a2-4963-a948-3c70a23bce2d",
          "description" : "Set Provider Queue",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelJmsDestinationName",
              "headerValue" : "providers.${body}.detect",
              "language" : "Simple",
              "uuid" : "acb7e1aa-d988-48c6-9f21-89fdb9d29a1e"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "setBody",
          "nodeId" : "028db1f3-d85b-4d7f-8c6b-5bff1186c942",
          "description" : "Set Request",
          "properties" : {
            "_type" : "setBody",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "expression" : "{\"input_text\": \"${exchangeProperty.inputText}\"}",
            "language" : "Simple",
            "name" : "setBody",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setBody",
          "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"input_text\": \"${exchangeProperty.inputText}\"}&language=Simple&suppressExceptions=false"
        }, {
          "name" : "log",
          "nodeId" : "f7670ce1-9b2a-44d8-8cdb-76deaf6aef8e",
          "description" : "211.api.detect.jms.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "211.api.detect.jms.in",
            "message" : "${header.CamelJmsDestinationName} ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.detect.jms.in&message=${header.CamelJmsDestinationName} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "jms",
          "nodeId" : "e005b4c8-9cd0-45c9-8de9-7234e426a7db",
          "description" : "provider.detect",
          "properties" : {
            "_type" : "jms",
            "active" : true,
            "advancedParameters" : [ ],
            "asyncConsumer" : false,
            "camelGroup" : "component",
            "concurrentConsumers" : "1",
            "connectionFactory" : "#pooledConnectionFactory",
            "destinationName" : "queue.name?timeToLive=5000",
            "destinationType" : "queue",
            "exchangePattern" : "InOnly",
            "name" : "jms",
            "setConnectionFactory" : true,
            "toDynamicEndpoint" : false,
            "transacted" : false,
            "url" : ""
          },
          "_type" : "jms",
          "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=queue.name?timeToLive=5000&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
        }, {
          "name" : "log",
          "nodeId" : "15fcede5-5a16-429f-be7e-43eb538af114",
          "description" : "211.api.detect.jms.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "211.api.detect.jms.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.detect.jms.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : { }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "process",
          "nodeId" : "a415a0ab-7f32-4181-a976-2e61b947b8a3",
          "description" : "Format Response",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ObjectMapper jackson = new ObjectMapper();\nArrayList<HashMap<String, Object>> responseList = jackson.readValue((String)exchange.getIn().getBody(), ArrayList.class);\n\nresponseList.sort((o1, o2)\n\t-> o2.get(\"detected_confidence\").compareTo(o1.get(\"detected_confidence\")));\n\n\n/*\nSet<String> langListSet = new HashSet<String>();\nfor (HashMap result : responseList) \n\tlangListSet.add(result.get(\"detected_dialect\"));\n\nArrayList<HashMap<String, Object>> responseListFinal = new HashMap<String, Object>();\n\nSystem.out.println(\"responseList\");\nSystem.out.println(responseList);\n\nfor (lang : langListSet) {\n\tDouble confidence = 0.0;\n\tint count = 0;\n\tArrayList<HashMap<String, Object>> langMatch = responseList.stream().filter(l -> l.get(\"detected_dialect\").equals(lang))\n\t\t.collect(Collectors.toList());\n\t\n\tfor (HashMap eachLang : langMatch) {\n\t\tSystem.out.println(Double.parseDouble(String.valueOf(eachLang.get(\"detected_confidence\"))));\n\t\tconfidence += Double.parseDouble(String.valueOf(eachLang.get(\"detected_confidence\")));\n\t\tcount++;\n\t}\n\tSystem.out.printf(\"Lang: %s Count: %d Confidence: %f\", lang, count, confidence);\n\t//System.out.println(responseList.stream().filter(l -> l.get(\"detected_confidence\").equals(lang)).collect(Collectors.toList()));\n}*/\n\n\ntry {\n\tDouble average = penalty = 0;\n\tDouble acc_threshold = 20;\n\tDouble floor = 0.2;\n\t\n\tif (exchange.getProperty(\"minThreshold\") != null) {\n\t\ttry {\n\t\t\tacc_threshold = Double.parseDouble(String.valueOf(exchange.getProperty(\"minThreshold\")));\n\t\t} catch (Exception e) {}\n\t}\t\n\n\tacc_threshold *= 0.01;\n\t\n\tSet<String> lang_list = new HashSet<String>();\n\t\t\n\tArrayList<HashMap<String, Object>> responseListFinal = new HashMap<String, Object>();\n\tfor (HashMap result : responseList) {\n\t\tDouble accuracy = result.get(\"detected_confidence\");\n\t\tif (Double.compare(accuracy, floor) > 0) {\n\t\t\taverage += accuracy;\n\t\t\tlang_list.add(result.detected_dialect);\n\t\t\tresponseListFinal.add(result);\n\t\t}\n\t}\n\n\taverage = average/responseListFinal.size();\n\t\n\t// If we had to drop low scoring results, add penalty\n\tif (responseList.size() != responseListFinal.size()) {\n\t\tSystem.out.printf(\"Y1 %f\", average);\n\t\taverage -= (responseList.size() - responseListFinal.size()) * 0.0125;\n\t\tSystem.out.printf(\"Y2 %f\", average);\n\t}\n\t\t\n\tresponseList = responseListFinal;\n\t// If average accuracy falls below min threshold where one or more providers agree on same detected lang\n\t// OR\n\t// if average accuracy falls below max threshold where each provider thinks it a different lang\n\t\n\tDouble weighted_average = average;\n\tif (lang_list.size() > 1)\n\t\tweighted_average -= lang_list.size() * 0.025;\n\t\n\tif (Double.compare(acc_threshold, weighted_average) > 0)\n\t\tresponseList.clear();\n\t\n\tHashMap<String, Object> responseMeta = new HashMap<String, Object>() {{\n\t\tput(\"average\", average);\n\t\tput(\"weighted_average\", weighted_average);\n\t\tput(\"min_threshold\", acc_threshold);\n\t\tput(\"providers\", responseList.size());\n\t}};\n\t\n\texchange.getIn().setHeader(\"x-response-metadata\", jackson.writeValueAsString(responseMeta));\n} catch (Exception e) {\n\tSystem.out.println(e);\n}\n\n/*\ntry {\n\tCosineSimilarity cs = new CosineSimilarity();\n\tdouble sim_score = cs.score(\"this is text file one\", \"this is text file two\");\n\tSystem.printf(\"Score: \" + sim_score);\n} catch (Exception e) {\n\tSystem.out.println(e);\n}\n*/\nexchange.getIn().setBody(responseList);",
            "import" : "import java.util.Collections;\nimport java.util.Comparator;\nimport java.util.stream.Collectors;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n//import CosineSimilarity;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ObjectMapper jackson = new ObjectMapper();\nArrayList<HashMap<String, Object>> responseList = jackson.readValue((String)exchange.getIn().getBody(), ArrayList.class);\n\nresponseList.sort((o1, o2)\n\t-> o2.get(\"detected_confidence\").compareTo(o1.get(\"detected_confidence\")));\n\n\n/*\nSet<String> langListSet = new HashSet<String>();\nfor (HashMap result : responseList) \n\tlangListSet.add(result.get(\"detected_dialect\"));\n\nArrayList<HashMap<String, Object>> responseListFinal = new HashMap<String, Object>();\n\nSystem.out.println(\"responseList\");\nSystem.out.println(responseList);\n\nfor (lang : langListSet) {\n\tDouble confidence = 0.0;\n\tint count = 0;\n\tArrayList<HashMap<String, Object>> langMatch = responseList.stream().filter(l -> l.get(\"detected_dialect\").equals(lang))\n\t\t.collect(Collectors.toList());\n\t\n\tfor (HashMap eachLang : langMatch) {\n\t\tSystem.out.println(Double.parseDouble(String.valueOf(eachLang.get(\"detected_confidence\"))));\n\t\tconfidence += Double.parseDouble(String.valueOf(eachLang.get(\"detected_confidence\")));\n\t\tcount++;\n\t}\n\tSystem.out.printf(\"Lang: %s Count: %d Confidence: %f\", lang, count, confidence);\n\t//System.out.println(responseList.stream().filter(l -> l.get(\"detected_confidence\").equals(lang)).collect(Collectors.toList()));\n}*/\n\n\ntry {\n\tDouble average = penalty = 0;\n\tDouble acc_threshold = 20;\n\tDouble floor = 0.2;\n\t\n\tif (exchange.getProperty(\"minThreshold\") != null) {\n\t\ttry {\n\t\t\tacc_threshold = Double.parseDouble(String.valueOf(exchange.getProperty(\"minThreshold\")));\n\t\t} catch (Exception e) {}\n\t}\t\n\n\tacc_threshold *= 0.01;\n\t\n\tSet<String> lang_list = new HashSet<String>();\n\t\t\n\tArrayList<HashMap<String, Object>> responseListFinal = new HashMap<String, Object>();\n\tfor (HashMap result : responseList) {\n\t\tDouble accuracy = result.get(\"detected_confidence\");\n\t\tif (Double.compare(accuracy, floor) > 0) {\n\t\t\taverage += accuracy;\n\t\t\tlang_list.add(result.detected_dialect);\n\t\t\tresponseListFinal.add(result);\n\t\t}\n\t}\n\n\taverage = average/responseListFinal.size();\n\t\n\t// If we had to drop low scoring results, add penalty\n\tif (responseList.size() != responseListFinal.size()) {\n\t\tSystem.out.printf(\"Y1 %f\", average);\n\t\taverage -= (responseList.size() - responseListFinal.size()) * 0.0125;\n\t\tSystem.out.printf(\"Y2 %f\", average);\n\t}\n\t\t\n\tresponseList = responseListFinal;\n\t// If average accuracy falls below min threshold where one or more providers agree on same detected lang\n\t// OR\n\t// if average accuracy falls below max threshold where each provider thinks it a different lang\n\t\n\tDouble weighted_average = average;\n\tif (lang_list.size() > 1)\n\t\tweighted_average -= lang_list.size() * 0.025;\n\t\n\tif (Double.compare(acc_threshold, weighted_average) > 0)\n\t\tresponseList.clear();\n\t\n\tHashMap<String, Object> responseMeta = new HashMap<String, Object>() {{\n\t\tput(\"average\", average);\n\t\tput(\"weighted_average\", weighted_average);\n\t\tput(\"min_threshold\", acc_threshold);\n\t\tput(\"providers\", responseList.size());\n\t}};\n\t\n\texchange.getIn().setHeader(\"x-response-metadata\", jackson.writeValueAsString(responseMeta));\n} catch (Exception e) {\n\tSystem.out.println(e);\n}\n\n/*\ntry {\n\tCosineSimilarity cs = new CosineSimilarity();\n\tdouble sim_score = cs.score(\"this is text file one\", \"this is text file two\");\n\tSystem.printf(\"Score: \" + sim_score);\n} catch (Exception e) {\n\tSystem.out.println(e);\n}\n*/\nexchange.getIn().setBody(responseList);&import=import java.util.Collections;\nimport java.util.Comparator;\nimport java.util.stream.Collectors;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n//import CosineSimilarity;"
        }, {
          "name" : "setHeaders",
          "nodeId" : "c4061fce-a4fb-4611-8826-3928cb298aeb",
          "description" : "HTTP200",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "200",
              "language" : "Constant",
              "uuid" : "9a3eb68c-0a77-44ae-9925-818d98cd26b2"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "dslProcessor",
          "nodeId" : "404107db-0c23-46d0-9c44-6d31c8d4b62f",
          "description" : "Render Response",
          "properties" : {
            "_type" : "dslProcessor",
            "active" : true,
            "camelGroup" : "core",
            "dsl" : ".bean(\"renderResponse\")",
            "name" : "dslProcessor",
            "url" : ""
          },
          "_type" : "dslProcessor",
          "kameletPropertiesUrl" : "?dsl=.bean(\"renderResponse\")"
        }, {
          "name" : "log",
          "nodeId" : "79603b32-a508-44d8-8ad3-696068f783a2",
          "description" : "211.api.detect.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "211.api.detect.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=211.api.detect.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?addNamespaces=false&aggregationStrategy=ListMapAggregationStrategy&expression=${exchangeProperty.providers}&language=Simple&parallelProcessing=true&shareUnitOfWork=false&stopOnException=false&streaming=false&suppressExceptions=false&timeout=2500&token=,&tokenize=false&useAggregationStrategy=true"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "204a7f67-7e56-4591-9e07-c04ce83caa41",
      "description" : "velocity-loader",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "velocity-loader",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=velocity-loader"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "7ee261bc-187c-4b7f-93e5-52f36b83c5a5",
      "description" : "Load Velocity",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:dialects.select.sql.vm?allowContextMapAll=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:dialects.select.sql.vm?allowContextMapAll=true\")"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "getRequest",
      "nodeId" : "609f78f7-e9d6-4c4b-a512-064c062afb63",
      "description" : "getSupportedLanguages",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/api/v1/text_translate",
        "method" : "get",
        "name" : "getRequest",
        "operationName" : "getSupportedLanguages",
        "produces" : "application/json",
        "requestmethod" : "GET",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/api/v1/text_translate&method=get&operationName=getSupportedLanguages&produces=application/json&requestmethod=GET"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b7ffc1da-f6db-49a0-b9ff-06d8cde1410b",
      "description" : "Validate JWT",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('validateJwt')\n    .filter().simple('${exchangeProperty.jwtAuth} != true')\n                .stop()\n            .end()"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5e256544-72fa-418e-a44c-71b391330265",
      "description" : "Validate Request",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"bean:validateRequest\")\n    .filter().simple('${header.CamelHttpResponseCode} >= 400')\n        .bean('renderResponse')\n      .log(LoggingLevel.WARN, 'log', '${header.CamelHttpResponseCode} ${body}') \n            .stop()\n        .end()"
    }, {
      "name" : "setProperties",
      "nodeId" : "97b4a65d-432e-430c-b6be-2d219eb16fd2",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "languageCode",
          "propertyValue" : "languageCode",
          "uuid" : "8a402fcb-3519-467b-81e1-465ed4c17a6a"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?languageCode=languageCode&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "70df2ae9-ae59-4056-913b-b6246f3f6873",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "4985c1df-ad68-43c5-95ad-80a2bdb87bd7",
      "description" : "SQL Get Languages",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:dialects.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:dialects.select.sql.vm?allowContextMapAll=true\")\n\t.log(LoggingLevel.OFF, 'log', '${body}')\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
    }, {
      "name" : "process",
      "nodeId" : "914719f3-beda-4805-801d-3d4282cb9aaf",
      "description" : "Parse / Sort",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ArrayList<HashMap<String, Object>> responseList = (ArrayList)exchange.getIn().getBody();\n\ntry {\n\tresponseList.sort((o1, o2)\n\t\t-> o1.get(\"label\").compareTo(o2.get(\"label\")));\n} catch (Exception e) {}\n\nfor (int i = 0; i < responseList.size(); i++) {\n\tHashMap<String, Object> dialect = (HashMap)responseList.get(i);\n\n\tList<String> providers;\n\ttry {\n\t\tString _providers = (String)dialect.get(\"provider\");\n\t\tString[] __providers = _providers.split(\",\");\n\t\tproviders = Arrays.asList(__providers);\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tList<String> providerText; \n\ttry {\t\t\n\t\tString _providerText = (String)dialect.get(\"text\");\n\t\tString[] __providerText = _providerText.split(\",\");\n\t\tproviderText = Arrays.asList(__providerText);\t\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tList<String> providerSpeech;\n\ttry {\n\t\tString _providerSpeech = (String)dialect.get(\"speech\");\n\t\tString[] __providerSpeech = _providerSpeech.split(\",\");\n\t\tproviderSpeech = Arrays.asList(__providerSpeech);\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tHashMap<String, String> langProviders = new HashMap<String, String>();\n\tBoolean supportsText = false;\n\tBoolean supportsSpeech = false;\n\t\n\tfor (int j = 0; j < providers.size(); j++) {\n\t\tList<String> providerCapab = new ArrayList<String>();\n\t\t\n\t\ttry {\n\t\t\tif (providerText.get(j).equals(\"true\")) {\n\t\t\t\tsupportsText = true;\n\t\t\t\tproviderCapab.push(\"text\");\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\t\n\t\ttry {\n\t\t\tif (providerSpeech.get(j).equals(\"true\")) {\n\t\t\t\tsupportsSpeech = true;\n\t\t\t\tproviderCapab.push(\"speech\");\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\t\n\t\tlangProviders.put(providers.get(j), String.join(\",\", providerCapab));\n\t}\n\t\t\n\tdialect.put(\"providers\", langProviders);\n\tdialect.put(\"supports_text\", supportsText);\n\tdialect.put(\"supports_speech\", supportsSpeech);\n\t\t\n\tdialect.remove(\"speech\");\n\tdialect.remove(\"text\");\t\n\tdialect.remove(\"provider\");\n\t\n\tresponseList.set(i, dialect);\n}\n\nexchange.getIn().setBody(responseList);\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, Object>> responseList = (ArrayList)exchange.getIn().getBody();\n\ntry {\n\tresponseList.sort((o1, o2)\n\t\t-> o1.get(\"label\").compareTo(o2.get(\"label\")));\n} catch (Exception e) {}\n\nfor (int i = 0; i < responseList.size(); i++) {\n\tHashMap<String, Object> dialect = (HashMap)responseList.get(i);\n\n\tList<String> providers;\n\ttry {\n\t\tString _providers = (String)dialect.get(\"provider\");\n\t\tString[] __providers = _providers.split(\",\");\n\t\tproviders = Arrays.asList(__providers);\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tList<String> providerText; \n\ttry {\t\t\n\t\tString _providerText = (String)dialect.get(\"text\");\n\t\tString[] __providerText = _providerText.split(\",\");\n\t\tproviderText = Arrays.asList(__providerText);\t\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tList<String> providerSpeech;\n\ttry {\n\t\tString _providerSpeech = (String)dialect.get(\"speech\");\n\t\tString[] __providerSpeech = _providerSpeech.split(\",\");\n\t\tproviderSpeech = Arrays.asList(__providerSpeech);\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(\"Error: \" + e.getMessage());\n\t}\n\t\n\tHashMap<String, String> langProviders = new HashMap<String, String>();\n\tBoolean supportsText = false;\n\tBoolean supportsSpeech = false;\n\t\n\tfor (int j = 0; j < providers.size(); j++) {\n\t\tList<String> providerCapab = new ArrayList<String>();\n\t\t\n\t\ttry {\n\t\t\tif (providerText.get(j).equals(\"true\")) {\n\t\t\t\tsupportsText = true;\n\t\t\t\tproviderCapab.push(\"text\");\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\t\n\t\ttry {\n\t\t\tif (providerSpeech.get(j).equals(\"true\")) {\n\t\t\t\tsupportsSpeech = true;\n\t\t\t\tproviderCapab.push(\"speech\");\n\t\t\t}\n\t\t} catch (Exception e) {}\n\t\t\n\t\tlangProviders.put(providers.get(j), String.join(\",\", providerCapab));\n\t}\n\t\t\n\tdialect.put(\"providers\", langProviders);\n\tdialect.put(\"supports_text\", supportsText);\n\tdialect.put(\"supports_speech\", supportsSpeech);\n\t\t\n\tdialect.remove(\"speech\");\n\tdialect.remove(\"text\");\t\n\tdialect.remove(\"provider\");\n\t\n\tresponseList.set(i, dialect);\n}\n\nexchange.getIn().setBody(responseList);\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);&import=// import org.apache.camel.Message"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "b43fc02a-dae3-4938-941a-35bcd1500248",
      "description" : "Render Response",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".bean('renderResponse')",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.bean('renderResponse')"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "e0c54b74-99fd-43fe-b2a7-dd2753777809",
      "description" : "store-translation",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "10",
        "endpointName" : "store-translation",
        "limitConcurrentConsumers" : false,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=10&endpointName=store-translation&limitConcurrentConsumers=false&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "setProperties",
      "nodeId" : "abd454dd-8423-4dd2-ae35-51d69e832b5c",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "inputText",
          "propertyValue" : "$.input_text",
          "uuid" : "c6669e04-7541-4b90-8f09-2dc60c45c122"
        }, {
          "language" : "JsonPath",
          "propertyName" : "outputText",
          "propertyValue" : "$.output_text",
          "uuid" : "3554da79-8bfa-4f1e-b979-20c06853b2b8"
        }, {
          "language" : "JsonPath",
          "propertyName" : "inputLang",
          "propertyValue" : "$.input_dialect",
          "uuid" : "f095c78c-2c3c-494b-880c-914f48417a97"
        }, {
          "language" : "JsonPath",
          "propertyName" : "outputLang",
          "propertyValue" : "$.output_dialect",
          "uuid" : "d664da28-9e8c-40b9-a968-44187948294d"
        }, {
          "language" : "JsonPath",
          "propertyName" : "provider",
          "propertyValue" : "$.provider",
          "uuid" : "a8a88ae4-ca78-424e-9a52-378accd30307"
        }, {
          "language" : "JsonPath",
          "propertyName" : "score",
          "propertyValue" : "$.detected_confidence",
          "uuid" : "6c5260d7-facd-44e7-a95d-0483d9c03f8f"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?inputText=$.input_text&outputText=$.output_text&inputLang=$.input_dialect&outputLang=$.output_dialect&provider=$.provider&score=$.detected_confidence&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "ef2eced0-95bf-4e49-a3a6-47d5f3fabdc9",
      "description" : "SQL Save Translation",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:INSERT INTO translations (message_id, provider, input_language, output_language, original, translated, score, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.messageId} AS uuid), :#${exchangeProperty.provider}, :#${exchangeProperty.inputLang}, :#${exchangeProperty.outputLang}, :#${exchangeProperty.inputText}, :#${exchangeProperty.outputText}, :#${exchangeProperty.score}, NOW(), NOW())?dataSource=#dsPostgres",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:INSERT INTO translations (message_id, provider, input_language, output_language, original, translated, score, created_at, updated_at) VALUES (CAST(:#${exchangeProperty.messageId} AS uuid), :#${exchangeProperty.provider}, :#${exchangeProperty.inputLang}, :#${exchangeProperty.outputLang}, :#${exchangeProperty.inputText}, :#${exchangeProperty.outputText}, :#${exchangeProperty.score}, NOW(), NOW())?dataSource=#dsPostgres"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-7",
    "enabled" : true,
    "routeId" : 7,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "dd136570-bcd1-4636-a3c6-d89a80ed75cf",
      "description" : "get-language-providers",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-language-providers",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-language-providers"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "5f8eae99-6eda-4df5-9974-41cd64c4a8eb",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\", \"Authorization\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\", \"Authorization\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "9294b207-1db9-4094-8a9d-032cf14c8499",
      "description" : "SQL Get Lang Providers",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT id AS provider_id, provider, metadata FROM providers WHERE type = \\'language\\'?dataSource=#dsPostgres&OutputType=SelectList",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT id AS provider_id, provider, metadata FROM providers WHERE type = \\'language\\'?dataSource=#dsPostgres&OutputType=SelectList"
    }, {
      "name" : "log",
      "nodeId" : "d20da530-eed3-4a83-8a70-d9e6ca6aeebf",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  } ],
  "traits" : [ {
    "name" : "health",
    "configuration" : {
      "enabled" : true,
      "livenessProbeEnabled" : true,
      "readinessProbeEnabled" : true
    }
  }, {
    "name" : "jvm",
    "configuration" : {
      "classpath" : "CosineSimilarity.java"
    }
  } ],
  "id" : "7141dce3-e7f5-40af-a7d7-649c77cdc88f",
  "name" : "r211-text-translate-api",
  "description" : "",
  "createdAt" : "2023-10-04T18:05:10.726021981",
  "updatedAt" : "2023-10-04T18:05:10.726022684",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}