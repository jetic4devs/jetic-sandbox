{
  "revision" : 1282,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : "1b130a48-03d6-4f62-92bd-4e32bce488ca",
  "currentProfileUuid" : "ae5301ac-5200-4b54-876c-b514515feb02",
  "parameterGroupUuids" : [ "3ec78cd2-9443-40bb-ae8d-060d5023d000", "e1d81a6a-655e-42ff-8288-6b0891abe7b0", "3dacce84-b8c8-4759-8bfa-355c8cf6acd6", "ca06b01a-b205-4b2b-9e9d-9f49614e7e94", "c9a8ecf3-391c-4a06-bdc0-68a1a504fdd9" ],
  "repoResourceUuids" : [ "823d4e90-00dd-4cf8-9125-5b3df0732bd2", "ab21c0c4-f1e7-4903-ae37-0edcd17df0a7", "a1057428-1531-40a8-a129-ed27382e947f", "3b5aa833-0eaa-4cb9-8ce8-ca97eac74110", "05649865-0c5a-4bfd-bddb-046f69383940", "96ac39c3-8473-4f49-9dd2-4c07322c6712", "71e48dda-80e9-4034-af48-cf39a9a10938", "fedc2ba8-c348-4a92-a89c-844badda8f1f", "0d41f9ca-58b0-434f-a68e-5855e59f3249", "5a8616e2-545a-4fb4-92a0-308feae7fc27" ],
  "routeDefinitions" : [ {
    "id" : null,
    "camelRouteId" : "route-1",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "58e236d6-9194-4702-a137-dfacb296e6ad",
      "description" : "newInboundCall",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "newInboundCall",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab&method=post&operationName=newInboundCall&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "9fa27502-9745-43cf-b3f4-2ecf2d7ad53a",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "setProperties",
      "nodeId" : "c2f8fce3-d66b-4eb5-aafc-2dbf6ad7d7db",
      "description" : "Set Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "requestIn",
          "propertyValue" : "${body}",
          "uuid" : "929cf8fb-eabc-4714-b2b4-489ec43bf8e1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "callFrom",
          "propertyValue" : "$.this_call.call_from",
          "uuid" : "f6868286-5f15-4ca2-9571-aa6b93c61119"
        }, {
          "language" : "JsonPath",
          "propertyName" : "callTo",
          "propertyValue" : "$.this_call.call_to",
          "uuid" : "ae60e503-29c3-4bb9-973e-219082959f6b"
        }, {
          "language" : "JsonPath",
          "propertyName" : "appInstanceId",
          "propertyValue" : "$.application_instance_id",
          "uuid" : "53c73f22-84c0-40eb-9b07-875235bf06bb"
        }, {
          "language" : "JsonPath",
          "propertyName" : "isNotification",
          "propertyValue" : "$.is_notification",
          "uuid" : "a1e530e2-23b6-4307-b356-40089d66c1f9"
        }, {
          "language" : "JsonPath",
          "propertyName" : "logFilename",
          "propertyValue" : "$.log_filename",
          "uuid" : "b73949f6-da43-4c08-86b4-a0a956a1a9e9"
        }, {
          "language" : "JsonPath",
          "propertyName" : "token",
          "propertyValue" : "$.token",
          "uuid" : "d6711603-495b-4083-9657-6ab44581bc63"
        }, {
          "language" : "JsonPath",
          "propertyName" : "appParameters",
          "propertyValue" : "$.this_call.application_parameters",
          "uuid" : "e818b843-087f-4edb-a8f1-36f447735570"
        }, {
          "language" : "JsonPath",
          "propertyName" : "callState",
          "propertyValue" : "$.this_call.call_state",
          "uuid" : "f655e9a6-fc9a-4de1-b06b-1c0358607489"
        }, {
          "language" : "JsonPath",
          "propertyName" : "callTarget",
          "propertyValue" : "$.this_call.call_target",
          "uuid" : "08993361-6bef-4492-b4f3-0e55c9fa0919"
        }, {
          "language" : "Constant",
          "propertyName" : "providerAuthToken",
          "propertyValue" : "abc123Def456!",
          "uuid" : "737bd2c1-4bc4-4b70-8905-e7397d48a0b4"
        }, {
          "language" : "Constant",
          "propertyName" : "tokenProvider",
          "propertyValue" : "direct:get-auth0-token",
          "uuid" : "8b024d4c-ee5e-4767-a6c9-e89a648b353d"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?requestIn=${body}&callFrom=$.this_call.call_from&callTo=$.this_call.call_to&appInstanceId=$.application_instance_id&isNotification=$.is_notification&logFilename=$.log_filename&token=$.token&appParameters=$.this_call.application_parameters&callState=$.this_call.call_state&callTarget=$.this_call.call_target&providerAuthToken=abc123Def456!&tokenProvider=direct:get-auth0-token&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "direct",
      "nodeId" : "bf52bde0-fe95-4fb3-8043-be1e86f49c9e",
      "description" : "authorize-request",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "authorize-request",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=authorize-request"
    }, {
      "name" : "removeHeaders",
      "nodeId" : "b208ec7a-b8c1-4246-9e74-a52acaf93a16",
      "description" : "",
      "properties" : {
        "_type" : "removeHeaders",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "excludePattern" : "Camel*",
        "name" : "removeHeaders",
        "pattern" : "*",
        "url" : ""
      },
      "_type" : "removeHeaders",
      "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
    }, {
      "name" : "log",
      "nodeId" : "c443e41e-5f57-49a6-9562-f3afc4cad4cd",
      "description" : "411.api.call.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.call.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.call.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "direct",
      "nodeId" : "6ee7c128-5bd9-4676-8e31-879937fd1dc3",
      "description" : "get-provider-number",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-provider-number",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-provider-number"
    }, {
      "name" : "messageFilter",
      "nodeId" : "e5c47018-6081-4197-90f5-a7f46511099c",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "agency not found",
        "route" : [ {
          "name" : "log",
          "nodeId" : "0870204a-2e44-40c3-9e60-a26ee39245e8",
          "description" : "411.api.call.404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "411.api.call.404",
            "message" : "Number not found.",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=411.api.call.404&message=Number not found.&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "clearBody",
          "nodeId" : "e4788b04-085d-4113-8fd9-9870d0e22dc7",
          "description" : "",
          "properties" : {
            "_type" : "clearBody",
            "camelGroup" : "core",
            "name" : "clearBody",
            "url" : ""
          },
          "_type" : "clearBody",
          "kameletPropertiesUrl" : ""
        }, {
          "name" : "setHeaders",
          "nodeId" : "208d3c60-3fc5-49af-93c9-17206a0df6d2",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "5e5a2233-8804-4a60-b574-255916305704"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "stop",
          "nodeId" : "d4961676-372e-449d-9167-f658d7697d00",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.agencyId} == null || ${exchangeProperty.providerNumber} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "e714cee0-5df3-4f35-9da7-045e84a9f48d",
          "description" : "Create Conversation",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpPath",
              "headerValue" : "/api/v1/conversations",
              "language" : "Constant",
              "uuid" : "ec6a36a9-1edb-41ad-93e3-7dc3a858c697"
            }, {
              "headerName" : "x-agency-id",
              "headerValue" : "${exchangeProperty.agencyId}",
              "language" : "Simple",
              "uuid" : "e267d6c9-9d46-4153-94ed-19538b4ef757"
            }, {
              "headerName" : "Authorization",
              "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
              "language" : "Simple",
              "uuid" : "6be4f2f9-0e2e-483e-bccd-38c465a47b49"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "27c9a4b2-08b1-4726-b37a-1a0e343dfe1d",
          "description" : "Build Request",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "String callTo = (String)exchange.getProperty(\"callTo\");\nString recipientLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString[] callFrom = String.valueOf(exchange.getProperty(\"callFrom\")).split(\"@\");\nString recipNumber = callFrom[0];\nif (!recipNumber.startsWith(\"+\"))\n\trecipNumber = \"+\" + recipNumber;\n\nexchange.setProperty(\"recipientNumber\", recipNumber);\n\nif (!callTo.startsWith(\"+\"))\n\tcallTo = \"+\" + callTo;\n\nHashMap<String, Object> convRecip = new HashMap<String, Object>() {{\n\tput(\"number\", recipNumber);\t\n}};\n\nif (recipientLanguage != null)\n\tconvRecip.put(\"language\", recipientLanguage);\n\nList<HashMap<String, Object>> convRecips = new ArrayList<HashMap<String, Object>>() {{\n\tadd(convRecip);\n}}\n\nHashMap<String, Object> convRequest = new HashMap<String, Object>() {{\n\tput(\"direction\", \"inbound\");\n\tput(\"number\", callTo);\n\tput(\"channel\", \"voice\");\n\tput(\"recipients\", convRecips);\n}}\n\nObjectMapper jackson = new ObjectMapper();\nexchange.getIn().setBody(jackson.writeValueAsString(convRequest));",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=String callTo = (String)exchange.getProperty(\"callTo\");\nString recipientLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString[] callFrom = String.valueOf(exchange.getProperty(\"callFrom\")).split(\"@\");\nString recipNumber = callFrom[0];\nif (!recipNumber.startsWith(\"+\"))\n\trecipNumber = \"+\" + recipNumber;\n\nexchange.setProperty(\"recipientNumber\", recipNumber);\n\nif (!callTo.startsWith(\"+\"))\n\tcallTo = \"+\" + callTo;\n\nHashMap<String, Object> convRecip = new HashMap<String, Object>() {{\n\tput(\"number\", recipNumber);\t\n}};\n\nif (recipientLanguage != null)\n\tconvRecip.put(\"language\", recipientLanguage);\n\nList<HashMap<String, Object>> convRecips = new ArrayList<HashMap<String, Object>>() {{\n\tadd(convRecip);\n}}\n\nHashMap<String, Object> convRequest = new HashMap<String, Object>() {{\n\tput(\"direction\", \"inbound\");\n\tput(\"number\", callTo);\n\tput(\"channel\", \"voice\");\n\tput(\"recipients\", convRecips);\n}}\n\nObjectMapper jackson = new ObjectMapper();\nexchange.getIn().setBody(jackson.writeValueAsString(convRequest));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
        }, {
          "name" : "log",
          "nodeId" : "0427cff3-330e-4944-b342-9a93df231cfa",
          "description" : "411.api.call.conv.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.api.call.conv.in",
            "message" : "POST ${header.CamelHttpPath} ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.call.conv.in&message=POST ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "http",
          "nodeId" : "4c18ac6a-a7b1-482a-9404-b6dfb01a3b37",
          "description" : "POST /conversations",
          "properties" : {
            "_type" : "http",
            "active" : true,
            "advancedParameters" : [ ],
            "bridgeEndpoint" : true,
            "camelGroup" : "component",
            "connectTimeout" : "20000",
            "connectionRequestTimeout" : "20000",
            "disableStreamCache" : true,
            "httpMethod" : "POST",
            "httpUri" : "{{convey.api.host}}",
            "name" : "http",
            "scheme" : "https",
            "socketTimeout" : "20000",
            "throwExceptionOnFailure" : true,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "http",
          "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
        }, {
          "name" : "log",
          "nodeId" : "ac7d6ccb-4510-4bf2-9bef-8b63b5844a94",
          "description" : "411.api.call.conv.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.api.call.conv.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.call.conv.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "messageRouter",
          "nodeId" : "446d21b2-ec4f-4138-af4e-0260b33a6a58",
          "description" : "",
          "properties" : {
            "_type" : "messageRouter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageRouter",
            "url" : ""
          },
          "_type" : "messageRouter",
          "branches" : [ {
            "type" : "when",
            "label" : "200 || 201",
            "route" : [ {
              "name" : "setProperties",
              "nodeId" : "fade1a09-6445-49c0-8f1a-6e2db12c4a4d",
              "description" : "Get Conversation",
              "properties" : {
                "_type" : "setProperties",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "name" : "setProperties",
                "namespaces" : [ ],
                "propertyList" : [ {
                  "language" : "JsonPath",
                  "propertyName" : "Conversation",
                  "propertyValue" : "$.data",
                  "uuid" : "a380f7ba-c112-469b-97f5-1a49cba24e30"
                }, {
                  "language" : "JsonPath",
                  "propertyName" : "conversationId",
                  "propertyValue" : "$.data.conversation_id",
                  "uuid" : "2b5c94ba-d9ee-404f-bc99-5f497dc91f7d"
                }, {
                  "language" : "JsonPath",
                  "propertyName" : "convRecipient",
                  "propertyValue" : "$.data.recipients[?(@.number == '${exchangeProperty.recipientNumber}')]",
                  "uuid" : "8e4376bb-689c-4cf9-8dcc-ddd4faf1b6e3"
                }, {
                  "language" : "Simple",
                  "propertyName" : "recipientId",
                  "propertyValue" : "${exchangeProperty.convRecipient[0][recipient_id]}",
                  "uuid" : "fc0c8f2a-75d6-4c92-8f8c-422848cba8ff"
                }, {
                  "language" : "Simple",
                  "propertyName" : "recipientLanguage",
                  "propertyValue" : "${exchangeProperty.convRecipient[0][language]}",
                  "uuid" : "37706f34-5594-4131-b71b-37a7a70730aa"
                }, {
                  "language" : "JsonPath",
                  "propertyName" : "agencyId",
                  "propertyValue" : "$.data.agency_id",
                  "uuid" : "9f1d033c-a835-4f7e-98e1-ac985043d7a0"
                } ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setProperties",
              "kameletPropertiesUrl" : "?Conversation=$.data&conversationId=$.data.conversation_id&convRecipient=$.data.recipients[?(@.number == '${exchangeProperty.recipientNumber}')]&recipientId=${exchangeProperty.convRecipient[0][recipient_id]}&recipientLanguage=${exchangeProperty.convRecipient[0][language]}&agencyId=$.data.agency_id&addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "direct",
              "nodeId" : "2cc885eb-83e9-4404-97a7-72a6533a0693",
              "description" : "conference-bridge",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "conference-bridge",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=conference-bridge"
            }, {
              "name" : "log",
              "nodeId" : "50152a7b-6b94-4b04-9e58-ddcbf5631c5f",
              "description" : "411.api.call.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "411.api.call.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.call.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${header.CamelHttpResponseCode} in '200,201'",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          }, {
            "type" : "otherwise",
            "label" : "otherwise",
            "route" : [ {
              "name" : "log",
              "nodeId" : "ee485944-802e-4d83-aacd-0e657557e1f5",
              "description" : "411.call.conv.out.err",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "ERROR",
                "logType" : "EIP",
                "loggerName" : "411.call.conv.out.err",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=ERROR&logType=EIP&loggerName=411.call.conv.out.err&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            } ],
            "properties" : { }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "54aee923-7fac-4e34-b464-04f3878acfa9",
      "description" : "get-conversation",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-conversation",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-conversation"
    }, {
      "name" : "removeHeaders",
      "nodeId" : "6aea5948-127c-41ec-809c-ed3b760cef10",
      "description" : "",
      "properties" : {
        "_type" : "removeHeaders",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "excludePattern" : "Camel*",
        "name" : "removeHeaders",
        "pattern" : "*",
        "url" : ""
      },
      "_type" : "removeHeaders",
      "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
    }, {
      "name" : "setHeaders",
      "nodeId" : "17d1bc13-5bd5-44f2-babb-f9ccedc159f8",
      "description" : "Set Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/conversations",
          "language" : "Constant",
          "uuid" : "5f8610f2-8bb9-4202-936c-23e9879259bc"
        }, {
          "headerName" : "CamelHttpQuery",
          "headerValue" : "provider_number=${exchangeProperty.providerNumber}&recipient=${exchangeProperty.callFrom}&status=active",
          "language" : "Simple",
          "uuid" : "2675989c-8c60-4dbb-9522-54c54ab88932"
        }, {
          "headerName" : "Authorization",
          "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
          "language" : "Simple",
          "uuid" : "ded7addb-0efd-44c9-a0fd-ecf39d55ad58"
        }, {
          "headerName" : "x-agency-id",
          "headerValue" : "${exchangeProperty.agencyId}",
          "language" : "Simple",
          "uuid" : "b48a83ab-003f-4c20-86b3-27f4602f5f7b"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "clearBody",
      "nodeId" : "db394310-0ab2-405c-a077-8c2db6ff26e4",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "log",
      "nodeId" : "fb9e3df2-5bcc-4fbd-bb25-4d1a8dc191b5",
      "description" : "411.conv.get.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.conv.get.in",
        "message" : "GET ${header.CamelHttpPath}?${header.CamelHttpQuery}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.conv.get.in&message=GET ${header.CamelHttpPath}?${header.CamelHttpQuery}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "aa53341b-f4f5-4c16-ba86-2f88c0756cfd",
      "description" : "GET /conversations",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "log",
      "nodeId" : "3d5f56fd-a0a7-43d7-8123-89f1b59ab1ee",
      "description" : "411.conv.get.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.conv.get.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.conv.get.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "b40bdc97-0e00-404d-937f-f2ad93ba22c1",
      "description" : "Set Conversation",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "conversation",
          "propertyValue" : "$.data[0]",
          "uuid" : "4589029e-a398-40d3-8e43-c81b711fb9c7"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversation=$.data[0]&addNamespaces=false&suppressExceptions=true"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-3",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "a22eb979-e215-4d03-8b05-26d76703e1d6",
      "description" : "get-provider-number",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-provider-number",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-provider-number"
    }, {
      "name" : "removeHeaders",
      "nodeId" : "612c8f2a-6880-4229-b7c6-a81b2385f1d0",
      "description" : "",
      "properties" : {
        "_type" : "removeHeaders",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "excludePattern" : "Camel*",
        "name" : "removeHeaders",
        "pattern" : "*",
        "url" : ""
      },
      "_type" : "removeHeaders",
      "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
    }, {
      "name" : "setHeaders",
      "nodeId" : "85062020-f4f9-4d6d-b5d7-5f0d7d7dce4c",
      "description" : "Set Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/numbers/+${exchangeProperty.callTo}",
          "language" : "Simple",
          "uuid" : "fe6011a2-d9df-4c22-9292-90855f9677b3"
        }, {
          "headerName" : "Authorization",
          "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
          "language" : "Simple",
          "uuid" : "4cd829f8-3d48-463f-855d-160281ce7055"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "clearBody",
      "nodeId" : "9c82e978-b4ad-4393-8246-1e415b91c994",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "log",
      "nodeId" : "79bea323-b3c6-40da-a686-dd2983df7637",
      "description" : "411.num.get.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.num.get.in",
        "message" : "GET ${header.CamelHttpPath}?${header.CamelHttpQuery}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.num.get.in&message=GET ${header.CamelHttpPath}?${header.CamelHttpQuery}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "1867c4ed-036d-4fdd-95f8-f1a04e4347c7",
      "description" : "GET /numbers",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : true,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "log",
      "nodeId" : "25c2d454-40f1-4689-9d0f-76505df090af",
      "description" : "411.num.get.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.num.get.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.num.get.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "af4a4f26-3be9-4f8f-80dc-bbe493bc11db",
      "description" : "Set Provider Number",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "providerNumber",
          "propertyValue" : "$.data",
          "uuid" : "fbedae83-93b6-47a3-a1a7-0b02d68127c4"
        }, {
          "language" : "JsonPath",
          "propertyName" : "agencyId",
          "propertyValue" : "$.data.agency_id",
          "uuid" : "9f3cf3f8-45f4-426a-abfa-2976418e7aae"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?providerNumber=$.data&agencyId=$.data.agency_id&addNamespaces=false&suppressExceptions=true"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "7d7ebe12-2f07-4962-9682-b8b4e3272a7e",
      "description" : "get-auth0-token",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "get-auth0-token",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=get-auth0-token"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "25081e98-2ac8-4b2a-8fb7-5e47b1b6889b",
      "description" : "InOut",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOut",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOut"
    }, {
      "name" : "setHeaders",
      "nodeId" : "0acb2112-1b61-444c-8307-f2061fc7c998",
      "description" : "Set Requested Scopes",
      "properties" : {
        "_type" : "setHeaders",
        "active" : false,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "x-requested-scopes",
          "headerValue" : "create:message create:conversation",
          "language" : "Constant",
          "uuid" : "8049de18-afa3-43f6-a620-6115810c993f"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "clearBody",
      "nodeId" : "7b8a54eb-0490-4caa-b805-ce91817726de",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "jms",
      "nodeId" : "47005d10-ecfe-4f19-9b88-6a9ca323a162",
      "description" : "auth0.manager.tokens",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "auth0.manager.tokens",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=auth0.manager.tokens&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "fb76d7c5-9e9e-4015-adda-5928bcdafe4f",
      "description" : "authorize-request",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "authorize-request",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=authorize-request"
    }, {
      "name" : "process",
      "nodeId" : "136acdc4-c7f9-4125-b506-b7429509200f",
      "description" : "Authorize & Parse",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String[] params = String.valueOf((String)exchange.getProperty(\"appParameters\")).split(\"&\");\nString providerAuthToken = (String)exchange.getProperty(\"providerAuthToken\");\nString basicAuthorization = (String)exchange.getIn().getHeader(\"Authorization\");\nString requestPath = (String)exchange.getIn().getHeader(\"CamelHttpPath\");\nBoolean auth = false;\n\nif (requestPath.startsWith(\"/on/aculab/sms\")) {\n\ttry {\n\t\tbasicAuthorization = basicAuthorization.substring(6);\n\t\tString decodedAuth = new String(Base64.getDecoder().decode(basicAuthorization));\n\t\tString authUser = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthUsername\").get();\n\t\tString authPass = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthPassword\").get();\n\n\t\tif (decodedAuth.substring(0, decodedAuth.indexOf(\":\")).equals(authUser) && decodedAuth.substring(decodedAuth.indexOf(\":\")+1).equals(authPass))\n\t\t\tauth = true;\n\t\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(e);\n\t}\n\t\n} else {\n\tfor (int i = 0; i < params.length; i++) {\n\t\tString[] param = String.valueOf(params[i]).split(\"=\");\n\t\tif (param.length == 2) {\n\t\t\texchange.setProperty(param[0], param[1]);\n\t\t\tif (String.valueOf(param[0]).equals(\"token\") && String.valueOf(param[1]).equals(providerAuthToken))\n\t\t\t\tauth = true;\n\t\t}\n\t}\n}\n\nif (auth == true)\n\texchange.setProperty(\"auth\", true);\nelse {\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 401);\n\texchange.getIn().setBody(\"\");\n}",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=String[] params = String.valueOf((String)exchange.getProperty(\"appParameters\")).split(\"&\");\nString providerAuthToken = (String)exchange.getProperty(\"providerAuthToken\");\nString basicAuthorization = (String)exchange.getIn().getHeader(\"Authorization\");\nString requestPath = (String)exchange.getIn().getHeader(\"CamelHttpPath\");\nBoolean auth = false;\n\nif (requestPath.startsWith(\"/on/aculab/sms\")) {\n\ttry {\n\t\tbasicAuthorization = basicAuthorization.substring(6);\n\t\tString decodedAuth = new String(Base64.getDecoder().decode(basicAuthorization));\n\t\tString authUser = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthUsername\").get();\n\t\tString authPass = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthPassword\").get();\n\n\t\tif (decodedAuth.substring(0, decodedAuth.indexOf(\":\")).equals(authUser) && decodedAuth.substring(decodedAuth.indexOf(\":\")+1).equals(authPass))\n\t\t\tauth = true;\n\t\t\n\t} catch (Exception e) {\n\t\tSystem.out.println(e);\n\t}\n\t\n} else {\n\tfor (int i = 0; i < params.length; i++) {\n\t\tString[] param = String.valueOf(params[i]).split(\"=\");\n\t\tif (param.length == 2) {\n\t\t\texchange.setProperty(param[0], param[1]);\n\t\t\tif (String.valueOf(param[0]).equals(\"token\") && String.valueOf(param[1]).equals(providerAuthToken))\n\t\t\t\tauth = true;\n\t\t}\n\t}\n}\n\nif (auth == true)\n\texchange.setProperty(\"auth\", true);\nelse {\n\texchange.getIn().setHeader(\"CamelHttpResponseCode\", 401);\n\texchange.getIn().setBody(\"\");\n}&import=// import org.apache.camel.Message"
    }, {
      "name" : "messageFilter",
      "nodeId" : "269d4443-4809-4ad5-83a0-af55775ff8c0",
      "description" : "",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "filter",
        "label" : "HTTP401",
        "route" : [ {
          "name" : "log",
          "nodeId" : "ad71661d-4c35-4746-8fba-10c3eddb0142",
          "description" : "411.auth.401",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "411.auth.401",
            "message" : "(401) Invalid token ",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=411.auth.401&message=(401) Invalid token &multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "clearBody",
          "nodeId" : "5d13211c-15f2-4f0a-aac7-e1cf44d38e4f",
          "description" : "",
          "properties" : {
            "_type" : "clearBody",
            "camelGroup" : "core",
            "name" : "clearBody",
            "url" : ""
          },
          "_type" : "clearBody",
          "kameletPropertiesUrl" : ""
        }, {
          "name" : "removeHeaders",
          "nodeId" : "91e4a95e-f976-4781-bfe6-6973f5e9243c",
          "description" : "",
          "properties" : {
            "_type" : "removeHeaders",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "excludePattern" : "Camel*",
            "name" : "removeHeaders",
            "pattern" : "*",
            "url" : ""
          },
          "_type" : "removeHeaders",
          "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
        }, {
          "name" : "stop",
          "nodeId" : "340b10b4-f59c-415a-956c-dfed9fced7fb",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelHttpResponseCode} == 401",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "5f3dd16a-a487-41b3-8b8e-dc34f827569e",
      "description" : "conference-bridge",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "conference-bridge",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=conference-bridge"
    }, {
      "name" : "setProperties",
      "nodeId" : "b3c254e1-6eb3-4a46-a24e-38a5c1087fc9",
      "description" : "Set Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "apiHost",
          "propertyValue" : "{{convey.api.host}}",
          "uuid" : "cd2d34d9-3444-4183-8880-06ea41099c92"
        }, {
          "language" : "Simple",
          "propertyName" : "webRtcClientId",
          "propertyValue" : "${exchangeProperty.conversationId}",
          "uuid" : "4a4e37cf-a1f4-4879-a747-e422da4e64e1"
        }, {
          "language" : "Constant",
          "propertyName" : "wssRtpUri",
          "propertyValue" : "rtp-dev.convey911.com",
          "uuid" : "7f13eb72-e5b4-4954-aabf-d8df5427f176"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?apiHost={{convey.api.host}}&webRtcClientId=${exchangeProperty.conversationId}&wssRtpUri=rtp-dev.convey911.com&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "3de4cc66-9db5-46e0-a7b2-640f33617dc5",
      "description" : "init-webrtc-service",
      "properties" : {
        "_type" : "direct",
        "active" : false,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "init-webrtc-service",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=init-webrtc-service"
    }, {
      "name" : "delay",
      "nodeId" : "523d6383-41d4-4cfe-9464-21567436c08c",
      "description" : "",
      "properties" : {
        "_type" : "delay",
        "active" : true,
        "addNamespaces" : false,
        "asyncDelayed" : false,
        "camelGroup" : "misc",
        "expression" : "${body}",
        "language" : "Simple",
        "name" : "delay",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "timeToWait" : "Value",
        "url" : "",
        "value" : "1000"
      },
      "_type" : "delay",
      "kameletPropertiesUrl" : "?addNamespaces=false&asyncDelayed=false&expression=${body}&language=Simple&suppressExceptions=false&timeToWait=Value&value=1000"
    }, {
      "name" : "process",
      "nodeId" : "0dd2d8b0-3327-470c-8570-36cb0309c055",
      "description" : "Telephony Request",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String conversationId = (String)exchange.getProperty(\"conversationId\");\nString recipientId = (String)exchange.getProperty(\"recipientId\");\nString agencyId = (String)exchange.getProperty(\"agencyId\");\nString recipientLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString defaultLanguage = \"en-US\";\nString request = (String)exchange.getProperty(\"requestIn\");\nString appInstanceId = (String)exchange.getProperty(\"appInstanceId\");\nString wssRtpUri = (String)exchange.getProperty(\"wssRtpUri\");\nString callFrom = (String)exchange.getProperty(\"callFrom\");\n\nif (callFrom.equals(\"15184614808\")) \n\twssRtpUri = \"hoang.ngrok.io\";\n\nTelephonyRequest ourRequest = new TelephonyRequest(request);\n\n// SpeechRecognitionOptions speechRecognitionOptions = new SpeechRecognitionOptions();\n// speechRecognitionOptions.setLanguage(recipientLanguage != null ? recipientLanguage : defaultLanguage);\n\nHashMap<String, String> callbackTokenHash = new HashMap<String, String>() {{\n\tput(\"agencyId\", agencyId);\n\tput(\"conversationId\", conversationId);\n\tput(\"recipientId\", recipientId);\n\tput(\"recipientLanguage\", recipientLanguage);\n}};\n\nObjectMapper mapper = new ObjectMapper();\n\nString callbackToken = Base64.getEncoder().encodeToString(mapper.writeValueAsString(callbackTokenHash).getBytes());\nString callbackUrl = \"https://\" + String.valueOf(exchange.getProperty(\"apiHost\")) + \"/on/aculab/call/\" + callbackToken;\n\nList<TelephonyAction> actions = new ArrayList<TelephonyAction>();\n\n/*\nConnectToConference connectToConferenceAction = new ConnectToConference(\"CallChatRoom\");\n//connectToConferenceAction.setHoldMedia(Play.playFile(\"1_sec_silence.wav\"));\nconnectToConferenceAction.setSecondsAnswerTimeout(40);\n\nSecondaryCall secondaryCall = new SecondaryCall(new WebPageRequest(\"ConnectFirst\"), 45, false);\nconnectToConferenceAction.setSecondaryCall(secondaryCall);\n\nConferenceParticipant participant = new ConferenceParticipant();\nparticipant.setTalker(true);\nparticipant.setStartOnEntry(true);\nparticipant.setDestroyOnExit(false);\nparticipant.setBeepOnEntry(true);\n//participant.setExitDigit('');\n//participant.setMuteDigit('');\n//participant.setUnmuteDigit('');\n//participant.setWhileStoppedMedia(Play.playFile(\"1_sec_silence.wav\"));\nconnectToConferenceAction.setParticipant(participant);\n\nactions.add(connectToConferenceAction);\n*/\n//String clientId = (String)exchange.getProperty(\"webRtcClientId\");\n//String webrtcToken = (String)exchange.getProperty(\"webrtcToken\");\n\n// Add a message to play if the connect doesn't succeed\nPlay connectingMsgAction = Play.sayText(\"Connecting, please stand by.\"); \nactions.add(connectingMsgAction);\n\nConnect connectAction = new Connect(\"wss://\" + wssRtpUri + \"/?conversationId=\" + conversationId + \"&agencyId=\" + agencyId);\n//Connect connectAction = new Connect(\"tel:15087259913\");\nconnectAction.setCallFrom(callFrom);\n//connectAction.setHoldMedia(Play.playFile(\"holdmusic.wav\"));\n//SecondaryCall secondaryCall = new SecondaryCall(new WebPageRequest(\"ConnectFirst\"));\n//connectAction.setSecondaryCall(secondaryCall);\n//connectAction.setNextPage(new WebPageRequest(\"ConnectNext\"));\nactions.add(connectAction);\n\n// Respond\n// TelephonyResponse ourResponse = new TelephonyResponse(actions, \"my connect instance id\");\n// ourResponse.setHttpServletResponse(response);\n\nTelephonyResponse telephonyResponse = new TelephonyResponse(actions, agencyId);\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);\nexchange.getIn().setBody(telephonyResponse.toString());",
        "import" : "import com.aculab.telephonyrestapi.*;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport java.util.Base64;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=String conversationId = (String)exchange.getProperty(\"conversationId\");\nString recipientId = (String)exchange.getProperty(\"recipientId\");\nString agencyId = (String)exchange.getProperty(\"agencyId\");\nString recipientLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString defaultLanguage = \"en-US\";\nString request = (String)exchange.getProperty(\"requestIn\");\nString appInstanceId = (String)exchange.getProperty(\"appInstanceId\");\nString wssRtpUri = (String)exchange.getProperty(\"wssRtpUri\");\nString callFrom = (String)exchange.getProperty(\"callFrom\");\n\nif (callFrom.equals(\"15184614808\")) \n\twssRtpUri = \"hoang.ngrok.io\";\n\nTelephonyRequest ourRequest = new TelephonyRequest(request);\n\n// SpeechRecognitionOptions speechRecognitionOptions = new SpeechRecognitionOptions();\n// speechRecognitionOptions.setLanguage(recipientLanguage != null ? recipientLanguage : defaultLanguage);\n\nHashMap<String, String> callbackTokenHash = new HashMap<String, String>() {{\n\tput(\"agencyId\", agencyId);\n\tput(\"conversationId\", conversationId);\n\tput(\"recipientId\", recipientId);\n\tput(\"recipientLanguage\", recipientLanguage);\n}};\n\nObjectMapper mapper = new ObjectMapper();\n\nString callbackToken = Base64.getEncoder().encodeToString(mapper.writeValueAsString(callbackTokenHash).getBytes());\nString callbackUrl = \"https://\" + String.valueOf(exchange.getProperty(\"apiHost\")) + \"/on/aculab/call/\" + callbackToken;\n\nList<TelephonyAction> actions = new ArrayList<TelephonyAction>();\n\n/*\nConnectToConference connectToConferenceAction = new ConnectToConference(\"CallChatRoom\");\n//connectToConferenceAction.setHoldMedia(Play.playFile(\"1_sec_silence.wav\"));\nconnectToConferenceAction.setSecondsAnswerTimeout(40);\n\nSecondaryCall secondaryCall = new SecondaryCall(new WebPageRequest(\"ConnectFirst\"), 45, false);\nconnectToConferenceAction.setSecondaryCall(secondaryCall);\n\nConferenceParticipant participant = new ConferenceParticipant();\nparticipant.setTalker(true);\nparticipant.setStartOnEntry(true);\nparticipant.setDestroyOnExit(false);\nparticipant.setBeepOnEntry(true);\n//participant.setExitDigit('');\n//participant.setMuteDigit('');\n//participant.setUnmuteDigit('');\n//participant.setWhileStoppedMedia(Play.playFile(\"1_sec_silence.wav\"));\nconnectToConferenceAction.setParticipant(participant);\n\nactions.add(connectToConferenceAction);\n*/\n//String clientId = (String)exchange.getProperty(\"webRtcClientId\");\n//String webrtcToken = (String)exchange.getProperty(\"webrtcToken\");\n\n// Add a message to play if the connect doesn't succeed\nPlay connectingMsgAction = Play.sayText(\"Connecting, please stand by.\"); \nactions.add(connectingMsgAction);\n\nConnect connectAction = new Connect(\"wss://\" + wssRtpUri + \"/?conversationId=\" + conversationId + \"&agencyId=\" + agencyId);\n//Connect connectAction = new Connect(\"tel:15087259913\");\nconnectAction.setCallFrom(callFrom);\n//connectAction.setHoldMedia(Play.playFile(\"holdmusic.wav\"));\n//SecondaryCall secondaryCall = new SecondaryCall(new WebPageRequest(\"ConnectFirst\"));\n//connectAction.setSecondaryCall(secondaryCall);\n//connectAction.setNextPage(new WebPageRequest(\"ConnectNext\"));\nactions.add(connectAction);\n\n// Respond\n// TelephonyResponse ourResponse = new TelephonyResponse(actions, \"my connect instance id\");\n// ourResponse.setHttpServletResponse(response);\n\nTelephonyResponse telephonyResponse = new TelephonyResponse(actions, agencyId);\nexchange.getIn().setHeader(\"CamelHttpResponseCode\", 200);\nexchange.getIn().setBody(telephonyResponse.toString());&import=import com.aculab.telephonyrestapi.*;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport java.util.Base64;"
    }, {
      "name" : "log",
      "nodeId" : "95569164-f84c-4181-b8e6-38e87136f0dd",
      "description" : "411.trnscpt.start.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.direct.cnf.out",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.cnf.out&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-7",
    "enabled" : true,
    "routeId" : 7,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "5bd74645-f043-495f-bcec-81dc599ec48e",
      "description" : "transcriptionCallback",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab/{conversationId}/{recipientId}",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "transcriptionCallback",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab/{conversationId}/{recipientId}&method=post&operationName=transcriptionCallback&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "fb849cb2-256e-4a01-a9f1-b25853ec4284",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "setProperties",
      "nodeId" : "c792d7fc-7365-4a80-8e31-8bb7e7a9aa77",
      "description" : "Get Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Header",
          "propertyName" : "callbackToken",
          "propertyValue" : "callbackToken",
          "uuid" : "834178be-dec9-44cb-a431-a78505ceb8a5"
        }, {
          "language" : "JsonPath",
          "propertyName" : "transcriptionCompleted",
          "propertyValue" : "$.action_result.result.completed",
          "uuid" : "9e3eb662-684c-42e5-b6cb-052be3d1fc07"
        }, {
          "language" : "Constant",
          "propertyName" : "recipientNumber",
          "propertyValue" : "+14432501272",
          "uuid" : "d710b148-5d7b-4d9a-92b5-e78df286e711"
        }, {
          "language" : "Simple",
          "propertyName" : "exchangeId",
          "propertyValue" : "${exchangeId}",
          "uuid" : "9143cc76-e995-4ffd-b050-1dd06f491454"
        }, {
          "language" : "Constant",
          "propertyName" : "apiOperation",
          "propertyValue" : "transcriptionCallback",
          "uuid" : "58d7fa82-e1e8-43ce-9b93-37a1b264097f"
        }, {
          "language" : "Constant",
          "propertyName" : "objectType",
          "propertyValue" : "Transcription",
          "uuid" : "30eb77b4-019c-4f02-b2f4-4b3ff679e995"
        }, {
          "language" : "JsonPath",
          "propertyName" : "transcriptionResultsInterimInbound",
          "propertyValue" : "$.action_result.result.transcription[?(@.final == false  && @.direction == 'inbound')].alternatives[*].text",
          "uuid" : "2a3d7131-90f3-4d64-a53c-b8d5338efe8c"
        }, {
          "language" : "JsonPath",
          "propertyName" : "transcriptionResultsInterimOutbound",
          "propertyValue" : "$.action_result.result.transcription[?(@.final == false  && @.direction == 'outbound')].alternatives[*].text",
          "uuid" : "bd02f4b4-1586-4e67-ab8b-0b051e9c2338"
        }, {
          "language" : "JsonPath",
          "propertyName" : "transcriptionResultsFinalInbound",
          "propertyValue" : "$.action_result.result.transcription[?(@.final == true  && @.direction == 'inbound')].alternatives[*].text",
          "uuid" : "0ffce816-06be-4dd7-acfb-2fc47e5cd8b1"
        }, {
          "language" : "JsonPath",
          "propertyName" : "transcriptionResultsFinalOutbound",
          "propertyValue" : "$.action_result.result.transcription[?(@.final == true  && @.direction == 'outbound')].alternatives[*].text",
          "uuid" : "29a593f5-2a96-4ccb-99b2-c1ba9bb318eb"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?callbackToken=callbackToken&transcriptionCompleted=$.action_result.result.completed&recipientNumber=+14432501272&exchangeId=${exchangeId}&apiOperation=transcriptionCallback&objectType=Transcription&transcriptionResultsInterimInbound=$.action_result.result.transcription[?(@.final == false  && @.direction == 'inbound')].alternatives[*].text&transcriptionResultsInterimOutbound=$.action_result.result.transcription[?(@.final == false  && @.direction == 'outbound')].alternatives[*].text&transcriptionResultsFinalInbound=$.action_result.result.transcription[?(@.final == true  && @.direction == 'inbound')].alternatives[*].text&transcriptionResultsFinalOutbound=$.action_result.result.transcription[?(@.final == true  && @.direction == 'outbound')].alternatives[*].text&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "process",
      "nodeId" : "2fc9e9db-6622-4c43-af8d-396119c390c2",
      "description" : "Parse Request",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper mapper = new ObjectMapper();\n\nbyte[] decoded = Base64.getDecoder().decode((String)exchange.getProperty(\"callbackToken\"));\nString decodedToken = new String(decoded, StandardCharsets.UTF_8);\n\t\ntry {\n\tHashMap<String, String> callbackToken = mapper.readValue(decodedToken, HashMap.class);\n\t\n\texchange.setProperty(\"agencyId\", callbackToken.get(\"agencyId\"));\n\texchange.setProperty(\"conversationId\", callbackToken.get(\"conversationId\"));\n\texchange.setProperty(\"recipientId\", callbackToken.get(\"recipientId\"));\n\texchange.setProperty(\"recipientLanguage\", callbackToken.get(\"recipientLanguage\"));\t\n\t\n} catch (Exception e) {\n\tSystem.out.println(\"Can't parse token into parts\");\n}",
        "import" : "import java.util.Base64;\nimport java.nio.charset.StandardCharsets;\nimport com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nbyte[] decoded = Base64.getDecoder().decode((String)exchange.getProperty(\"callbackToken\"));\nString decodedToken = new String(decoded, StandardCharsets.UTF_8);\n\t\ntry {\n\tHashMap<String, String> callbackToken = mapper.readValue(decodedToken, HashMap.class);\n\t\n\texchange.setProperty(\"agencyId\", callbackToken.get(\"agencyId\"));\n\texchange.setProperty(\"conversationId\", callbackToken.get(\"conversationId\"));\n\texchange.setProperty(\"recipientId\", callbackToken.get(\"recipientId\"));\n\texchange.setProperty(\"recipientLanguage\", callbackToken.get(\"recipientLanguage\"));\t\n\t\n} catch (Exception e) {\n\tSystem.out.println(\"Can't parse token into parts\");\n}&import=import java.util.Base64;\nimport java.nio.charset.StandardCharsets;\nimport com.fasterxml.jackson.databind.ObjectMapper;"
    }, {
      "name" : "messageFilter",
      "nodeId" : "cdbbfb05-f314-4c43-bdc9-cd45ce359df9",
      "description" : "Valid Request?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "log",
          "nodeId" : "19c34a65-320e-4c08-b348-03190e520121",
          "description" : "411.clbk.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.clbk.in",
            "message" : "agencyId: ${exchangeProperty.agencyId} conversationId: ${exchangeProperty.conversationId} recipientId: ${exchangeProperty.recipientId} ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.clbk.in&message=agencyId: ${exchangeProperty.agencyId} conversationId: ${exchangeProperty.conversationId} recipientId: ${exchangeProperty.recipientId} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "removeHeaders",
          "nodeId" : "a84fc404-7926-41a0-9258-e1140c380106",
          "description" : "",
          "properties" : {
            "_type" : "removeHeaders",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "excludePattern" : "Camel*",
            "name" : "removeHeaders",
            "pattern" : "*",
            "url" : ""
          },
          "_type" : "removeHeaders",
          "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
        }, {
          "name" : "messageFilter",
          "nodeId" : "bf6e5431-2807-4e7a-8d53-e406338cdd5f",
          "description" : "Final Results?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "clearBody",
              "nodeId" : "f960d6f5-a5c2-476e-8043-845183b78bc0",
              "description" : "",
              "properties" : {
                "_type" : "clearBody",
                "camelGroup" : "core",
                "name" : "clearBody",
                "url" : ""
              },
              "_type" : "clearBody",
              "kameletPropertiesUrl" : ""
            }, {
              "name" : "messageFilter",
              "nodeId" : "ed6689d7-9e31-47a8-bf62-e3c16220c0eb",
              "description" : "Interim Results?",
              "properties" : {
                "_type" : "messageFilter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageFilter",
                "url" : ""
              },
              "_type" : "messageFilter",
              "branches" : [ {
                "type" : "filter",
                "label" : "interimResults?",
                "route" : [ {
                  "name" : "process",
                  "nodeId" : "685e36c7-9eb1-4fff-9eb4-4d1069a453c5",
                  "description" : "Parse Interim Result",
                  "properties" : {
                    "_type" : "process",
                    "active" : true,
                    "camelGroup" : "transform",
                    "code" : "ObjectMapper mapper = new ObjectMapper();\n\nList<String> interimTranscriptionInbound = (List)exchange.getProperty(\"transcriptionResultsInterimInbound\");\nList<String> interimTranscriptionOutbound = (List)exchange.getProperty(\"transcriptionResultsInterimOutbound\");\nString sourceLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString targetLanguage = \"en\";\nArrayList<HashMap<String, Object>> transcriptionResults = new ArrayList<HashMap<String, Object>>();\n\nif (interimTranscriptionInbound != null && interimTranscriptionInbound.size() > 0) {\n\tString interimTranscriptionTextInbound = String.join(\" \", interimTranscriptionInbound).trim();\n\texchange.setProperty(\"interimTranscriptionTextInbound\", interimTranscriptionTextInbound);\n\tString interimTranscriptionTextInboundTranslated = null;\n\t\n\tif (sourceLanguage != null && !sourceLanguage.equals(\"en\")) {\n\t\tHashMap<String, String> translateRequest = new HashMap<String, String>() {{\n\t\t\tput(\"input_text\", interimTranscriptionTextInbound);\n\t\t\tput(\"input_dialect\", sourceLanguage);\n\t\t\tput(\"output_dialect\", targetLanguage)\n\t\t}};\n\t\t\n\t\tProducerTemplate t = exchange.getContext().createProducerTemplate();\n\t\texchange.setPattern(ExchangePattern.InOut);\n\t\texchange.getOut().setBody(mapper.writeValueAsString(translateRequest));\n\t\t\n    exchange = t.send(\"direct:translate-text\", exchange);\t\t\n\t\t\n\t\tif (String.valueOf(exchange.getOut().getHeader(\"CamelHttpResponseCode\")).equals(\"200\")) {\n\t\t\tArrayList<HashMap<String, Object>> translationResults = (ArrayList)exchange.getOut().getBody();\n\t\t\tif (translationResults != null && translationResults.size() > 0) {\n\t\t\t\tHashMap<String, Object> translation = translationResults.get(0);\n\t\t\t\tinterimTranscriptionTextInboundTranslated = (String)translation.get(\"output_text\");\n\t\t\t}\n\t\t}\n\t}\n\n\tHashMap<String, Object> jsonResponseData = new HashMap<String, Object>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"text\", interimTranscriptionTextInbound);\n\t\tput(\"direction\", \"inbound\");\n\t\tput(\"text_trans\", interimTranscriptionTextInboundTranslated);\n\t}};\n\t\n\ttranscriptionResults.add(jsonResponseData);\n}\n\nif (interimTranscriptionOutbound != null && interimTranscriptionOutbound.size() > 0) {\n\tString interimTranscriptionTextOutbound = String.join(\" \", interimTranscriptionOutbound).trim();\n\texchange.setProperty(\"interimTranscriptionTextOutbound\", interimTranscriptionTextOutbound);\n\n\tHashMap<String, Object> jsonResponseData = new HashMap<String, Object>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"text\", interimTranscriptionTextOutbound);\n\t\tput(\"direction\", \"outbound\");\n\t\tput(\"text_trans\", null);\n\t}};\n\t\n\ttranscriptionResults.add(jsonResponseData);\n}\n\nif (transcriptionResults.size() > 0) {\n\tHashMap<String, Object> jsonResponse = new HashMap<String, Object>() {{\n\t\tput(\"requestId\", (String)exchange.getProperty(\"exchangeId\"));\n\t\tput(\"apiOperation\", (String)exchange.getProperty(\"apiOperation\"));\n\t\tput(\"objectType\", \"TranscriptionResults\");\n\t\tput(\"data\", transcriptionResults);\n\t}};\n\n\texchange.getOut().setHeader(\"x-agency-id\", (String)exchange.getProperty(\"agencyId\"));\n\texchange.getOut().setBody(mapper.writeValueAsString(jsonResponse));\n\texchange.getIn().setHeader(\"x-agency-id\", (String)exchange.getProperty(\"agencyId\"));\n\texchange.getIn().setBody(mapper.writeValueAsString(jsonResponse));\n\t\n}",
                    "import" : "import com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.camel.Exchange;\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;",
                    "name" : "process",
                    "url" : ""
                  },
                  "_type" : "process",
                  "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nList<String> interimTranscriptionInbound = (List)exchange.getProperty(\"transcriptionResultsInterimInbound\");\nList<String> interimTranscriptionOutbound = (List)exchange.getProperty(\"transcriptionResultsInterimOutbound\");\nString sourceLanguage = (String)exchange.getProperty(\"recipientLanguage\");\nString targetLanguage = \"en\";\nArrayList<HashMap<String, Object>> transcriptionResults = new ArrayList<HashMap<String, Object>>();\n\nif (interimTranscriptionInbound != null && interimTranscriptionInbound.size() > 0) {\n\tString interimTranscriptionTextInbound = String.join(\" \", interimTranscriptionInbound).trim();\n\texchange.setProperty(\"interimTranscriptionTextInbound\", interimTranscriptionTextInbound);\n\tString interimTranscriptionTextInboundTranslated = null;\n\t\n\tif (sourceLanguage != null && !sourceLanguage.equals(\"en\")) {\n\t\tHashMap<String, String> translateRequest = new HashMap<String, String>() {{\n\t\t\tput(\"input_text\", interimTranscriptionTextInbound);\n\t\t\tput(\"input_dialect\", sourceLanguage);\n\t\t\tput(\"output_dialect\", targetLanguage)\n\t\t}};\n\t\t\n\t\tProducerTemplate t = exchange.getContext().createProducerTemplate();\n\t\texchange.setPattern(ExchangePattern.InOut);\n\t\texchange.getOut().setBody(mapper.writeValueAsString(translateRequest));\n\t\t\n    exchange = t.send(\"direct:translate-text\", exchange);\t\t\n\t\t\n\t\tif (String.valueOf(exchange.getOut().getHeader(\"CamelHttpResponseCode\")).equals(\"200\")) {\n\t\t\tArrayList<HashMap<String, Object>> translationResults = (ArrayList)exchange.getOut().getBody();\n\t\t\tif (translationResults != null && translationResults.size() > 0) {\n\t\t\t\tHashMap<String, Object> translation = translationResults.get(0);\n\t\t\t\tinterimTranscriptionTextInboundTranslated = (String)translation.get(\"output_text\");\n\t\t\t}\n\t\t}\n\t}\n\n\tHashMap<String, Object> jsonResponseData = new HashMap<String, Object>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"text\", interimTranscriptionTextInbound);\n\t\tput(\"direction\", \"inbound\");\n\t\tput(\"text_trans\", interimTranscriptionTextInboundTranslated);\n\t}};\n\t\n\ttranscriptionResults.add(jsonResponseData);\n}\n\nif (interimTranscriptionOutbound != null && interimTranscriptionOutbound.size() > 0) {\n\tString interimTranscriptionTextOutbound = String.join(\" \", interimTranscriptionOutbound).trim();\n\texchange.setProperty(\"interimTranscriptionTextOutbound\", interimTranscriptionTextOutbound);\n\n\tHashMap<String, Object> jsonResponseData = new HashMap<String, Object>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"text\", interimTranscriptionTextOutbound);\n\t\tput(\"direction\", \"outbound\");\n\t\tput(\"text_trans\", null);\n\t}};\n\t\n\ttranscriptionResults.add(jsonResponseData);\n}\n\nif (transcriptionResults.size() > 0) {\n\tHashMap<String, Object> jsonResponse = new HashMap<String, Object>() {{\n\t\tput(\"requestId\", (String)exchange.getProperty(\"exchangeId\"));\n\t\tput(\"apiOperation\", (String)exchange.getProperty(\"apiOperation\"));\n\t\tput(\"objectType\", \"TranscriptionResults\");\n\t\tput(\"data\", transcriptionResults);\n\t}};\n\n\texchange.getOut().setHeader(\"x-agency-id\", (String)exchange.getProperty(\"agencyId\"));\n\texchange.getOut().setBody(mapper.writeValueAsString(jsonResponse));\n\texchange.getIn().setHeader(\"x-agency-id\", (String)exchange.getProperty(\"agencyId\"));\n\texchange.getIn().setBody(mapper.writeValueAsString(jsonResponse));\n\t\n}&import=import com.fasterxml.jackson.databind.ObjectMapper;\nimport org.apache.camel.Exchange;\nimport org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;"
                }, {
                  "name" : "messageFilter",
                  "nodeId" : "2be59049-72e0-48dd-bdf2-d98ba6676eb3",
                  "description" : "Results?",
                  "properties" : {
                    "_type" : "messageFilter",
                    "active" : true,
                    "camelGroup" : "routing",
                    "name" : "messageFilter",
                    "url" : ""
                  },
                  "_type" : "messageFilter",
                  "branches" : [ {
                    "type" : "filter",
                    "label" : "filter",
                    "route" : [ {
                      "name" : "log",
                      "nodeId" : "08ad4a84-dc5f-4005-9eef-1073ceb49539",
                      "description" : "411.cbk.text",
                      "properties" : {
                        "_type" : "log",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "camelGroup" : "component",
                        "level" : "INFO",
                        "logType" : "EIP",
                        "loggerName" : "411.cbk.text",
                        "message" : "${body}",
                        "multiline" : false,
                        "name" : "log",
                        "showAll" : false,
                        "showBody" : true,
                        "showBodyType" : true,
                        "showCaughtException" : false,
                        "showExchangeId" : false,
                        "showHeaders" : false,
                        "showProperties" : false,
                        "showStackTrace" : false,
                        "toDynamicEndpoint" : false,
                        "url" : ""
                      },
                      "_type" : "log",
                      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.cbk.text&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
                    }, {
                      "name" : "seda",
                      "nodeId" : "fbf65095-b146-4d7d-8d0d-39d6533c77b1",
                      "description" : "emit-event",
                      "properties" : {
                        "_type" : "seda",
                        "active" : true,
                        "advancedParameters" : [ ],
                        "blockWhenFull" : false,
                        "camelGroup" : "core",
                        "concurrentConsumers" : "1",
                        "endpointName" : "emit-event",
                        "limitConcurrentConsumers" : true,
                        "multipleConsumers" : false,
                        "name" : "seda",
                        "pollTimeout" : "1000",
                        "size" : "1000",
                        "specifyMaximumCapacitySize" : false,
                        "timeout" : "30000",
                        "toDynamicEndpoint" : false,
                        "url" : "",
                        "waitForTaskToComplete" : "Never"
                      },
                      "_type" : "seda",
                      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=1&endpointName=emit-event&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=Never"
                    } ],
                    "properties" : {
                      "addNamespaces" : "false",
                      "condition" : "${body} != null && ${body} != ''",
                      "language" : "Simple",
                      "namespaces" : [ ],
                      "suppressExceptions" : "false"
                    }
                  } ],
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.transcriptionResultsInterimInbound.size()} > 0 && ${exchangeProperty.transcriptionResultsInterimOutbound.size()}",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              }, {
                "type" : "route",
                "label" : "route",
                "route" : [ {
                  "name" : "setHeaders",
                  "nodeId" : "46dfde9d-4abd-486c-8795-3e62d150d4dd",
                  "description" : "HTTP204",
                  "properties" : {
                    "_type" : "setHeaders",
                    "active" : true,
                    "addNamespaces" : false,
                    "camelGroup" : "core",
                    "headerList" : [ {
                      "headerName" : "CamelHttpResponseCode",
                      "headerValue" : "204",
                      "language" : "Constant",
                      "uuid" : "c2868cb0-97e7-4473-b99b-629df10c877a"
                    } ],
                    "name" : "setHeaders",
                    "namespaces" : [ ],
                    "suppressExceptions" : false,
                    "url" : ""
                  },
                  "_type" : "setHeaders",
                  "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
                }, {
                  "name" : "clearBody",
                  "nodeId" : "493d2f49-5841-48eb-9620-ba68844397e6",
                  "description" : "",
                  "properties" : {
                    "_type" : "clearBody",
                    "camelGroup" : "core",
                    "name" : "clearBody",
                    "url" : ""
                  },
                  "_type" : "clearBody",
                  "kameletPropertiesUrl" : ""
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "filter",
            "route" : [ {
              "name" : "process",
              "nodeId" : "edf30b4e-ec31-47c4-9ca3-464b50fae4f2",
              "description" : "Set Message Request",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "List<String> finalResults = (List)exchange.getProperty(\"transcriptionResultsFinalInbound\");\nString conversationId = (String)exchange.getProperty(\"conversationId\");\nString recipientNumber = (String)exchange.getProperty(\"recipientNumber\");\nString recipientId =(String)exchange.getProperty(\"recipientId\");\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"body\", String.join(\" \", finalResults));\n\tput(\"conversation_id\", conversationId);\n\tput(\"direction\", \"inbound\");\n\tput(\"recipient_number\", recipientNumber);\n\tput(\"recipient_id\", recipientId);\t\n}};\n\nObjectMapper jackson = new ObjectMapper();\nexchange.getIn().setBody(jackson.writeValueAsString(requestJson));",
                "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=List<String> finalResults = (List)exchange.getProperty(\"transcriptionResultsFinalInbound\");\nString conversationId = (String)exchange.getProperty(\"conversationId\");\nString recipientNumber = (String)exchange.getProperty(\"recipientNumber\");\nString recipientId =(String)exchange.getProperty(\"recipientId\");\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"body\", String.join(\" \", finalResults));\n\tput(\"conversation_id\", conversationId);\n\tput(\"direction\", \"inbound\");\n\tput(\"recipient_number\", recipientNumber);\n\tput(\"recipient_id\", recipientId);\t\n}};\n\nObjectMapper jackson = new ObjectMapper();\nexchange.getIn().setBody(jackson.writeValueAsString(requestJson));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
            }, {
              "name" : "setHeaders",
              "nodeId" : "9076ff5a-896c-45b3-8030-d30b8d741d82",
              "description" : "Set Conversation Request",
              "properties" : {
                "_type" : "setHeaders",
                "active" : true,
                "addNamespaces" : false,
                "camelGroup" : "core",
                "headerList" : [ {
                  "headerName" : "CamelHttpPath",
                  "headerValue" : "/api/v1/messages",
                  "language" : "Simple",
                  "uuid" : "938081bc-469c-45a9-ba28-b6c4021aa735"
                }, {
                  "headerName" : "Authorization",
                  "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
                  "language" : "Simple",
                  "uuid" : "24f29983-0a88-4878-ad3e-c58f1832124c"
                }, {
                  "headerName" : "x-agency-id",
                  "headerValue" : "${exchangeProperty.agencyId}",
                  "language" : "Simple",
                  "uuid" : "1e373229-cb55-493e-a884-01eb31969149"
                }, {
                  "headerName" : "Content-Type",
                  "headerValue" : "application/json",
                  "language" : "Constant",
                  "uuid" : "20adecd4-3738-4607-89c7-1c2d92608b8b"
                } ],
                "name" : "setHeaders",
                "namespaces" : [ ],
                "suppressExceptions" : false,
                "url" : ""
              },
              "_type" : "setHeaders",
              "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
            }, {
              "name" : "log",
              "nodeId" : "65b2c2cd-de29-4469-beab-6ad44774c2fb",
              "description" : "411.cbk.conv.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "411.cbk.conv.in",
                "message" : "${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.cbk.conv.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "http",
              "nodeId" : "62d1bc35-3a8a-4902-9895-dbc9566303cf",
              "description" : "POST /messages",
              "properties" : {
                "_type" : "http",
                "active" : true,
                "advancedParameters" : [ ],
                "bridgeEndpoint" : true,
                "camelGroup" : "component",
                "connectTimeout" : "20000",
                "connectionRequestTimeout" : "20000",
                "disableStreamCache" : true,
                "httpMethod" : "POST",
                "httpUri" : "{{convey.api.host}}",
                "name" : "http",
                "scheme" : "https",
                "socketTimeout" : "20000",
                "throwExceptionOnFailure" : true,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "http",
              "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
            }, {
              "name" : "log",
              "nodeId" : "1e45070d-3f23-40af-a085-10762473578d",
              "description" : "411.cbk.conv.out",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "411.cbk.conv.out",
                "message" : "(${header.CamelHttpResponseCode}) ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.cbk.conv.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.transcriptionResultsFinalInbound.size()} > 0",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "invalid token",
        "route" : [ {
          "name" : "log",
          "nodeId" : "66da02c0-b0d5-4577-91d2-b434c79877b2",
          "description" : "411.clbk.401",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "411.clbk.401",
            "message" : "Invalid request, failed to decode token into parts",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=411.clbk.401&message=Invalid request, failed to decode token into parts&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "clearBody",
          "nodeId" : "18049cab-9971-4341-9856-031a8f777828",
          "description" : "",
          "properties" : {
            "_type" : "clearBody",
            "camelGroup" : "core",
            "name" : "clearBody",
            "url" : ""
          },
          "_type" : "clearBody",
          "kameletPropertiesUrl" : ""
        }, {
          "name" : "setHeaders",
          "nodeId" : "0bfd1f92-cfd4-4ae6-949e-4edf0c8c99e5",
          "description" : "HTTP403",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "403",
              "language" : "Constant",
              "uuid" : "ccbcb480-cfb0-4514-a303-6ff70447b7db"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "stop",
          "nodeId" : "52b3031b-cf05-44a6-8b0e-c0ac5c09f0bc",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.agencyId} == null || ${exchangeProperty.conversationId} == null || ${exchangeProperty.recipientId} == null",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-8",
    "enabled" : true,
    "routeId" : 8,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "3212b150-8ae2-4fcb-a657-4487147f163b",
      "description" : "endInboundCall",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab/call/end",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "endInboundCall",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab/call/end&method=post&operationName=endInboundCall&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "b3c31133-44c0-493c-8efc-05a70f47a5e0",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "setProperties",
      "nodeId" : "de249db4-cc85-44cf-9d42-99dee72c3038",
      "description" : "Get Call Props",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "",
          "propertyName" : "",
          "propertyValue" : "",
          "uuid" : "65c9d4a9-eb0a-4377-a1a2-1c572698a45f"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "2c5124a1-2c9e-4897-8ad8-3573efb381fb",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "OFF",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=OFF&logType=EIP&loggerName=log&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-9",
    "enabled" : true,
    "routeId" : 9,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "fa937a10-c40e-46eb-964e-553b6cf92733",
      "description" : "inboundCallError",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab/call/error",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "inboundCallError",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab/call/error&method=post&operationName=inboundCallError&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "6ae5d436-8c83-4049-9c2e-0b917a945a63",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "log",
      "nodeId" : "0de45a1d-7f2e-415b-8813-222e6e3b77ca",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "process",
      "nodeId" : "9748eef9-1d71-438f-be2e-0c29bc67bcc4",
      "description" : "Format JSON Response",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"event_type\", \"call_end\");\n\tput(\"event_metadata\", (HashMap)mapper.readValue((String)exchange.getIn.getBody()));\n}};",
        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> responseJson = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\tput(\"event_type\", \"call_end\");\n\tput(\"event_metadata\", (HashMap)mapper.readValue((String)exchange.getIn.getBody()));\n}};&import=import com.fasterxml.jackson.databind.ObjectMapper;"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-10",
    "enabled" : true,
    "routeId" : 10,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "7ba26647-a489-4320-93f7-4910deadfb52",
      "description" : "emit-event",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "10",
        "endpointName" : "emit-event",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : true,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=10&endpointName=emit-event&limitConcurrentConsumers=true&multipleConsumers=true&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "592194c5-7a32-4852-a85d-82c0a12653d0",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "log",
      "nodeId" : "8bdb8141-2452-4034-bb72-47170f4da161",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "Emitting ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=log&message=Emitting ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "jms",
      "nodeId" : "4f2ac786-dd87-475d-abd6-8d97df00d508",
      "description" : "io.event",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "io.event",
        "destinationType" : "topic",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=io.event&destinationType=topic&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-11",
    "enabled" : true,
    "routeId" : 11,
    "route" : [ {
      "name" : "onException",
      "nodeId" : "ad30291b-f6e4-4fc7-b844-0691cd41c908",
      "description" : "HTTPFailed",
      "properties" : {
        "_type" : "onException",
        "active" : true,
        "asyncDelayedRedelivery" : false,
        "camelGroup" : "exception",
        "exceptionBehavior" : "Handle the exceptions",
        "exceptionList" : [ {
          "exception" : "org.apache.camel.http.base.HttpOperationFailedException"
        } ],
        "maximumRedeliveries" : "2",
        "name" : "onException",
        "redeliveryDelay" : "1000",
        "setRedeliveryDelay" : false,
        "setRedeliveryTriesCount" : false,
        "url" : "",
        "useOriginalMessage" : false
      },
      "_type" : "onException",
      "branches" : [ {
        "type" : "onException",
        "label" : "onException",
        "route" : [ {
          "name" : "log",
          "nodeId" : "2f2e9338-2781-4e00-acb4-5ff2964021df",
          "description" : "",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "WARN",
            "logType" : "EIP",
            "loggerName" : "log",
            "message" : "${exception.stacktrace}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=WARN&logType=EIP&loggerName=log&message=${exception.stacktrace}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : "?asyncDelayedRedelivery=false&exceptionBehavior=Handle the exceptions&maximumRedeliveries=2&redeliveryDelay=1000&setRedeliveryDelay=false&setRedeliveryTriesCount=false&useOriginalMessage=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-12",
    "enabled" : true,
    "routeId" : 12,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "1737df9d-3046-494a-b365-00215994885b",
      "description" : "init-webrtc-service",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "init-webrtc-service",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=init-webrtc-service"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "e72f3d03-29da-478a-8d7b-ff08f547c64d",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "setHeaders",
      "nodeId" : "ec3a4ab2-e199-4159-a202-8cb6c86239d5",
      "description" : "Set Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/webrtc_generate_token",
          "language" : "Constant",
          "uuid" : "898b8286-d84b-4e4d-8ac1-72e644043a9e"
        }, {
          "headerName" : "CamelHttpQuery",
          "headerValue" : "client_id=${exchangeProperty.conversationId}&ttl={{convey.aculab.webrtcTokenTTL}}&enable_incoming=true&call_client=*",
          "language" : "Simple",
          "uuid" : "7dd9e832-37df-4f4e-936d-322bf0fb98ae"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "direct",
      "nodeId" : "2e85ea24-2d35-4b3c-b6de-12444b25cf22",
      "description" : "set-auth-header",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "set-auth-header",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=set-auth-header"
    }, {
      "name" : "clearBody",
      "nodeId" : "05e5232c-53ef-4178-8f75-df4f0d6e1bc3",
      "description" : "",
      "properties" : {
        "_type" : "clearBody",
        "camelGroup" : "core",
        "name" : "clearBody",
        "url" : ""
      },
      "_type" : "clearBody",
      "kameletPropertiesUrl" : ""
    }, {
      "name" : "log",
      "nodeId" : "d6084354-edd8-468c-a2ef-21ab53996570",
      "description" : "411.direct.rtc.tok.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.direct.rtc.tok.in",
        "message" : "GET ${header.CamelHttpPath}?${header.CamelHttpQuery}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.rtc.tok.in&message=GET ${header.CamelHttpPath}?${header.CamelHttpQuery}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "6d8a4638-8413-499f-87fb-eefad15fd2a8",
      "description" : "Generate Token",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : true,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "ws-{{convey.aculab.cloudId}}.aculabcloud.net",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri=ws-{{convey.aculab.cloudId}}.aculabcloud.net&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "log",
      "nodeId" : "cd615beb-c106-4771-8e17-a93c509058d0",
      "description" : "411.direct.rtc.tok.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.direct.rtc.tok.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.rtc.tok.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "95de2087-28f7-42f2-8427-128c7f7aa1c5",
      "description" : "Set Token",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "webrtcToken",
          "propertyValue" : "$.token",
          "uuid" : "45ecb7e7-fbfa-4756-95f9-038258695b67"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?webrtcToken=$.token&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "setBody",
      "nodeId" : "4b55ae32-7f83-4588-a4df-dc378aea86ce",
      "description" : "Set WebRTC Request",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "{\"clientId\": \"${exchangeProperty.conversationId}\", \"token\": \"${exchangeProperty.webrtcToken}\"}",
        "language" : "Simple",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?addNamespaces=false&expression={\"clientId\": \"${exchangeProperty.conversationId}\", \"token\": \"${exchangeProperty.webrtcToken}\"}&language=Simple&suppressExceptions=false"
    }, {
      "name" : "exchangePattern",
      "nodeId" : "5bbc0c5c-c68b-4601-a9eb-4b63072119ec",
      "description" : "InOnly",
      "properties" : {
        "_type" : "exchangePattern",
        "active" : true,
        "camelGroup" : "core",
        "exchangePattern" : "InOnly",
        "name" : "exchangePattern",
        "url" : ""
      },
      "_type" : "exchangePattern",
      "kameletPropertiesUrl" : "?exchangePattern=InOnly"
    }, {
      "name" : "jms",
      "nodeId" : "912dfb4b-4be7-4547-a9f5-e3e0c196c9e8",
      "description" : "services.webrtc.client",
      "properties" : {
        "_type" : "jms",
        "active" : true,
        "advancedParameters" : [ ],
        "asyncConsumer" : false,
        "camelGroup" : "component",
        "concurrentConsumers" : "1",
        "connectionFactory" : "#pooledConnectionFactory",
        "destinationName" : "services.webrtc.client",
        "destinationType" : "queue",
        "exchangePattern" : "InOnly",
        "name" : "jms",
        "setConnectionFactory" : true,
        "toDynamicEndpoint" : false,
        "transacted" : false,
        "url" : ""
      },
      "_type" : "jms",
      "kameletPropertiesUrl" : "?asyncConsumer=false&concurrentConsumers=1&connectionFactory=#pooledConnectionFactory&destinationName=services.webrtc.client&destinationType=queue&exchangePattern=InOnly&setConnectionFactory=true&transacted=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-13",
    "enabled" : true,
    "routeId" : 13,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "48a178d1-669a-406b-b606-b7a8e22edfb2",
      "description" : "set-auth-header",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "set-auth-header",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=set-auth-header"
    }, {
      "name" : "setProperties",
      "nodeId" : "7665a92c-9ca7-4b60-b38a-e7e45f70d946",
      "description" : "Set Auth Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "cloudRegion",
          "propertyValue" : "{{convey.aculab.cloudId}}",
          "uuid" : "8b321d89-9a53-4065-8154-ddcab798d48a"
        }, {
          "language" : "Simple",
          "propertyName" : "cloudUser",
          "propertyValue" : "{{convey.aculab.cloudUser}}",
          "uuid" : "61ab8ae4-fad7-4e28-b256-17ef4441e438"
        }, {
          "language" : "Simple",
          "propertyName" : "cloudKey",
          "propertyValue" : "{{convey.aculab.cloudKey}}",
          "uuid" : "62e9c692-bc0b-460e-80f3-ab8187da0940"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?cloudRegion={{convey.aculab.cloudId}}&cloudUser={{convey.aculab.cloudUser}}&cloudKey={{convey.aculab.cloudKey}}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "process",
      "nodeId" : "a4329db8-0273-4e57-8293-a9cc8287db36",
      "description" : "Set Basic Auth Header",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String cloudRegion = (String)exchange.getProperty(\"cloudRegion\");\nString cloudUser = (String)exchange.getProperty(\"cloudUser\");\nString cloudKey = (String)exchange.getProperty(\"cloudKey\");\n\nString authString = cloudRegion + \"/\" + cloudUser + \":\" + cloudKey;\nString authEncoded = Base64.getEncoder().encodeToString(authString.getBytes());\nexchange.getIn().setHeader(\"Authorization\", \"Basic \" + authEncoded);",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=String cloudRegion = (String)exchange.getProperty(\"cloudRegion\");\nString cloudUser = (String)exchange.getProperty(\"cloudUser\");\nString cloudKey = (String)exchange.getProperty(\"cloudKey\");\n\nString authString = cloudRegion + \"/\" + cloudUser + \":\" + cloudKey;\nString authEncoded = Base64.getEncoder().encodeToString(authString.getBytes());\nexchange.getIn().setHeader(\"Authorization\", \"Basic \" + authEncoded);&import=// import org.apache.camel.Message"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-14",
    "enabled" : true,
    "routeId" : 14,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "a73b8739-1b19-48a5-847c-64246d1658dd",
      "description" : "aculabInboundSms",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab/sms",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "aculabInboundSms",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab/sms&method=post&operationName=aculabInboundSms&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "1a22941c-786f-4a3f-a5f6-84624cf1d8c2",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "direct",
      "nodeId" : "b815eafc-da19-4a0c-b23b-4f0686bfd239",
      "description" : "authorize-request",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "authorize-request",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=authorize-request"
    }, {
      "name" : "log",
      "nodeId" : "6e39774b-11e8-4ca0-94fe-b8bc5ad6b2c4",
      "description" : "411.api.sms.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.sms.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.sms.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "32b46874-5434-4c7f-b2db-ef5047317132",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "resourceId",
          "propertyValue" : "$.msg_ref",
          "uuid" : "e3753744-7c3f-46eb-94d9-186d651fb907"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageTimestamp",
          "propertyValue" : "$.timestamp",
          "uuid" : "2066ac70-0fbb-4977-a52c-d827b9c2ee29"
        }, {
          "language" : "JsonPath",
          "propertyName" : "status",
          "propertyValue" : "$.status",
          "uuid" : "545b6a92-eb7c-4109-ba18-684ac3ccd852"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipientNumber",
          "propertyValue" : "$.from",
          "uuid" : "d5fa6f7b-990f-4a93-8fdb-17ae7f43d340"
        }, {
          "language" : "JsonPath",
          "propertyName" : "providerNumber",
          "propertyValue" : "$.to",
          "uuid" : "26f824dd-77fb-475d-ab11-cc8764b923d8"
        }, {
          "language" : "JsonPath",
          "propertyName" : "type",
          "propertyValue" : "$.type",
          "uuid" : "8674d546-4b49-4191-b363-0ff293e23564"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageBody",
          "propertyValue" : "$.content",
          "uuid" : "5a3a3f62-e44a-4a02-bc17-0a24203b0b12"
        }, {
          "language" : "JsonPath",
          "propertyName" : "errorCode",
          "propertyValue" : "$.aculab_msg_err",
          "uuid" : "410278d8-b7e0-4a85-bd4c-6beaccd9a53e"
        }, {
          "language" : "Simple",
          "propertyName" : "providerNumber",
          "propertyValue" : "+${exchangeProperty.providerNumber}",
          "uuid" : "6b89c053-68c9-420c-b991-e881072aab5f"
        }, {
          "language" : "JsonPath",
          "propertyName" : "media_url",
          "propertyValue" : "$.msg_media",
          "uuid" : "d9bed624-a0a8-4325-8b4f-918cec673201"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?resourceId=$.msg_ref&messageTimestamp=$.timestamp&status=$.status&recipientNumber=$.from&providerNumber=$.to&type=$.type&messageBody=$.content&errorCode=$.aculab_msg_err&providerNumber=+${exchangeProperty.providerNumber}&media_url=$.msg_media&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "3441238a-d6a6-47f6-83ca-c7493f3c1d1c",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "e73d4bb0-0120-43eb-a539-68558847b45a",
      "description" : "SQL Get Agency",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT agency_id, capabilities FROM numbers WHERE number = :#${exchangeProperty.providerNumber} AND status = \\'active\\' LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT agency_id, capabilities FROM numbers WHERE number = :#${exchangeProperty.providerNumber} AND status = \\'active\\' LIMIT 1?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "log",
      "nodeId" : "9bd2537b-9ad4-467d-a5f9-3e0b3f6f292d",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.agency",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.agency&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageFilter",
      "nodeId" : "5fbd6bb6-cfa0-4154-a7ad-54df22a77178",
      "description" : "Exists?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "e394d9c9-0b40-4f28-a6c2-f79043c0b4b6",
          "description" : "Set Agency ID",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Simple",
              "propertyName" : "agencyId",
              "propertyValue" : "${body[agency_id]}",
              "uuid" : "da059b7a-26dc-4ee7-916d-f150512bc47e"
            }, {
              "language" : "Simple",
              "propertyName" : "callFrom",
              "propertyValue" : "+${exchangeProperty.recipientNumber}",
              "uuid" : "1782e9c8-048f-4beb-bdd2-ba3b975f0c0b"
            }, {
              "language" : "Simple",
              "propertyName" : "capabilities",
              "propertyValue" : "${body[capabilities]}",
              "uuid" : "00c2ac74-d799-4874-a013-53d02837aa23"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?agencyId=${body[agency_id]}&callFrom=+${exchangeProperty.recipientNumber}&capabilities=${body[capabilities]}&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "messageFilter",
          "nodeId" : "8372dc83-efed-4c5c-ab27-57a0d07713fa",
          "description" : "is MMS?",
          "properties" : {
            "_type" : "messageFilter",
            "active" : true,
            "camelGroup" : "routing",
            "name" : "messageFilter",
            "url" : ""
          },
          "_type" : "messageFilter",
          "branches" : [ {
            "type" : "route",
            "label" : "route",
            "route" : [ {
              "name" : "direct",
              "nodeId" : "66a3576d-08f4-46fa-a275-119a576daada",
              "description" : "get-conversation",
              "properties" : {
                "_type" : "direct",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "core",
                "endpointName" : "get-conversation",
                "name" : "direct",
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "direct",
              "kameletPropertiesUrl" : "?endpointName=get-conversation"
            }, {
              "name" : "messageRouter",
              "nodeId" : "2249277c-e6cd-4a8a-bb03-67da8a8c6beb",
              "description" : "",
              "properties" : {
                "_type" : "messageRouter",
                "active" : true,
                "camelGroup" : "routing",
                "name" : "messageRouter",
                "url" : ""
              },
              "_type" : "messageRouter",
              "branches" : [ {
                "type" : "when",
                "label" : "existing",
                "route" : [ {
                  "name" : "direct",
                  "nodeId" : "70a4854e-4a60-47f7-972e-56a2213364ff",
                  "description" : "active-convo-handler",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "active-convo-handler",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=active-convo-handler"
                } ],
                "properties" : {
                  "addNamespaces" : "false",
                  "condition" : "${exchangeProperty.conversation[conversation_id]} != null",
                  "language" : "Simple",
                  "namespaces" : [ ],
                  "suppressExceptions" : "false"
                }
              }, {
                "type" : "otherwise",
                "label" : "otherwise",
                "route" : [ {
                  "name" : "direct",
                  "nodeId" : "f52342dc-4509-4535-96de-d20792058785",
                  "description" : "new-convo-handler",
                  "properties" : {
                    "_type" : "direct",
                    "active" : true,
                    "advancedParameters" : [ ],
                    "camelGroup" : "core",
                    "endpointName" : "new-convo-handler",
                    "name" : "direct",
                    "toDynamicEndpoint" : false,
                    "url" : ""
                  },
                  "_type" : "direct",
                  "kameletPropertiesUrl" : "?endpointName=new-convo-handler"
                } ],
                "properties" : { }
              } ],
              "kameletPropertiesUrl" : ""
            } ],
            "properties" : { }
          }, {
            "type" : "filter",
            "label" : "is mms",
            "route" : [ {
              "name" : "log",
              "nodeId" : "396e9eff-a1e1-4b9b-a0e4-0ac035aa838d",
              "description" : "r411.api.sms.mms.in",
              "properties" : {
                "_type" : "log",
                "active" : true,
                "advancedParameters" : [ ],
                "camelGroup" : "component",
                "level" : "INFO",
                "logType" : "EIP",
                "loggerName" : "r411.api.sms.mms.in",
                "message" : "headers: ${headers}; body: ${body}",
                "multiline" : false,
                "name" : "log",
                "showAll" : false,
                "showBody" : true,
                "showBodyType" : true,
                "showCaughtException" : false,
                "showExchangeId" : false,
                "showHeaders" : false,
                "showProperties" : false,
                "showStackTrace" : false,
                "toDynamicEndpoint" : false,
                "url" : ""
              },
              "_type" : "log",
              "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=r411.api.sms.mms.in&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
            }, {
              "name" : "process",
              "nodeId" : "0d5a4863-720e-4899-928b-094af3aa87b8",
              "description" : "Get Media",
              "properties" : {
                "_type" : "process",
                "active" : true,
                "camelGroup" : "transform",
                "code" : "ArrayList<HashMap<String, String>> mediaUrls = new ArrayList<HashMap<String, String>>();\n\nString[] mediaList = (String[])exchange.getProperty(\"media_url\")\n\t\nMap<String, String> extensionWithContentType = new HashMap<String, String>(){{\n\tput(\"jpg\", \"image/jpeg\");\n  put(\"jpeg\", \"image/jpeg\");\n  put(\"png\", \"image/png\");\n  put(\"3gp\", \"audio/3gpp\");\n  put(\"mp4\", \"video/mp4\");\n}};\n\nfor(String media: mediaList){ \n\t  extensionWithContentType.forEach((extension, contentType) -> {\n\t\t\tif(media.endsWith(extension)){\n\t\t\t\tMap<String, String> mediaMap = new HashMap<String, String>() {{\n\t\t\t\t\tput(\"url\", \"https://ws.aculabcloud.net/file_get?filetype=msg_media&filename=\"+media);\n\t\t\t\t\tput(\"contentType\", contentType);\n\t\t\t\t}};\n\t\t\t\tmediaUrls.add(mediaMap);\n\t\t\t}\n\t\t});\n}\t\nexchange.setProperty(\"numMedia\", mediaUrls.size());\nexchange.setProperty(\"mediaUrls\", mediaUrls);",
                "import" : "import java.util.HashMap;\nimport java.util.Map;\n",
                "name" : "process",
                "url" : ""
              },
              "_type" : "process",
              "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, String>> mediaUrls = new ArrayList<HashMap<String, String>>();\n\nString[] mediaList = (String[])exchange.getProperty(\"media_url\")\n\t\nMap<String, String> extensionWithContentType = new HashMap<String, String>(){{\n\tput(\"jpg\", \"image/jpeg\");\n  put(\"jpeg\", \"image/jpeg\");\n  put(\"png\", \"image/png\");\n  put(\"3gp\", \"audio/3gpp\");\n  put(\"mp4\", \"video/mp4\");\n}};\n\nfor(String media: mediaList){ \n\t  extensionWithContentType.forEach((extension, contentType) -> {\n\t\t\tif(media.endsWith(extension)){\n\t\t\t\tMap<String, String> mediaMap = new HashMap<String, String>() {{\n\t\t\t\t\tput(\"url\", \"https://ws.aculabcloud.net/file_get?filetype=msg_media&filename=\"+media);\n\t\t\t\t\tput(\"contentType\", contentType);\n\t\t\t\t}};\n\t\t\t\tmediaUrls.add(mediaMap);\n\t\t\t}\n\t\t});\n}\t\nexchange.setProperty(\"numMedia\", mediaUrls.size());\nexchange.setProperty(\"mediaUrls\", mediaUrls);&import=import java.util.HashMap;\nimport java.util.Map;\n"
            } ],
            "properties" : {
              "addNamespaces" : "false",
              "condition" : "${exchangeProperty.type} == \"mms\"",
              "language" : "Simple",
              "namespaces" : [ ],
              "suppressExceptions" : "false"
            }
          } ],
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "RowCount == 0",
        "route" : [ {
          "name" : "log",
          "nodeId" : "5194ccf1-4687-4aa0-b6e9-9b7866e622ae",
          "description" : "411.api.sms.404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.api.sms.404",
            "message" : "Provider ${exchangeProperty.providerNumber} number not found",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.sms.404&message=Provider ${exchangeProperty.providerNumber} number not found&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "8e9c473f-5207-420d-ad03-cfb6089adf38",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "8f2087b8-3426-4155-ad88-70b6e8a1fbae"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "clearBody",
          "nodeId" : "3828cf11-adf3-4d9f-82c3-32d666176e9d",
          "description" : "",
          "properties" : {
            "_type" : "clearBody",
            "camelGroup" : "core",
            "name" : "clearBody",
            "url" : ""
          },
          "_type" : "clearBody",
          "kameletPropertiesUrl" : ""
        }, {
          "name" : "stop",
          "nodeId" : "5a7c1e0c-7554-41c3-9c8f-6d593384433d",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelSqlRowCount} == 0",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-15",
    "enabled" : true,
    "routeId" : 15,
    "route" : [ {
      "name" : "postRequest",
      "nodeId" : "fcd74213-64b9-4a10-a5bf-e5ca85eaa57a",
      "description" : "aculabStatusCallback",
      "properties" : {
        "_type" : "restApi",
        "active" : true,
        "camelGroup" : "rest",
        "consumes" : "application/json",
        "endpoint" : "/on/aculab/sms/status/{conversationId}/{messageId}",
        "method" : "post",
        "name" : "postRequest",
        "operationName" : "aculabStatusCallback",
        "produces" : "application/json",
        "requestmethod" : "POST",
        "url" : ""
      },
      "_type" : "restApi",
      "kameletPropertiesUrl" : "?consumes=application/json&endpoint=/on/aculab/sms/status/{conversationId}/{messageId}&method=post&operationName=aculabStatusCallback&produces=application/json&requestmethod=POST"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "f655f05b-d767-42e3-9c1a-2cce75629c55",
      "description" : "",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "direct",
      "nodeId" : "f4eebb18-2f04-4676-aba7-0f4ac5a9f654",
      "description" : "authorize-request",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "authorize-request",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=authorize-request"
    }, {
      "name" : "log",
      "nodeId" : "5215684e-db5c-49b4-b315-c9c0d134544e",
      "description" : "411.api.status.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.status.in",
        "message" : "POST ${header.CamelHttpPath} ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.status.in&message=POST ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "setProperties",
      "nodeId" : "20c40aec-2f0b-4b3c-8d97-7ae32bd578d7",
      "description" : "Get Input Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "JsonPath",
          "propertyName" : "resourceId",
          "propertyValue" : "$.msg_ref",
          "uuid" : "ccf8abbc-7413-47b4-a9ed-429ce3b7188c"
        }, {
          "language" : "JsonPath",
          "propertyName" : "messageTimestamp",
          "propertyValue" : "$.timestamp",
          "uuid" : "af10b36f-7cd3-4449-a0db-ae7bb53fdbb2"
        }, {
          "language" : "JsonPath",
          "propertyName" : "smsStatus",
          "propertyValue" : "$.status",
          "uuid" : "7472cfe7-b887-49c2-bb44-2cb19f0eb666"
        }, {
          "language" : "JsonPath",
          "propertyName" : "recipientNumber",
          "propertyValue" : "$.to",
          "uuid" : "4053fcf5-e82b-4f68-acfa-4ddee38785a7"
        }, {
          "language" : "JsonPath",
          "propertyName" : "providerNumber",
          "propertyValue" : "$.from",
          "uuid" : "b2f92e1e-69e2-4021-b0b2-c776b4f60023"
        }, {
          "language" : "JsonPath",
          "propertyName" : "type",
          "propertyValue" : "$.type",
          "uuid" : "ca1c45d0-61de-4cc9-82f3-0900aaa1f7b4"
        }, {
          "language" : "JsonPath",
          "propertyName" : "errorCode",
          "propertyValue" : "$.aculab_msg_err",
          "uuid" : "5fb13de6-4713-4b01-9a50-bffb1161ef20"
        }, {
          "language" : "Header",
          "propertyName" : "conversationId",
          "propertyValue" : "conversationId",
          "uuid" : "ad413a53-c141-4e3b-8b6b-f988be423450"
        }, {
          "language" : "Header",
          "propertyName" : "messageId",
          "propertyValue" : "messageId",
          "uuid" : "cf9a51f3-9168-42ef-8050-0b41766ec553"
        }, {
          "language" : "Simple",
          "propertyName" : "callTo",
          "propertyValue" : "${exchangeProperty.providerNumber}",
          "uuid" : "259c5c91-0a5f-4683-8fc1-2356ec5475a0"
        }, {
          "language" : "Simple",
          "propertyName" : "recipientNumber",
          "propertyValue" : "+${exchangeProperty.recipientNumber}",
          "uuid" : "572d4c92-93f7-419c-be85-a58c1f6c1da8"
        }, {
          "language" : "Simple",
          "propertyName" : "providerNumber",
          "propertyValue" : "${exchangeProperty.providerNumber}",
          "uuid" : "2c178109-b653-4efd-8660-17bab2acb089"
        } ],
        "suppressExceptions" : true,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?resourceId=$.msg_ref&messageTimestamp=$.timestamp&smsStatus=$.status&recipientNumber=$.to&providerNumber=$.from&type=$.type&errorCode=$.aculab_msg_err&conversationId=conversationId&messageId=messageId&callTo=${exchangeProperty.providerNumber}&recipientNumber=+${exchangeProperty.recipientNumber}&providerNumber=${exchangeProperty.providerNumber}&addNamespaces=false&suppressExceptions=true"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "bb5469c6-c092-46d8-9585-ee35c028429c",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\")"
    }, {
      "name" : "direct",
      "nodeId" : "574b30f9-da6f-437c-a169-517da0a7e9dc",
      "description" : "post-message-status",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "post-message-status",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=post-message-status"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-16",
    "enabled" : true,
    "routeId" : 16,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "368a148f-631c-4929-96e3-f44962894123",
      "description" : "post-message-status",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "post-message-status",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=post-message-status"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "df5c54cb-8ef4-43d6-9abe-f7042f926aa1",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-*\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-*\")"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "597bebe1-713d-4955-afbc-d8e7d1312b9f",
      "description" : "SQL Get Number",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "sql:SELECT id, agency_id FROM numbers WHERE number = :#${exchangeProperty.providerNumber}?dataSource=#dsPostgres&OutputType=SelectOne",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=sql:SELECT id, agency_id FROM numbers WHERE number = :#${exchangeProperty.providerNumber}?dataSource=#dsPostgres&OutputType=SelectOne"
    }, {
      "name" : "messageFilter",
      "nodeId" : "e8e9f745-a831-4794-9a01-17ddfa1b7912",
      "description" : "Exists?",
      "properties" : {
        "_type" : "messageFilter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageFilter",
        "url" : ""
      },
      "_type" : "messageFilter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "2136e0b8-a61b-4674-b950-1daffcc538bb",
          "description" : "Set Request",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "Authorization",
              "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
              "language" : "Simple",
              "uuid" : "51366118-12aa-49f8-ab71-3e3d514998b7"
            }, {
              "headerName" : "Content-Type",
              "headerValue" : "application/json",
              "language" : "Constant",
              "uuid" : "3ed5b3ac-c7e8-446e-860d-9fe6b4043ff6"
            }, {
              "headerName" : "CamelHttpPath",
              "headerValue" : "/api/v1/messages/${exchangeProperty.messageId}/status",
              "language" : "Simple",
              "uuid" : "e9cdbef5-4ed0-4904-9f8c-06d84107426b"
            }, {
              "headerName" : "x-agency-id",
              "headerValue" : "${body[agency_id]}",
              "language" : "Simple",
              "uuid" : "1bff5d22-8972-42ed-902a-d1864ac951fa"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "c8faa573-5356-4ef6-b2bb-e60e34e5c3aa",
          "description" : "Set JSON Request",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ObjectMapper mapper = new ObjectMapper();\nString status = (String)exchange.getProperty(\"smsStatus\");\nString errorCode = (String)exchange.getProperty(\"errorCode\");\n\nif (errorCode.equals(\"000\"))\n\terrorCode = null;\n\nif (errorCode != null)\n\tstatus = \"failed\";\n\nif (status.equals(\"submitted to carrier\"))\n\tstatus = \"sent\";\n\nHashMap<String, Object> messageStatus = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"message_id\", (String)exchange.getProperty(\"messageId\")); \n\tput(\"status\", status);\n}}\n\nif (exchange.getProperty(\"resourceId\") != null) \n\tmessageStatus.put(\"resource_id\", (String)exchange.getProperty(\"resourceId\")); \n\nif (errorCode != null) \n\tmessageStatus.put(\"error_code\", errorCode);\n\nif (exchange.getProperty(\"errorMessage\") != null)\n\tmessageStatus.put(\"error_message\", String.valueOf(exchange.getProperty(\"errorMessage\")));\n\ntry {\n\tif (exchange.getProperty(\"numSegments\") != null)\n\t\tmessageStatus.put(\"num_segments\", (int)exchange.getProperty(\"numSegments\"));\n\n\tif (exchange.getProperty(\"numMedia\") != null)\n\t\tmessageStatus.put(\"num_media\", (int)exchange.getProperty(\"numMedia\"));\n\n} catch (Exception e) {}\n\nexchange.getIn().setBody(mapper.writeValueAsString(messageStatus));",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\nString status = (String)exchange.getProperty(\"smsStatus\");\nString errorCode = (String)exchange.getProperty(\"errorCode\");\n\nif (errorCode.equals(\"000\"))\n\terrorCode = null;\n\nif (errorCode != null)\n\tstatus = \"failed\";\n\nif (status.equals(\"submitted to carrier\"))\n\tstatus = \"sent\";\n\nHashMap<String, Object> messageStatus = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\tput(\"message_id\", (String)exchange.getProperty(\"messageId\")); \n\tput(\"status\", status);\n}}\n\nif (exchange.getProperty(\"resourceId\") != null) \n\tmessageStatus.put(\"resource_id\", (String)exchange.getProperty(\"resourceId\")); \n\nif (errorCode != null) \n\tmessageStatus.put(\"error_code\", errorCode);\n\nif (exchange.getProperty(\"errorMessage\") != null)\n\tmessageStatus.put(\"error_message\", String.valueOf(exchange.getProperty(\"errorMessage\")));\n\ntry {\n\tif (exchange.getProperty(\"numSegments\") != null)\n\t\tmessageStatus.put(\"num_segments\", (int)exchange.getProperty(\"numSegments\"));\n\n\tif (exchange.getProperty(\"numMedia\") != null)\n\t\tmessageStatus.put(\"num_media\", (int)exchange.getProperty(\"numMedia\"));\n\n} catch (Exception e) {}\n\nexchange.getIn().setBody(mapper.writeValueAsString(messageStatus));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
        }, {
          "name" : "log",
          "nodeId" : "e43574c4-fc6e-4c45-8572-99d644e457d0",
          "description" : "411.direct.status.api.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.direct.status.api.in",
            "message" : "PUT ${header.CamelHttpPath} ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.status.api.in&message=PUT ${header.CamelHttpPath} ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "http",
          "nodeId" : "ac2e4b48-8685-429f-8bb8-02494c1ccb3d",
          "description" : "PUT /messages/status",
          "properties" : {
            "_type" : "http",
            "active" : true,
            "advancedParameters" : [ ],
            "bridgeEndpoint" : true,
            "camelGroup" : "component",
            "connectTimeout" : "20000",
            "connectionRequestTimeout" : "20000",
            "disableStreamCache" : true,
            "httpMethod" : "PUT",
            "httpUri" : "{{convey.api.host}}",
            "name" : "http",
            "scheme" : "https",
            "socketTimeout" : "20000",
            "throwExceptionOnFailure" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "http",
          "kameletPropertiesUrl" : "?bridgeEndpoint=true&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=PUT&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=false"
        }, {
          "name" : "log",
          "nodeId" : "3402e509-fe14-4d31-a5ae-ef0bf054d698",
          "description" : "411.direct.status.api.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.direct.status.api.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.status.api.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : { }
      }, {
        "type" : "filter",
        "label" : "filter",
        "route" : [ {
          "name" : "log",
          "nodeId" : "7ae04402-4dc9-4154-ac7c-84fd691e05a3",
          "description" : "411.direct.status.404",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.direct.status.404",
            "message" : "Provider number ${exchangeProperty.providerNumber} not found",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.direct.status.404&message=Provider number ${exchangeProperty.providerNumber} not found&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "setHeaders",
          "nodeId" : "7859731f-c9fb-43f6-951b-43b0173aacbb",
          "description" : "HTTP404",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpResponseCode",
              "headerValue" : "404",
              "language" : "Constant",
              "uuid" : "dbd0d6a9-2ffe-4b10-b39e-7293eb40cc4b"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "clearBody",
          "nodeId" : "4e3e9454-6a4e-4ae2-872a-040da7a95387",
          "description" : "",
          "properties" : {
            "_type" : "clearBody",
            "camelGroup" : "core",
            "name" : "clearBody",
            "url" : ""
          },
          "_type" : "clearBody",
          "kameletPropertiesUrl" : ""
        }, {
          "name" : "removeHeaders",
          "nodeId" : "d504e21f-5746-4c6b-9051-2a467aeb036a",
          "description" : "",
          "properties" : {
            "_type" : "removeHeaders",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "excludePattern" : "Camel*",
            "name" : "removeHeaders",
            "pattern" : "*",
            "url" : ""
          },
          "_type" : "removeHeaders",
          "kameletPropertiesUrl" : "?excludePattern=Camel*&pattern=*"
        }, {
          "name" : "stop",
          "nodeId" : "0378a73c-34a2-47b6-8866-5f3c357e2f3c",
          "description" : "",
          "properties" : {
            "_type" : "stop",
            "camelGroup" : "misc",
            "name" : "stop",
            "url" : ""
          },
          "_type" : "stop",
          "kameletPropertiesUrl" : ""
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.foo} == \"bar\"",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-17",
    "enabled" : true,
    "routeId" : 17,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "8a4d0e7f-a0ee-49e4-96ca-c4cf78b46de6",
      "description" : "new-convo-handler",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "new-convo-handler",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=new-convo-handler"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "7869728d-d7b7-4487-b958-f3ed34389888",
      "description" : "Get Settings",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to(\"velocity:settings.select.sql.vm?allowContextMapAll=true\")\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to(\"velocity:settings.select.sql.vm?allowContextMapAll=true\")\n\t.to(\"sql:query?dataSource=#dsPostgres&OutputType=SelectList&useMessageBodyForSql=true\")"
    }, {
      "name" : "process",
      "nodeId" : "d5b33838-3585-4478-b73d-e0ab9fc85d17",
      "description" : "Parse Settings",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ArrayList<HashMap<String, Object>> settings = (ArrayList)exchange.getIn().getBody();\nfor (int i = 0; i < settings.size(); i++) {\n\tHashMap<String, Object> setting = (HashMap)settings.get(i);\n\tString settingName = setting.get(\"name\");\n\tObject settingValue = setting.get(\"value\");\n\tif (String.valueOf(settingValue).equals(\"true\"))\n\t\tsettingValue = true;\n\telse if (String.valueOf(settingValue).equals(\"false\"))\n\t\tsettingValue = false;\n\telse \n\t\tsettingValue = String.valueOf(settingValue);\n\n\texchange.setProperty(settingName, settingValue);\n}",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ArrayList<HashMap<String, Object>> settings = (ArrayList)exchange.getIn().getBody();\nfor (int i = 0; i < settings.size(); i++) {\n\tHashMap<String, Object> setting = (HashMap)settings.get(i);\n\tString settingName = setting.get(\"name\");\n\tObject settingValue = setting.get(\"value\");\n\tif (String.valueOf(settingValue).equals(\"true\"))\n\t\tsettingValue = true;\n\telse if (String.valueOf(settingValue).equals(\"false\"))\n\t\tsettingValue = false;\n\telse \n\t\tsettingValue = String.valueOf(settingValue);\n\n\texchange.setProperty(settingName, settingValue);\n}&import=// import org.apache.camel.Message"
    }, {
      "name" : "messageRouter",
      "nodeId" : "a38a1511-a3be-4e16-984c-bea69705d434",
      "description" : "Inbound Enabled?",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "when",
        "label" : "true",
        "route" : [ {
          "name" : "setHeaders",
          "nodeId" : "caf917bf-004d-4dca-8c1b-54448b98b0f2",
          "description" : "Set Request",
          "properties" : {
            "_type" : "setHeaders",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "headerList" : [ {
              "headerName" : "CamelHttpPath",
              "headerValue" : "/api/v1/conversations",
              "language" : "Constant",
              "uuid" : "b61a71d0-2b43-4ad2-adef-2c45cea4d896"
            }, {
              "headerName" : "Content-Type",
              "headerValue" : "application/json",
              "language" : "Constant",
              "uuid" : "19d77cb0-69fa-4d9a-a65f-76cbc137937b"
            }, {
              "headerName" : "Authorization",
              "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
              "language" : "Simple",
              "uuid" : "b18306cd-f1d5-4163-8ad4-27e291396ae4"
            }, {
              "headerName" : "x-agency-id",
              "headerValue" : "${exchangeProperty.agencyId}",
              "language" : "Simple",
              "uuid" : "d17c4cd2-f15a-4af3-baf6-499f6aabe2f4"
            } ],
            "name" : "setHeaders",
            "namespaces" : [ ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setHeaders",
          "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "process",
          "nodeId" : "0be41886-77b0-453c-a99d-a60cb62e5d0e",
          "description" : "Set JSON Request",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"message\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"direction\", \"inbound\");\n\tput(\"number\", (String)exchange.getProperty(\"providerNumber\"));\n}};\n\nHashMap<String, String> recipient = new HashMap<String, String>() {{\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n}};\n\nArrayList<HashMap<String, String>> recipientList = new ArrayList<HashMap<String, String>>() {{\n\tadd(recipient);\n}};\n\nrequestJson.put(\"recipients\", recipientList);\nexchange.getIn().setBody(mapper.writeValueAsString(requestJson));",
            "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"message\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"direction\", \"inbound\");\n\tput(\"number\", (String)exchange.getProperty(\"providerNumber\"));\n}};\n\nHashMap<String, String> recipient = new HashMap<String, String>() {{\n\tput(\"number\", (String)exchange.getProperty(\"recipientNumber\"));\n}};\n\nArrayList<HashMap<String, String>> recipientList = new ArrayList<HashMap<String, String>>() {{\n\tadd(recipient);\n}};\n\nrequestJson.put(\"recipients\", recipientList);\nexchange.getIn().setBody(mapper.writeValueAsString(requestJson));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
        }, {
          "name" : "log",
          "nodeId" : "d298412e-b3c1-4b5d-a8bc-b5ac4789380f",
          "description" : "411.convo.new.api.in",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.convo.new.api.in",
            "message" : "POST /conversations ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.convo.new.api.in&message=POST /conversations ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "http",
          "nodeId" : "fcc89535-4798-49a2-92d1-82a3a938ff50",
          "description" : "POST /conversations",
          "properties" : {
            "_type" : "http",
            "active" : true,
            "advancedParameters" : [ ],
            "bridgeEndpoint" : false,
            "camelGroup" : "component",
            "connectTimeout" : "20000",
            "connectionRequestTimeout" : "20000",
            "disableStreamCache" : true,
            "httpMethod" : "POST",
            "httpUri" : "{{convey.api.host}}",
            "name" : "http",
            "scheme" : "https",
            "socketTimeout" : "20000",
            "throwExceptionOnFailure" : true,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "http",
          "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
        }, {
          "name" : "convertBodyTo",
          "nodeId" : "d5e8743e-8ca7-4cdb-9689-315648671545",
          "description" : "",
          "properties" : {
            "_type" : "convertBodyTo",
            "active" : true,
            "camelGroup" : "transform",
            "name" : "convertBodyTo",
            "targetClass" : "String.class",
            "url" : ""
          },
          "_type" : "convertBodyTo",
          "kameletPropertiesUrl" : "?targetClass=String.class"
        }, {
          "name" : "log",
          "nodeId" : "744df324-850d-49c2-8dff-5485bbaf1ec1",
          "description" : "411.convo.new.api.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.convo.new.api.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.convo.new.api.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.inboundConversationsEnabled}",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "otherwise",
        "label" : "otherwise",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "98604840-a7bf-4d04-bbf1-bda78806ec1c",
          "description" : "Set Bounce Message",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "Constant",
              "propertyName" : "bounceBackMessage",
              "propertyValue" : "This number is not monitored. If you have an emergency please call 911.",
              "uuid" : "45c22091-7edb-4c58-b440-75126c32915c"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?bounceBackMessage=This number is not monitored. If you have an emergency please call 911.&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "direct",
          "nodeId" : "29697b6d-a626-4d3f-8cf1-057ff60d4256",
          "description" : "send-bounce-back",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "send-bounce-back",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=send-bounce-back"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-18",
    "enabled" : true,
    "routeId" : 18,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "50142b3f-7bd9-41f8-9d80-910d5ada2106",
      "description" : "active-convo-handler",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "active-convo-handler",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=active-convo-handler"
    }, {
      "name" : "setProperties",
      "nodeId" : "83b03582-77f1-4ffc-a8a1-0cf86f2ec950",
      "description" : "Set Conversation Params",
      "properties" : {
        "_type" : "setProperties",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "name" : "setProperties",
        "namespaces" : [ ],
        "propertyList" : [ {
          "language" : "Simple",
          "propertyName" : "conversationId",
          "propertyValue" : "${exchangeProperty.conversation[conversation_id]}",
          "uuid" : "3da131b8-ad22-466b-8406-18d59a0948ec"
        }, {
          "language" : "Simple",
          "propertyName" : "providerNumberId",
          "propertyValue" : "${exchangeProperty.conversation[conversation_id]}",
          "uuid" : "b4128bb5-0513-4d53-adb2-07028f47ea04"
        }, {
          "language" : "Simple",
          "propertyName" : "recipientId",
          "propertyValue" : "${exchangeProperty.conversation[recipients][0][recipient_id]}",
          "uuid" : "8c3f219d-1807-4c5a-b5c1-a89e7b09daad"
        }, {
          "language" : "Simple",
          "propertyName" : "recipientLanguage",
          "propertyValue" : "${exchangeProperty.conversation[recipients][0][language]}",
          "uuid" : "d5170792-7008-4502-99df-ea815caca456"
        } ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setProperties",
      "kameletPropertiesUrl" : "?conversationId=${exchangeProperty.conversation[conversation_id]}&providerNumberId=${exchangeProperty.conversation[conversation_id]}&recipientId=${exchangeProperty.conversation[recipients][0][recipient_id]}&recipientLanguage=${exchangeProperty.conversation[recipients][0][language]}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "process",
      "nodeId" : "e83dccf8-ba0c-4a92-aefc-17eadb393827",
      "description" : "Set Message JSON",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\")); \n\tput(\"provider_number_id\", (String)exchange.getProperty(\"providerNumberId\"));\n\tput(\"provider_number\", (String)exchange.getProperty(\"providerNumber\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"resource_id\", (String)exchange.getProperty(\"resourceId\")); \n\tput(\"body\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"direction\", \"inbound\");\n\tput(\"status\", \"received\");\n}};\n\nif (exchange.getProperty(\"recipientId\") != null)\n\trequestJson.put(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\trequestJson.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\n\ntry {\n\tif (exchange.getProperty(\"numMedia\") != null)\n\t\trequestJson.put(\"num_media\", Integer.valueOf((String)exchange.getProperty(\"numMedia\")));\n} catch (Exception e) {\n\tSystem.err.println(\"Error parsing numMedia from request body\");\n}\n\nexchange.getIn().setBody(mapper.writeValueAsString(requestJson));",
        "import" : "import com.fasterxml.jackson.databind.ObjectMapper;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=ObjectMapper mapper = new ObjectMapper();\n\nHashMap<String, Object> requestJson = new HashMap<String, Object>() {{\n\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\")); \n\tput(\"provider_number_id\", (String)exchange.getProperty(\"providerNumberId\"));\n\tput(\"provider_number\", (String)exchange.getProperty(\"providerNumber\"));\n\tput(\"recipient_number\", (String)exchange.getProperty(\"recipientNumber\"));\n\tput(\"resource_id\", (String)exchange.getProperty(\"resourceId\")); \n\tput(\"body\", (String)exchange.getProperty(\"messageBody\"));\n\tput(\"direction\", \"inbound\");\n\tput(\"status\", \"received\");\n}};\n\nif (exchange.getProperty(\"recipientId\") != null)\n\trequestJson.put(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\nif (exchange.getProperty(\"recipientLanguage\") != null)\n\trequestJson.put(\"language\", (String)exchange.getProperty(\"recipientLanguage\"));\n\ntry {\n\tif (exchange.getProperty(\"numMedia\") != null)\n\t\trequestJson.put(\"num_media\", Integer.valueOf((String)exchange.getProperty(\"numMedia\")));\n} catch (Exception e) {\n\tSystem.err.println(\"Error parsing numMedia from request body\");\n}\n\nexchange.getIn().setBody(mapper.writeValueAsString(requestJson));&import=import com.fasterxml.jackson.databind.ObjectMapper;"
    }, {
      "name" : "setHeaders",
      "nodeId" : "69e525ab-5e05-441d-aa34-983f4f7ecfb8",
      "description" : "Set Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "Content-Type",
          "headerValue" : "application/json; charset=utf-8",
          "language" : "Constant",
          "uuid" : "fd0b3c2a-5b83-4195-9bbe-6d41ec36b547"
        }, {
          "headerName" : "x-agency-id",
          "headerValue" : "${exchangeProperty.agencyId}",
          "language" : "Simple",
          "uuid" : "7e2e4756-9159-4276-bdb1-7f8b5339f3cb"
        }, {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/messages",
          "language" : "Constant",
          "uuid" : "28d0693e-bb86-4b74-b3fb-5c77457599e8"
        }, {
          "headerName" : "Authorization",
          "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
          "language" : "Simple",
          "uuid" : "69d422f1-7c1f-499e-a7bc-bdd970a4a7c7"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "d325f1c8-fa9f-4e48-b7f4-af5992697e00",
      "description" : "411.api.sms.msg.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.sms.msg.in",
        "message" : "${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.sms.msg.in&message=${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "34f894f0-cf57-4ef3-be77-df7d1a07ab7c",
      "description" : "POST /messages",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "POST",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "messageRouter",
      "nodeId" : "23d3fc4c-ca02-4ad6-ac17-71155ab35930",
      "description" : "",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "when",
        "label" : "is mms",
        "route" : [ {
          "name" : "direct",
          "nodeId" : "39f3649d-c851-4c31-b7fc-36372a89e2bc",
          "description" : "inbound-mms",
          "properties" : {
            "_type" : "direct",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "core",
            "endpointName" : "inbound-mms",
            "name" : "direct",
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "direct",
          "kameletPropertiesUrl" : "?endpointName=inbound-mms"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${exchangeProperty.type} == \"mms\"",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      }, {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "log",
          "nodeId" : "497bc6c0-5678-4ba5-b50d-28508191c264",
          "description" : "411.api.sms.msg.out",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.api.sms.msg.out",
            "message" : "(${header.CamelHttpResponseCode}) ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.sms.msg.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : { }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-19",
    "enabled" : true,
    "routeId" : 19,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "1dd44bb2-5429-4abc-9185-cff620dcb53e",
      "description" : "send-bounce-back",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "send-bounce-back",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=send-bounce-back"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "c546499e-3d17-4ef5-9263-0f0c42db0db6",
      "description" : "Remove Headers",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".removeHeaders(\"*\", \"x-\")",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.removeHeaders(\"*\", \"x-\")"
    }, {
      "name" : "process",
      "nodeId" : "3af9e14f-a954-4410-ad05-2ad6c676faec",
      "description" : "Set Request",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String messageBody = (String)exchange.getProperty(\"bounceBackMessage\");\nif (messageBody == null)\n\tmessageBody = \"Your message could not be delivered. Please call 911 if you have an emergency\";\n\t\nmessageBody = URLEncoder.encode(messageBody);\n\nCamelContext context = exchange.getContext();\nString authKey = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.authorization\").get();\n\n//String statusAuthUsername = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthUsername\").get();\n//String statusAuthPassword = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthPassword\").get();\n\nString recipientNumber = (String)exchange.getProperty(\"recipientNumber\");\nString providerNumber = (String)exchange.getProperty(\"providerNumber\");\n\nString smsRequest = \"to=\" + URLEncoder.encode(recipientNumber) + \n    \"&from=\" + providerNumber.substring(1) + \n    \"&content=\" + messageBody;\n\nSystem.out.println(smsRequest);\nexchange.getIn().setHeader(\"CamelHttpPath\", \"/msg_send\");\nexchange.getIn().setHeader(\"Authorization\", \"Basic \" + authKey);\nexchange.getIn().setHeader(\"CamelHttpQuery\", smsRequest);\nexchange.getIn().setBody(\"\");",
        "import" : "// import org.apache.camel.Message",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=String messageBody = (String)exchange.getProperty(\"bounceBackMessage\");\nif (messageBody == null)\n\tmessageBody = \"Your message could not be delivered. Please call 911 if you have an emergency\";\n\t\nmessageBody = URLEncoder.encode(messageBody);\n\nCamelContext context = exchange.getContext();\nString authKey = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.authorization\").get();\n\n//String statusAuthUsername = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthUsername\").get();\n//String statusAuthPassword = (String)context.getPropertiesComponent().resolveProperty(\"convey.aculab.inboundAuthPassword\").get();\n\nString recipientNumber = (String)exchange.getProperty(\"recipientNumber\");\nString providerNumber = (String)exchange.getProperty(\"providerNumber\");\n\nString smsRequest = \"to=\" + URLEncoder.encode(recipientNumber) + \n    \"&from=\" + providerNumber.substring(1) + \n    \"&content=\" + messageBody;\n\nSystem.out.println(smsRequest);\nexchange.getIn().setHeader(\"CamelHttpPath\", \"/msg_send\");\nexchange.getIn().setHeader(\"Authorization\", \"Basic \" + authKey);\nexchange.getIn().setHeader(\"CamelHttpQuery\", smsRequest);\nexchange.getIn().setBody(\"\");&import=// import org.apache.camel.Message"
    }, {
      "name" : "log",
      "nodeId" : "dd7ffe5a-2e6f-43ef-815c-4783f4fe50b2",
      "description" : "direct.bounce.api.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "r411.direct.bounce.api.in",
        "message" : "${header.CamelHttpQuery}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=r411.direct.bounce.api.in&message=${header.CamelHttpQuery}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "5dd5653c-a12f-4ed8-9c38-e53fdcbbc6b1",
      "description" : "POST /msg_send",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "POST",
        "httpUri" : "{{convey.aculab.hostname}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.aculab.hostname}}&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "log",
      "nodeId" : "2ce32198-37e4-4ec3-9e0b-333112e67cbc",
      "description" : "direct.bounce.api.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "r411.direct.bounce.api.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=r411.direct.bounce.api.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-20",
    "enabled" : true,
    "routeId" : 20,
    "route" : [ {
      "name" : "seda",
      "nodeId" : "c32bae97-72e9-49bd-ac0b-69047a3e231e",
      "description" : "post-attachments",
      "properties" : {
        "_type" : "seda",
        "active" : true,
        "advancedParameters" : [ ],
        "blockWhenFull" : false,
        "camelGroup" : "core",
        "concurrentConsumers" : "10",
        "endpointName" : "post-attachments",
        "limitConcurrentConsumers" : true,
        "multipleConsumers" : false,
        "name" : "seda",
        "pollTimeout" : "1000",
        "size" : "1000",
        "specifyMaximumCapacitySize" : false,
        "timeout" : "30000",
        "toDynamicEndpoint" : false,
        "url" : "",
        "waitForTaskToComplete" : "IfReplyExpected"
      },
      "_type" : "seda",
      "kameletPropertiesUrl" : "?blockWhenFull=false&concurrentConsumers=10&endpointName=post-attachments&limitConcurrentConsumers=true&multipleConsumers=false&pollTimeout=1000&size=1000&specifyMaximumCapacitySize=false&timeout=30000&waitForTaskToComplete=IfReplyExpected"
    }, {
      "name" : "setHeaders",
      "nodeId" : "cbb3c14c-dd74-41c2-872c-fdd46a698083",
      "description" : "Set Attachment Request",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "CamelHttpPath",
          "headerValue" : "/api/v1/attachments",
          "language" : "Constant",
          "uuid" : "40075a40-d5fa-4650-a9fd-eaa303f61486"
        }, {
          "headerName" : "Authorization",
          "headerValue" : "Bearer ${bean:tokenGetters?method=getToken({{convey.auth0.yakApiAudience}})}",
          "language" : "Simple",
          "uuid" : "802275c1-414c-4c58-b69b-59e94dad5589"
        }, {
          "headerName" : "Content-Type",
          "headerValue" : "application/json",
          "language" : "Constant",
          "uuid" : "0927ce29-a786-49f5-adfe-3cbd65ffee48"
        }, {
          "headerName" : "x-auth-header",
          "headerValue" : "Basic {{convey.aculab.authorization}}",
          "language" : "Simple",
          "uuid" : "3ec0f2dd-035e-4b2e-aab2-e6b825038c4b"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "log",
      "nodeId" : "533ef025-a478-442c-a8be-0f55da1c34e9",
      "description" : "411.seda.mms.attach.in",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.seda.mms.attach.in",
        "message" : "POST /attachments ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.seda.mms.attach.in&message=POST /attachments ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "http",
      "nodeId" : "ca1f5bb3-6cbc-44e7-94b6-4e54ec3ac201",
      "description" : "POST /attachments",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "POST",
        "httpUri" : "{{convey.api.host}}",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : true,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=POST&httpUri={{convey.api.host}}&socketTimeout=20000&throwExceptionOnFailure=true"
    }, {
      "name" : "log",
      "nodeId" : "f065ce24-c085-4c78-9f0a-0552d157c60e",
      "description" : "411.seda.mms.attach.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.seda.mms.attach.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.seda.mms.attach.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-21",
    "enabled" : true,
    "routeId" : 21,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "55008147-074f-4067-ac72-34cee5c36cba",
      "description" : "inbound-mms",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "inbound-mms",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=inbound-mms"
    }, {
      "name" : "convertBodyTo",
      "nodeId" : "7f96c381-397c-4ea2-af3f-bb22233027ca",
      "description" : "To String",
      "properties" : {
        "_type" : "convertBodyTo",
        "active" : true,
        "camelGroup" : "transform",
        "name" : "convertBodyTo",
        "targetClass" : "String.class",
        "url" : ""
      },
      "_type" : "convertBodyTo",
      "kameletPropertiesUrl" : "?targetClass=String.class"
    }, {
      "name" : "log",
      "nodeId" : "2d4238aa-3609-42d4-94e4-c442c36bc5f5",
      "description" : "411.api.mms.msg.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.api.mms.msg.out",
        "message" : "(${header.CamelHttpResponseCode}) ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.mms.msg.out&message=(${header.CamelHttpResponseCode}) ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    }, {
      "name" : "messageRouter",
      "nodeId" : "eb9ce7a9-8321-4de6-b303-aabe07372166",
      "description" : "",
      "properties" : {
        "_type" : "messageRouter",
        "active" : true,
        "camelGroup" : "routing",
        "name" : "messageRouter",
        "url" : ""
      },
      "_type" : "messageRouter",
      "branches" : [ {
        "type" : "route",
        "label" : "route",
        "route" : [ {
          "name" : "setProperties",
          "nodeId" : "94579be7-6404-4747-bb04-6a292b7dfa76",
          "description" : "Get Message Params",
          "properties" : {
            "_type" : "setProperties",
            "active" : true,
            "addNamespaces" : false,
            "camelGroup" : "core",
            "name" : "setProperties",
            "namespaces" : [ ],
            "propertyList" : [ {
              "language" : "JsonPath",
              "propertyName" : "messageId",
              "propertyValue" : "$.data.message_id",
              "uuid" : "17e8fb4a-60f6-43f1-a68c-98779e6d8ea2"
            }, {
              "language" : "JsonPath",
              "propertyName" : "conversationId",
              "propertyValue" : "$.data.conversation_id",
              "uuid" : "76cbf4db-0d62-448c-9164-2d16208d940b"
            } ],
            "suppressExceptions" : false,
            "url" : ""
          },
          "_type" : "setProperties",
          "kameletPropertiesUrl" : "?messageId=$.data.message_id&conversationId=$.data.conversation_id&addNamespaces=false&suppressExceptions=false"
        }, {
          "name" : "log",
          "nodeId" : "57a7b298-8c4f-4a47-97c4-b10a91e89e00",
          "description" : "active.mms.download",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.sms.active.mms.download",
            "message" : "Processing ${exchangeProperty.numMedia} attachments",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.sms.active.mms.download&message=Processing ${exchangeProperty.numMedia} attachments&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        }, {
          "name" : "process",
          "nodeId" : "5eb8e135-75a9-4a43-9d07-b8b8ac9bd48b",
          "description" : "Download Media",
          "properties" : {
            "_type" : "process",
            "active" : true,
            "camelGroup" : "transform",
            "code" : "CamelContext context = exchange.getContext();\nProducerTemplate t = context.createProducerTemplate();\n\nObjectMapper mapper = new ObjectMapper();\n\nint numMedia = (int)exchange.getProperty(\"numMedia\");\nArrayList<HashMap<String, String>> mediaUrls = (ArrayList)exchange.getProperty(\"mediaUrls\");\n\nfor (int i = 0; i < numMedia; i++) {\n\tHashMap<String, String> media = (HashMap)mediaUrls.get(i);\n\n\tHashMap<String, String> attachmentRequest = new HashMap<String, String>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"message_id\", (String)exchange.getProperty(\"messageId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"content_type\", (String)media.get(\"contentType\"));\n\t\tput(\"uri\", (String)media.get(\"url\"))\n\t}};\n\t\n\tEndpoint endpoint1 = context.getEndpoint(\"seda:post-attachments\");\n\t//Endpoint endpoint2 = context.getEndpoint(\"direct:aculab-mms-downloader\");\n  try {\n\t\tObject response = t.sendBody(endpoint1, ExchangePattern.InOut, mapper.writeValueAsString(attachmentRequest));\n\t\tSystem.out.println(\"download \");\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t\tSystem.out.println(\"Error posting attachment \" + e.getMessage());\n\t}\n}",
            "import" : "import org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.Endpoint;\nimport org.apache.camel.ExchangePattern;\nimport com.fasterxml.jackson.databind.ObjectMapper;",
            "name" : "process",
            "url" : ""
          },
          "_type" : "process",
          "kameletPropertiesUrl" : "?code=CamelContext context = exchange.getContext();\nProducerTemplate t = context.createProducerTemplate();\n\nObjectMapper mapper = new ObjectMapper();\n\nint numMedia = (int)exchange.getProperty(\"numMedia\");\nArrayList<HashMap<String, String>> mediaUrls = (ArrayList)exchange.getProperty(\"mediaUrls\");\n\nfor (int i = 0; i < numMedia; i++) {\n\tHashMap<String, String> media = (HashMap)mediaUrls.get(i);\n\n\tHashMap<String, String> attachmentRequest = new HashMap<String, String>() {{\n\t\tput(\"conversation_id\", (String)exchange.getProperty(\"conversationId\"));\n\t\tput(\"message_id\", (String)exchange.getProperty(\"messageId\"));\n\t\tput(\"recipient_id\", (String)exchange.getProperty(\"recipientId\"));\n\t\tput(\"content_type\", (String)media.get(\"contentType\"));\n\t\tput(\"uri\", (String)media.get(\"url\"))\n\t}};\n\t\n\tEndpoint endpoint1 = context.getEndpoint(\"seda:post-attachments\");\n\t//Endpoint endpoint2 = context.getEndpoint(\"direct:aculab-mms-downloader\");\n  try {\n\t\tObject response = t.sendBody(endpoint1, ExchangePattern.InOut, mapper.writeValueAsString(attachmentRequest));\n\t\tSystem.out.println(\"download \");\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t\tSystem.out.println(\"Error posting attachment \" + e.getMessage());\n\t}\n}&import=import org.apache.camel.CamelContext;\nimport org.apache.camel.ProducerTemplate;\nimport org.apache.camel.Endpoint;\nimport org.apache.camel.ExchangePattern;\nimport com.fasterxml.jackson.databind.ObjectMapper;"
        } ],
        "properties" : { }
      }, {
        "type" : "when",
        "label" : "!2XX",
        "route" : [ {
          "name" : "log",
          "nodeId" : "0ff672cc-3f9e-43c8-b843-874a0f1b244a",
          "description" : "411.api.sms.msg.err",
          "properties" : {
            "_type" : "log",
            "active" : true,
            "advancedParameters" : [ ],
            "camelGroup" : "component",
            "level" : "INFO",
            "logType" : "EIP",
            "loggerName" : "411.api.sms.msg.err",
            "message" : "headers: ${headers}; body: ${body}",
            "multiline" : false,
            "name" : "log",
            "showAll" : false,
            "showBody" : true,
            "showBodyType" : true,
            "showCaughtException" : false,
            "showExchangeId" : false,
            "showHeaders" : false,
            "showProperties" : false,
            "showStackTrace" : false,
            "toDynamicEndpoint" : false,
            "url" : ""
          },
          "_type" : "log",
          "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.api.sms.msg.err&message=headers: ${headers}; body: ${body}&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
        } ],
        "properties" : {
          "addNamespaces" : "false",
          "condition" : "${header.CamelHttpResponseCode} > 202",
          "language" : "Simple",
          "namespaces" : [ ],
          "suppressExceptions" : "false"
        }
      } ],
      "kameletPropertiesUrl" : ""
    } ]
  }, {
    "id" : null,
    "camelRouteId" : "route-22",
    "enabled" : true,
    "routeId" : 22,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "61ca414a-2952-4f94-96e6-686dae5fefdd",
      "description" : "aculab-mms-downloader",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "aculab-mms-downloader",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=aculab-mms-downloader"
    }, {
      "name" : "setHeaders",
      "nodeId" : "29cf37a6-f8bb-420f-8004-bff407144ff1",
      "description" : "Auth Header",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "Authorization",
          "headerValue" : "Basic {{convey.aculab.authorization}}",
          "language" : "Simple",
          "uuid" : "ae00e9fb-a04a-4e39-a2f5-857972299f08"
        }, {
          "headerName" : "CamelHttpQuery",
          "headerValue" : "filetype=msg_media&filename=received/mms/36e1766e_0.1694192311.04276/02-715884996.jpg",
          "language" : "Simple",
          "uuid" : "482d972e-38af-4fa0-bf38-0ad34d53a5d0"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "http",
      "nodeId" : "9083d3d2-7ef9-4293-9135-129d43c55455",
      "description" : "",
      "properties" : {
        "_type" : "http",
        "active" : true,
        "advancedParameters" : [ ],
        "bridgeEndpoint" : false,
        "camelGroup" : "component",
        "connectTimeout" : "20000",
        "connectionRequestTimeout" : "20000",
        "disableStreamCache" : true,
        "httpMethod" : "GET",
        "httpUri" : "ws.aculabcloud.net/file_get",
        "name" : "http",
        "scheme" : "https",
        "socketTimeout" : "20000",
        "throwExceptionOnFailure" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "http",
      "kameletPropertiesUrl" : "?bridgeEndpoint=false&connectTimeout=20000&connectionRequestTimeout=20000&disableStreamCache=true&httpMethod=GET&httpUri=ws.aculabcloud.net/file_get&socketTimeout=20000&throwExceptionOnFailure=false"
    }, {
      "name" : "log",
      "nodeId" : "90d5f1fb-8402-4458-8474-43aff1ad6a5f",
      "description" : "411.mms.download.out",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "411.mms.download.out",
        "message" : "(${header.CamelHttpResponseCode})",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?level=INFO&logType=EIP&loggerName=411.mms.download.out&message=(${header.CamelHttpResponseCode})&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false"
    } ]
  } ],
  "traits" : [ {
    "name" : "health",
    "configuration" : {
      "enabled" : true,
      "livenessProbeEnabled" : true,
      "readinessProbeEnabled" : true
    }
  } ],
  "id" : "491b6d37-751a-4a38-aba9-31477069d57e",
  "name" : "r411-aculab-onramp",
  "description" : "Ingress for Aculab messaging integration",
  "createdAt" : "2023-10-04T18:05:12.251531027",
  "updatedAt" : "2023-10-04T18:05:12.251531728",
  "createdBy" : "612c1b37-217d-49f9-b344-54b8af760f6a",
  "updatedBy" : "612c1b37-217d-49f9-b344-54b8af760f6a"
}